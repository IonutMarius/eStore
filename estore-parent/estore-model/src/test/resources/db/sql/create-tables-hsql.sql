--DROP TABLE purchase;
--DROP TABLE "order";
--DROP TABLE user;
--DROP TABLE address;
--DROP TABLE product_history;
--DROP TABLE product;
--DROP TABLE user_profile;

CREATE TABLE user_profile (
  user_profile_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  name varchar(45) NOT NULL,
  surname varchar(45) NOT NULL,
  phone_number varchar(45) DEFAULT NULL,
  email_address varchar(45) DEFAULT NULL,
  created_by varchar(45) DEFAULT NULL,
  created_date timestamp DEFAULT NULL,
  modified_by varchar(45) DEFAULT NULL,
  modified_date timestamp DEFAULT NULL,
  PRIMARY KEY (user_profile_id)
);

CREATE TABLE product (
  product_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  name varchar(45) NOT NULL,
  brand varchar(45) NOT NULL,
  description varchar(450) DEFAULT NULL,
  price double NOT NULL,
  stock integer NOT NULL,
  created_by varchar(45) DEFAULT NULL,
  created_date timestamp DEFAULT NULL,
  modified_by varchar(45) DEFAULT NULL,
  modified_date timestamp DEFAULT NULL,
  PRIMARY KEY (product_id)
);

CREATE INDEX product_name_index ON product (name);

CREATE INDEX product_brand_index ON product (brand);

CREATE TABLE product_history (
  product_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  name varchar(45) NOT NULL,
  brand varchar(45) NOT NULL,
  description varchar(450) DEFAULT NULL,
  price double NOT NULL,
  stock integer NOT NULL,
  created_by varchar(45) DEFAULT NULL,
  created_date timestamp DEFAULT NULL,
  modified_by varchar(45) DEFAULT NULL,
  modified_date timestamp DEFAULT NULL,
  PRIMARY KEY (product_id)
);

CREATE TABLE address (
  address_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  user_profile_id bigint,
  address_name varchar(45) DEFAULT NULL,
  city varchar(45) NOT NULL,
  postcode varchar(45) NOT NULL,
  address_line_1 varchar(250) NOT NULL,
  address_line_2 varchar(250) DEFAULT NULL,
  created_by varchar(45) DEFAULT NULL,
  created_date timestamp DEFAULT NULL,
  modified_by varchar(45) DEFAULT NULL,
  modified_date timestamp DEFAULT NULL,
  PRIMARY KEY (address_id)
);

CREATE INDEX address_user_profile_fk_idx ON address (user_profile_id);

CREATE TABLE user (
  user_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  user_profile_id bigint NOT NULL,
  username varchar(45) NOT NULL,
  password varchar(45) NOT NULL,
  created_by varchar(45) DEFAULT NULL,
  created_date timestamp DEFAULT NULL,
  modified_by varchar(45) DEFAULT NULL,
  modified_date timestamp DEFAULT NULL,
  PRIMARY KEY (user_id),
  UNIQUE (username),
  CONSTRAINT user_user_profile_fk FOREIGN KEY (user_profile_id) REFERENCES user_profile (user_profile_id) ON DELETE NO ACTION ON UPDATE NO ACTION
);

CREATE INDEX user_user_profile_fk_idx ON user (user_profile_id);

CREATE TABLE "order" (
  order_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  user_id bigint NOT NULL,
  address_id bigint NOT NULL,
  created_by varchar(45) DEFAULT NULL,
  created_date timestamp DEFAULT NULL,
  modified_by varchar(45) DEFAULT NULL,
  modified_date timestamp DEFAULT NULL,
  PRIMARY KEY (order_id),
  CONSTRAINT order_addres_fk FOREIGN KEY (address_id) REFERENCES address (address_id) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT order_user_fk FOREIGN KEY (user_id) REFERENCES user (user_id) ON DELETE NO ACTION ON UPDATE NO ACTION
);

CREATE INDEX order_user_fk_idx ON "order" (user_id);

CREATE INDEX order_addres_fk_idx ON "order" (address_id);

CREATE TABLE purchase (
  purchase_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  product_id bigint NOT NULL,
  order_id bigint NOT NULL,
  quantity integer NOT NULL,
  created_by varchar(45) DEFAULT NULL,
  created_date timestamp DEFAULT NULL,
  modified_by varchar(45) DEFAULT NULL,
  modified_date timestamp DEFAULT NULL,
  PRIMARY KEY (purchase_id),
  CONSTRAINT purchase_product_fk FOREIGN KEY (product_id) REFERENCES product (product_id) ON DELETE NO ACTION ON UPDATE NO ACTION,
);

CREATE INDEX purchase_product_fk_idx ON purchase (product_id);

CREATE INDEX purchase_order_fk_idx ON purchase (order_id);