 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.domain.service.impl.UserServiceImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@17c68925 declaringClass = 'ro.estore.domain.service.impl.UserServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.domain.service.impl.UserServiceImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@13a57a3b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7ca48474, org.springframework.test.context.support.DirtiesContextTestExecutionListener@337d0578, org.springframework.test.context.transaction.TransactionalTestExecutionListener@59e84876, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@61a485d2]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@3c756e4d declaringClass = 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@548b7f67, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7ac7a4e4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6d78f375, org.springframework.test.context.transaction.TransactionalTestExecutionListener@50c87b21, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5f375618]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.domain.service.impl.PurchaseServiceImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@5dfcfece declaringClass = 'ro.estore.domain.service.impl.PurchaseServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.domain.service.impl.PurchaseServiceImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@643b1d11, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2ef5e5e3, org.springframework.test.context.support.DirtiesContextTestExecutionListener@36d4b5c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6d00a15d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@51efea79]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@51081592 declaringClass = 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5419f379, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7dc7cbad, org.springframework.test.context.support.DirtiesContextTestExecutionListener@d2cc05a, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4f933fd1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@548a9f61]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@2a2d45ba declaringClass = 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@482f8f11, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1593948d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1b604f19, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7823a2f9, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4cc0edeb]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@39aeed2f declaringClass = 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@55f3ddb1, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@8bd1b6a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@18be83e4, org.springframework.test.context.transaction.TransactionalTestExecutionListener@cb5822, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4b9e13df]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@1d057a39 declaringClass = 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@59fa1d9b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@28d25987, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4501b7af, org.springframework.test.context.transaction.TransactionalTestExecutionListener@523884b2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5b275dab]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@47c62251 declaringClass = 'ro.estore.domain.service.impl.UserProfileServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.domain.service.impl.UserProfileServiceImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1bce4f0a, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5e3a8624, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5c3bd550, org.springframework.test.context.transaction.TransactionalTestExecutionListener@91161c7, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@604ed9f0]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@6a41eaa2 declaringClass = 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@39c0f4a, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1794d431, org.springframework.test.context.support.DirtiesContextTestExecutionListener@42e26948, org.springframework.test.context.transaction.TransactionalTestExecutionListener@57baeedf, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@343f4d3d]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.domain.service.impl.OrderServiceImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@204f30ec declaringClass = 'ro.estore.domain.service.impl.OrderServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.domain.service.impl.OrderServiceImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@f6c48ac, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@13deb50e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@239963d8, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3abbfa04, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@57fffcd7]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.domain.service.impl.ProductServiceImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@14bf9759 declaringClass = 'ro.estore.domain.service.impl.ProductServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.domain.service.impl.ProductServiceImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6500df86, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@402a079c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@59ec2012, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4cf777e8, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2f686d1f]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.domain.service.impl.AddressServiceImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@1ce92674 declaringClass = 'ro.estore.domain.service.impl.AddressServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.domain.service.impl.AddressServiceImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3f49dace, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1e397ed7, org.springframework.test.context.support.DirtiesContextTestExecutionListener@490ab905, org.springframework.test.context.transaction.TransactionalTestExecutionListener@56ac3a89, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@27c20538]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@3c0f93f1, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to load context from [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
 [main] DEBUG support.AbstractGenericContextLoader - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG env.MutablePropertySources - Adding [systemProperties] PropertySource with lowest search precedence
 [main] DEBUG env.MutablePropertySources - Adding [systemEnvironment] PropertySource with lowest search precedence
 [main] DEBUG env.AbstractEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
 [main] DEBUG support.AnnotationConfigContextLoader - Registering annotated classes: {class ro.estore.model.config.JpaHibernateTestConfig}
 [main] INFO  support.AbstractApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@2b9627bc: startup date [Tue May 10 14:37:33 EEST 2016]; root of context hierarchy
 [main] DEBUG support.AbstractApplicationContext - Bean factory for org.springframework.context.support.GenericApplicationContext@2b9627bc: org.springframework.beans.factory.support.DefaultListableBeanFactory@5e25a92e: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,jpaHibernateTestConfig]; root of factory hierarchy
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 [main] DEBUG env.MutablePropertySources - Adding [class path resource [test.properties]] PropertySource with lowest search precedence
 [main] DEBUG env.MutablePropertySources - Adding [systemProperties] PropertySource with lowest search precedence
 [main] DEBUG env.MutablePropertySources - Adding [systemEnvironment] PropertySource with lowest search precedence
 [main] DEBUG env.AbstractEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved classpath location [ro/estore/domain/converter/] to resources [URL [file:/D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/domain/converter/]]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/domain/converter/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:ro/estore/domain/converter/**/*.class] to resources [file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\AddressConverter.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\GenericEntityConverter.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\OrderConverter.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\ProductConverter.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\PurchaseConverter.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\UserConverter.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\UserProfileConverter.class]]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\AddressConverter.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\OrderConverter.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\ProductConverter.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\PurchaseConverter.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\UserConverter.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\UserProfileConverter.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved classpath location [ro/estore/model/repository/] to resources [URL [file:/D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/model/repository/], URL [file:/D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/model/repository/]]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/model/repository/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/model/repository/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/model/repository/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/model/repository/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:ro/estore/model/repository/**/*.class] to resources [file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\AddressRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\OrderRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\ProductRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\PurchaseRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\UserProfileRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\UserRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\AddressRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\GenericRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\AddressRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\GenericRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\OrderRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\ProductRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\PurchaseRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\UserProfileRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\UserRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\OrderRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\ProductRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\PurchaseRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\UserProfileRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\UserRepository.class]]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\AddressRepositoryJpaImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\OrderRepositoryJpaImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\ProductRepositoryJpaImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\PurchaseRepositoryJpaImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\UserProfileRepositoryJpaImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\UserRepositoryJpaImpl.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved classpath location [ro/estore/domain/service/] to resources [URL [file:/D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/domain/service/], URL [file:/D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/domain/service/]]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/domain/service/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/domain/service/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/domain/service/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/domain/service/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:ro/estore/domain/service/**/*.class] to resources [file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\AddressServiceImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\OrderServiceImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\ProductServiceImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\PurchaseServiceImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\UserProfileServiceImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\UserServiceImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\AddressService.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\GenericService.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\AddressServiceImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\GenericServiceImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\OrderServiceImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\ProductServiceImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\PurchaseServiceImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\UserProfileServiceImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\UserServiceImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\OrderService.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\ProductService.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\PurchaseService.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\UserProfileService.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\UserService.class]]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\AddressServiceImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\OrderServiceImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\ProductServiceImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\PurchaseServiceImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\UserProfileServiceImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\UserServiceImpl.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved classpath location [ro/estore/aspect/] to resources [URL [file:/D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/aspect/]]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\aspect]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\aspect] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/aspect/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:ro/estore/aspect/**/*.class] to resources [file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\aspect\LoggingAspect.class]]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\aspect\LoggingAspect.class]
 [main] DEBUG annotation.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
 [main] DEBUG annotation.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration.org.springframework.transaction.config.internalTransactionAdvisor()
 [main] DEBUG annotation.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration.transactionAttributeSource()
 [main] DEBUG annotation.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration.transactionInterceptor()
 [main] DEBUG annotation.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration.org.springframework.transaction.config.internalTransactionalEventListenerFactory()
 [main] DEBUG annotation.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'ro.estore.model.config.RootJpaHibernateConfig'
 [main] DEBUG annotation.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method ro.estore.model.config.RootJpaHibernateConfig.transactionManager()
 [main] DEBUG annotation.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method ro.estore.model.config.RootJpaHibernateConfig.dataSource()
 [main] DEBUG annotation.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method ro.estore.model.config.RootJpaHibernateConfig.entityManagerFactory()
 [main] DEBUG annotation.ConfigurationClassEnhancer - Successfully enhanced ro.estore.model.config.JpaHibernateTestConfig; enhanced class name is: ro.estore.model.config.JpaHibernateTestConfig$$EnhancerBySpringCGLIB$$60257f5d
 [main] DEBUG annotation.ConfigurationClassPostProcessor - Replacing bean definition 'jpaHibernateTestConfig' existing class 'ro.estore.model.config.JpaHibernateTestConfig' with enhanced class 'ro.estore.model.config.JpaHibernateTestConfig$$EnhancerBySpringCGLIB$$60257f5d'
 [main] DEBUG annotation.ConfigurationClassEnhancer - Successfully enhanced org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; enhanced class name is: org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a43a5dc7
 [main] DEBUG annotation.ConfigurationClassPostProcessor - Replacing bean definition 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' existing class 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' with enhanced class 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a43a5dc7'
 [main] DEBUG annotation.ConfigurationClassEnhancer - Successfully enhanced ro.estore.model.config.RootJpaHibernateConfig; enhanced class name is: ro.estore.model.config.RootJpaHibernateConfig$$EnhancerBySpringCGLIB$$359b202d
 [main] DEBUG annotation.ConfigurationClassPostProcessor - Replacing bean definition 'ro.estore.model.config.RootJpaHibernateConfig' existing class 'ro.estore.model.config.RootJpaHibernateConfig' with enhanced class 'ro.estore.model.config.RootJpaHibernateConfig$$EnhancerBySpringCGLIB$$359b202d'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
 [main] DEBUG support.AbstractApplicationContext - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1fb700ee]
 [main] DEBUG support.AbstractApplicationContext - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@6c779568]
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'entityManagerFactory'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'entityManagerFactory'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
 [main] DEBUG autoproxy.BeanFactoryAdvisorRetrievalHelper - Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.ReflectiveAspectJAdvisorFactory - Found AspectJ method: public java.lang.Object ro.estore.aspect.LoggingAspect.logMethodExecutionTime(org.aspectj.lang.ProceedingJoinPoint)
 [main] DEBUG annotation.ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void ro.estore.aspect.LoggingAspect.logMethodCall(org.aspectj.lang.JoinPoint)
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a43a5dc7]: AutowiredMethodElement for void org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration.setConfigurers(java.util.Collection)
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' to allow for resolving potential circular references
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': AutowiredMethodElement for void org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration.setConfigurers(java.util.Collection)
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry'
 [main] DEBUG autoproxy.BeanFactoryAdvisorRetrievalHelper - Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.BeanFactoryAdvisorRetrievalHelper - Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'transactionAttributeSource'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'transactionAttributeSource'
 [main] DEBUG autoproxy.BeanFactoryAdvisorRetrievalHelper - Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'transactionAttributeSource' to allow for resolving potential circular references
 [main] DEBUG autoproxy.BeanFactoryAdvisorRetrievalHelper - Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.BeanFactoryAdvisorRetrievalHelper - Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'transactionAttributeSource'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'transactionInterceptor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'transactionInterceptor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionAttributeSource'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'transactionInterceptor' to allow for resolving potential circular references
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Invoking afterPropertiesSet() on bean with name 'transactionInterceptor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'transactionInterceptor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'ro.estore.model.config.RootJpaHibernateConfig'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'ro.estore.model.config.RootJpaHibernateConfig'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.model.config.RootJpaHibernateConfig$$EnhancerBySpringCGLIB$$359b202d]: AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.config.RootJpaHibernateConfig.env
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'ro.estore.model.config.RootJpaHibernateConfig' to allow for resolving potential circular references
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.config.RootJpaHibernateConfig': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.config.RootJpaHibernateConfig.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.config.RootJpaHibernateConfig' to bean named 'environment'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'ro.estore.model.config.RootJpaHibernateConfig'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'dataSource'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'dataSource'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'ro.estore.model.config.RootJpaHibernateConfig'
 [main] DEBUG env.PropertySourcesPropertyResolver - Searching for key 'db.driver' in [systemProperties]
 [main] DEBUG env.PropertySourcesPropertyResolver - Searching for key 'db.driver' in [systemEnvironment]
 [main] DEBUG env.PropertySourcesPropertyResolver - Searching for key 'db.driver' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'db.driver' in [class path resource [test.properties]] with type [String] and value 'com.mysql.jdbc.Driver'
 [main] INFO  datasource.DriverManagerDataSource - Loaded JDBC driver: com.mysql.jdbc.Driver
 [main] DEBUG env.PropertySourcesPropertyResolver - Searching for key 'db.url' in [systemProperties]
 [main] DEBUG env.PropertySourcesPropertyResolver - Searching for key 'db.url' in [systemEnvironment]
 [main] DEBUG env.PropertySourcesPropertyResolver - Searching for key 'db.url' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'db.url' in [class path resource [test.properties]] with type [String] and value 'jdbc:mysql://localhost:3306/estore_dev'
 [main] DEBUG env.PropertySourcesPropertyResolver - Searching for key 'db.username' in [systemProperties]
 [main] DEBUG env.PropertySourcesPropertyResolver - Searching for key 'db.username' in [systemEnvironment]
 [main] DEBUG env.PropertySourcesPropertyResolver - Searching for key 'db.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'db.username' in [class path resource [test.properties]] with type [String] and value 'root'
 [main] DEBUG env.PropertySourcesPropertyResolver - Searching for key 'db.password' in [systemProperties]
 [main] DEBUG env.PropertySourcesPropertyResolver - Searching for key 'db.password' in [systemEnvironment]
 [main] DEBUG env.PropertySourcesPropertyResolver - Searching for key 'db.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'db.password' in [class path resource [test.properties]] with type [String] and value 'root'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'dataSource'
 [main] DEBUG jpa.HibernatePersistenceProvider - Logging Provider: org.jboss.logging.Log4jLoggerProvider
 [main] DEBUG env.PropertySourcesPropertyResolver - Searching for key 'hibernate.dialect' in [systemProperties]
 [main] DEBUG env.PropertySourcesPropertyResolver - Searching for key 'hibernate.dialect' in [systemEnvironment]
 [main] DEBUG env.PropertySourcesPropertyResolver - Searching for key 'hibernate.dialect' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'hibernate.dialect' in [class path resource [test.properties]] with type [String] and value 'org.hibernate.dialect.MySQL5Dialect'
 [main] DEBUG env.PropertySourcesPropertyResolver - Searching for key 'hibernate.hbm2ddl.auto' in [systemProperties]
 [main] DEBUG env.PropertySourcesPropertyResolver - Searching for key 'hibernate.hbm2ddl.auto' in [systemEnvironment]
 [main] DEBUG env.PropertySourcesPropertyResolver - Searching for key 'hibernate.hbm2ddl.auto' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'hibernate.hbm2ddl.auto' in [class path resource [test.properties]] with type [String] and value 'validate'
 [main] DEBUG env.PropertySourcesPropertyResolver - Searching for key 'hibernate.show_sql' in [systemProperties]
 [main] DEBUG env.PropertySourcesPropertyResolver - Searching for key 'hibernate.show_sql' in [systemEnvironment]
 [main] DEBUG env.PropertySourcesPropertyResolver - Searching for key 'hibernate.show_sql' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'hibernate.show_sql' in [class path resource [test.properties]] with type [String] and value 'false'
 [main] DEBUG env.PropertySourcesPropertyResolver - Searching for key 'hibernate.format_sql' in [systemProperties]
 [main] DEBUG env.PropertySourcesPropertyResolver - Searching for key 'hibernate.format_sql' in [systemEnvironment]
 [main] DEBUG env.PropertySourcesPropertyResolver - Searching for key 'hibernate.format_sql' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'hibernate.format_sql' in [class path resource [test.properties]] with type [String] and value 'true'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved classpath location [META-INF/persistence.xml] to resources []
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved classpath location [ro/estore/model/] to resources [URL [file:/D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/model/], URL [file:/D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/model/]]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/model/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\config] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/model/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/model/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/model/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/model/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\config] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/model/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\entitiy] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/model/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/model/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/model/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:ro/estore/model/**/*.class] to resources [file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\config\JpaHibernateTestConfig.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\AddressRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\OrderRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\ProductRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\PurchaseRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\UserProfileRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\UserRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\config\JpaHibernateConfig.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\config\RootJpaHibernateConfig.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\entitiy\Address.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\entitiy\ModelEntity.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\entitiy\Order.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\entitiy\Product.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\entitiy\Purchase.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\entitiy\User.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\entitiy\UserProfile.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\AddressRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\GenericRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\AddressRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\GenericRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\OrderRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\ProductRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\PurchaseRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\UserProfileRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\UserRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\OrderRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\ProductRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\PurchaseRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\UserProfileRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\UserRepository.class]]
 [main] INFO  jpa.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'
 [main] DEBUG util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@5451c3a8
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.DriverManagerDataSource@3336e6b6
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ro.estore.model.entitiy.Address
		ro.estore.model.entitiy.Order
		ro.estore.model.entitiy.Product
		ro.estore.model.entitiy.Purchase
		ro.estore.model.entitiy.User
		ro.estore.model.entitiy.UserProfile]
	Mapping files names []
	Properties []
 [main] DEBUG internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
 [main] DEBUG internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
 [main] DEBUG internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
 [main] DEBUG internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
 [main] INFO  hibernate.Version - HHH000412: Hibernate Core {5.0.4.Final}
 [main] INFO  cfg.Environment - HHH000206: hibernate.properties not found
 [main] INFO  cfg.Environment - HHH000021: Bytecode provider name : javassist
 [main] DEBUG spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
 [main] DEBUG internal.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
 [main] INFO  java.JavaReflectionManager - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
 [main] DEBUG type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@373ebf74
 [main] DEBUG type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@373ebf74
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@373ebf74
 [main] DEBUG type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@362045c0
 [main] DEBUG type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@241e8ea6
 [main] DEBUG type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@4dc8caa7
 [main] DEBUG type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6c45ee6e
 [main] DEBUG type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6c45ee6e
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6c45ee6e
 [main] DEBUG type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@59f63e24
 [main] DEBUG type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@59f63e24
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@59f63e24
 [main] DEBUG type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@178213b
 [main] DEBUG type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@178213b
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@178213b
 [main] DEBUG type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@18920cc
 [main] DEBUG type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@18920cc
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@18920cc
 [main] DEBUG type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2c532cd8
 [main] DEBUG type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2c532cd8
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2c532cd8
 [main] DEBUG type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@54c62d71
 [main] DEBUG type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@54c62d71
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@54c62d71
 [main] DEBUG type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2dd80673
 [main] DEBUG type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2dd80673
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2dd80673
 [main] DEBUG type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2072acb2
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2072acb2
 [main] DEBUG type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@732f29af
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@732f29af
 [main] DEBUG type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@64ba3208
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@64ba3208
 [main] DEBUG type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2f17e30d
 [main] DEBUG type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4fce136b
 [main] DEBUG type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@12bd8a64
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@12bd8a64
 [main] DEBUG type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7cbc3762
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7cbc3762
 [main] DEBUG type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@2f48b3d2
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2f48b3d2
 [main] DEBUG type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4c550889
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4c550889
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4c550889
 [main] DEBUG type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@65fe9e33
 [main] DEBUG type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@68ead359
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@68ead359
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@68ead359
 [main] DEBUG type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@a43ce46
 [main] DEBUG type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@7a560583
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7a560583
 [main] DEBUG type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@616fe72b
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@616fe72b
 [main] DEBUG type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@293a5f75
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@293a5f75
 [main] DEBUG type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@784c3487
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@784c3487
 [main] DEBUG type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@366c4480
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@366c4480
 [main] DEBUG type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5cdd09b1
 [main] DEBUG type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5c08c46a
 [main] DEBUG type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5c08c46a
 [main] DEBUG type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5c08c46a
 [main] DEBUG type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4bff64c2
 [main] DEBUG type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4bff64c2
 [main] DEBUG type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4bff64c2
 [main] DEBUG type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@4566d049
 [main] DEBUG type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7f6f61c8
 [main] DEBUG type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7f6f61c8
 [main] DEBUG type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7f6f61c8
 [main] DEBUG type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2a5b3fee
 [main] DEBUG type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2a5b3fee
 [main] DEBUG type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2a5b3fee
 [main] DEBUG type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2cc3ad05
 [main] DEBUG type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@25e2ab5a
 [main] DEBUG type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@2e554a3b
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2e554a3b
 [main] DEBUG type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@56aaaecd
 [main] DEBUG type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@256f8274
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@256f8274
 [main] DEBUG type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@17cdf2d0
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@17cdf2d0
 [main] DEBUG type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2371aaca
 [main] DEBUG type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7b5a12ae
 [main] DEBUG type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@74a6a609
 [main] DEBUG type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@48a12036
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@48a12036
 [main] DEBUG type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@b70da4c
 [main] DEBUG type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4a11eb84
 [main] DEBUG type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4e858e0a
 [main] DEBUG type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@435fb7b5
 [main] DEBUG type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4e70a728
 [main] DEBUG type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@b7838a9
 [main] DEBUG type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@696f0212
 [main] DEBUG type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5733f295
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG internal.JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.7.12-log
      major : 5
      minor : 7
 [main] DEBUG internal.JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.37 ( Revision: 09940f05b4c98150f352e787a2549f11a2e9da93 )
      major : 5
      minor : 1
 [main] DEBUG logging.DelegatingBasicLogger - JDBC version : 4.0
 [main] INFO  dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
 [main] DEBUG internal.StandardRefCursorSupport - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
 [main] DEBUG spi.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
 [main] DEBUG spi.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
 [main] DEBUG relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
 [main] DEBUG cfg.AnnotationBinder - Binding entity from annotated class: ro.estore.model.entitiy.Address
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 [main] DEBUG annotations.EntityBinder - Import with entity name Address
 [main] DEBUG annotations.EntityBinder - Bind entity ro.estore.model.entitiy.Address on table address
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=address_id, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Address:id]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for id
 [main] DEBUG annotations.PropertyBinder - Building property id
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=address_line_1, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property addressLine1 with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Address:addressLine1]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for addressLine1
 [main] DEBUG annotations.PropertyBinder - Building property addressLine1
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=address_line_2, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property addressLine2 with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Address:addressLine2]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for addressLine2
 [main] DEBUG annotations.PropertyBinder - Building property addressLine2
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=address_name, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property addressName with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Address:addressName]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for addressName
 [main] DEBUG annotations.PropertyBinder - Building property addressName
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=city, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property city with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Address:city]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for city
 [main] DEBUG annotations.PropertyBinder - Building property city
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property postcode with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Address:postcode]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for postcode
 [main] DEBUG annotations.PropertyBinder - Building property postcode
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_profile_id', referencedColumn='', mappedBy=''}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=userProfile, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - Building property userProfile
 [main] DEBUG cfg.AnnotationBinder - Binding entity from annotated class: ro.estore.model.entitiy.Order
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 [main] DEBUG annotations.EntityBinder - Import with entity name Order
 [main] DEBUG annotations.EntityBinder - Bind entity ro.estore.model.entitiy.Order on table order
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(order), mappingColumn=order_id, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Order:id]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for id
 [main] DEBUG annotations.PropertyBinder - Building property id
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='address_id', referencedColumn='', mappedBy=''}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(order), mappingColumn=address, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - Building property address
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='order'}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(order), mappingColumn=purchases, insertable=true, updatable=true, unique=false}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(order), mappingColumn=null, insertable=true, updatable=true, unique=false}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(order), mappingColumn=element, insertable=true, updatable=true, unique=false}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(order), mappingColumn=purchases_KEY, insertable=true, updatable=true, unique=false}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='purchases_KEY', referencedColumn='null', mappedBy='null'}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='order'}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='order'}
 [main] DEBUG annotations.CollectionBinder - Collection role: ro.estore.model.entitiy.Order.purchases
 [main] DEBUG annotations.PropertyBinder - Building property purchases
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(order), mappingColumn=user, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - Building property user
 [main] DEBUG cfg.AnnotationBinder - Binding entity from annotated class: ro.estore.model.entitiy.Product
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 [main] DEBUG annotations.EntityBinder - Import with entity name Product
 [main] DEBUG annotations.EntityBinder - Bind entity ro.estore.model.entitiy.Product on table product
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=product_id, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Product:id]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for id
 [main] DEBUG annotations.PropertyBinder - Building property id
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=brand, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property brand with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Product:brand]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for brand
 [main] DEBUG annotations.PropertyBinder - Building property brand
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=description, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property description with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Product:description]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for description
 [main] DEBUG annotations.PropertyBinder - Building property description
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=name, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Product:name]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for name
 [main] DEBUG annotations.PropertyBinder - Building property name
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=price, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property price with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Product:price]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for price
 [main] DEBUG annotations.PropertyBinder - Building property price
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=stock, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property stock with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Product:stock]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for stock
 [main] DEBUG annotations.PropertyBinder - Building property stock
 [main] DEBUG cfg.AnnotationBinder - Binding entity from annotated class: ro.estore.model.entitiy.Purchase
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 [main] DEBUG annotations.EntityBinder - Import with entity name Purchase
 [main] DEBUG annotations.EntityBinder - Bind entity ro.estore.model.entitiy.Purchase on table purchase
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(purchase), mappingColumn=purchase_id, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Purchase:id]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for id
 [main] DEBUG annotations.PropertyBinder - Building property id
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='order_id', referencedColumn='', mappedBy=''}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(purchase), mappingColumn=order, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - Building property order
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='product_id', referencedColumn='', mappedBy=''}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(purchase), mappingColumn=product, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - Building property product
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(purchase), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property quantity with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Purchase:quantity]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for quantity
 [main] DEBUG annotations.PropertyBinder - Building property quantity
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(purchase), mappingColumn=user, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - Building property user
 [main] DEBUG cfg.AnnotationBinder - Binding entity from annotated class: ro.estore.model.entitiy.User
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 [main] DEBUG annotations.EntityBinder - Import with entity name User
 [main] DEBUG annotations.EntityBinder - Bind entity ro.estore.model.entitiy.User on table user
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.User:id]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for id
 [main] DEBUG annotations.PropertyBinder - Building property id
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=orders, insertable=true, updatable=true, unique=false}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=orders_KEY, insertable=true, updatable=true, unique=false}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='orders_KEY', referencedColumn='null', mappedBy='null'}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
 [main] DEBUG annotations.CollectionBinder - Collection role: ro.estore.model.entitiy.User.orders
 [main] DEBUG annotations.PropertyBinder - Building property orders
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property password with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.User:password]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for password
 [main] DEBUG annotations.PropertyBinder - Building property password
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_profile_id', referencedColumn='', mappedBy=''}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=userProfile, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - Building property userProfile
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property username with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.User:username]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for username
 [main] DEBUG annotations.PropertyBinder - Building property username
 [main] DEBUG cfg.AnnotationBinder - Binding entity from annotated class: ro.estore.model.entitiy.UserProfile
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 [main] DEBUG annotations.EntityBinder - Import with entity name UserProfile
 [main] DEBUG annotations.EntityBinder - Bind entity ro.estore.model.entitiy.UserProfile on table user_profile
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=user_profile_id, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.UserProfile:id]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for id
 [main] DEBUG annotations.PropertyBinder - Building property id
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userProfile'}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=addresses, insertable=true, updatable=true, unique=false}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=null, insertable=true, updatable=true, unique=false}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=element, insertable=true, updatable=true, unique=false}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=addresses_KEY, insertable=true, updatable=true, unique=false}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='addresses_KEY', referencedColumn='null', mappedBy='null'}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userProfile'}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userProfile'}
 [main] DEBUG annotations.CollectionBinder - Collection role: ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG annotations.PropertyBinder - Building property addresses
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=email_address, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property emailAddress with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.UserProfile:emailAddress]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for emailAddress
 [main] DEBUG annotations.PropertyBinder - Building property emailAddress
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=name, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.UserProfile:name]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for name
 [main] DEBUG annotations.PropertyBinder - Building property name
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=phone_number, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property phoneNumber with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.UserProfile:phoneNumber]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for phoneNumber
 [main] DEBUG annotations.PropertyBinder - Building property phoneNumber
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=surname, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property surname with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.UserProfile:surname]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for surname
 [main] DEBUG annotations.PropertyBinder - Building property surname
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for id
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for addressLine1
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for addressLine2
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for addressName
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for city
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for postcode
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for id
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for id
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for brand
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for description
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for name
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for price
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for stock
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for id
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for quantity
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for id
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for password
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for username
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for id
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for emailAddress
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for name
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for phoneNumber
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for surname
 [main] DEBUG mapping.PrimaryKey - Forcing column [address_id] to be non-null as it is part of the primary key for table [address]
 [main] DEBUG mapping.PrimaryKey - Forcing column [order_id] to be non-null as it is part of the primary key for table [order]
 [main] DEBUG mapping.PrimaryKey - Forcing column [product_id] to be non-null as it is part of the primary key for table [product]
 [main] DEBUG mapping.PrimaryKey - Forcing column [purchase_id] to be non-null as it is part of the primary key for table [purchase]
 [main] DEBUG mapping.PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
 [main] DEBUG mapping.PrimaryKey - Forcing column [user_profile_id] to be non-null as it is part of the primary key for table [user_profile]
 [main] DEBUG cfg.CollectionSecondPass - Second pass for collection: ro.estore.model.entitiy.Order.purchases
 [main] DEBUG annotations.CollectionBinder - Binding a OneToMany: ro.estore.model.entitiy.Order.purchases through a foreign key
 [main] DEBUG annotations.CollectionBinder - Mapping collection: ro.estore.model.entitiy.Order.purchases -> purchase
 [main] DEBUG annotations.TableBinder - Retrieving property ro.estore.model.entitiy.Purchase.order
 [main] DEBUG cfg.CollectionSecondPass - Mapped collection key: order_id, one-to-many: ro.estore.model.entitiy.Purchase
 [main] DEBUG cfg.CollectionSecondPass - Second pass for collection: ro.estore.model.entitiy.User.orders
 [main] DEBUG annotations.CollectionBinder - Binding a OneToMany: ro.estore.model.entitiy.User.orders through a foreign key
 [main] DEBUG annotations.CollectionBinder - Mapping collection: ro.estore.model.entitiy.User.orders -> order
 [main] DEBUG annotations.TableBinder - Retrieving property ro.estore.model.entitiy.Order.user
 [main] DEBUG cfg.CollectionSecondPass - Mapped collection key: user_id, one-to-many: ro.estore.model.entitiy.Order
 [main] DEBUG cfg.CollectionSecondPass - Second pass for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG annotations.CollectionBinder - Binding a OneToMany: ro.estore.model.entitiy.UserProfile.addresses through a foreign key
 [main] DEBUG annotations.CollectionBinder - Mapping collection: ro.estore.model.entitiy.UserProfile.addresses -> address
 [main] DEBUG annotations.TableBinder - Retrieving property ro.estore.model.entitiy.Address.userProfile
 [main] DEBUG cfg.CollectionSecondPass - Mapped collection key: user_profile_id, one-to-many: ro.estore.model.entitiy.Address
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.Address
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.User
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.Order
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.Product
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.User
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.Address
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.User
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.Order
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.Product
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.User
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.SessionFactoryImpl - Building session factory
 [main] DEBUG cfg.Settings - SessionFactory name : null
 [main] DEBUG cfg.Settings - Automatic flush during beforeCompletion(): disabled
 [main] DEBUG cfg.Settings - Automatic session close at end of transaction: disabled
 [main] DEBUG cfg.Settings - Statistics: disabled
 [main] DEBUG cfg.Settings - Deleted entity synthetic identifier rollback: disabled
 [main] DEBUG cfg.Settings - Default entity-mode: pojo
 [main] DEBUG cfg.Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
 [main] DEBUG cfg.Settings - Allow initialization of lazy state outside session : disabled
 [main] DEBUG cfg.Settings - Using BatchFetchStyle : LEGACY
 [main] DEBUG cfg.Settings - Default batch fetch size: -1
 [main] DEBUG cfg.Settings - Maximum outer join fetch depth: 2
 [main] DEBUG cfg.Settings - Default null ordering: NONE
 [main] DEBUG cfg.Settings - Order SQL updates by primary key: disabled
 [main] DEBUG cfg.Settings - Order SQL inserts for batching: disabled
 [main] DEBUG cfg.Settings - multi-tenancy strategy : NONE
 [main] DEBUG cfg.Settings - JTA Track by Thread: enabled
 [main] DEBUG cfg.Settings - Query language substitutions: {}
 [main] DEBUG cfg.Settings - JPA query language strict compliance: disabled
 [main] DEBUG cfg.Settings - Named query checking : enabled
 [main] DEBUG cfg.Settings - Second-level cache: enabled
 [main] DEBUG cfg.Settings - Second-level query cache: disabled
 [main] DEBUG cfg.Settings - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@49bd54f7
 [main] DEBUG cfg.Settings - Second-level cache region prefix: null
 [main] DEBUG cfg.Settings - Optimize second-level cache for minimal puts: disabled
 [main] DEBUG cfg.Settings - Structured second-level cache entries: disabled
 [main] DEBUG cfg.Settings - Second-level cache direct-reference entries: disabled
 [main] DEBUG cfg.Settings - Automatic eviction of collection cache: disabled
 [main] DEBUG cfg.Settings - JDBC batch size: 15
 [main] DEBUG cfg.Settings - JDBC batch updates for versioned data: enabled
 [main] DEBUG cfg.Settings - Scrollable result sets: enabled
 [main] DEBUG cfg.Settings - Wrap result sets: disabled
 [main] DEBUG cfg.Settings - JDBC3 getGeneratedKeys(): enabled
 [main] DEBUG cfg.Settings - JDBC result set fetch size: null
 [main] DEBUG cfg.Settings - Connection release mode: ON_CLOSE
 [main] DEBUG cfg.Settings - Generate SQL with comments: disabled
 [main] DEBUG internal.SessionFactoryImpl - Returning a Reference to the SessionFactory
 [main] DEBUG internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
 [main] DEBUG internal.SessionFactoryImpl - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.91-b14, sun.boot.library.path=D:\software\Java\jdk1.8.0_91\jre\bin, user.country.format=RO, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@718607eb, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\other\projects\eStore\estore-parent\estore-model, java.runtime.version=1.8.0_91-b14, javax.persistence.sharedCache.mode=UNSPECIFIED, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=D:\software\Java\jdk1.8.0_91\jre\lib\endorsed, java.io.tmpdir=C:\Users\IonutBa\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1250, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@3336e6b6, java.library.path=D:\software\Java\jdk1.8.0_91\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/work/jdk1.7.0_51_x64/bin/../jre/bin/server;D:/work/jdk1.7.0_51_x64/bin/../jre/bin;D:/work/jdk1.7.0_51_x64/bin/../jre/lib/amd64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Skype\Phone\;D:\work\jdk1.7.0_51_x64\bin;D:\software\PuTTY\;D:\software\TortoiseSVN\bin;D:\languages\NodeJs\;C:\ProgramData\IonutBa\atom\bin;C:\Users\IonutBa\AppData\Roaming\npm;C:\Users\IonutBa\Desktop;;., java.class.version=52.0, hibernate.ejb.persistenceUnitName=default, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\IonutBa, user.timezone=Europe/Athens, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=Cp1250, java.specification.version=1.8, hibernate.format_sql=true, user.name=IonutBa, java.class.path=D:\other\projects\eStore\estore-parent\estore-model\target\test-classes;D:\other\projects\eStore\estore-parent\estore-model\target\classes;C:\Users\IonutBa\.m2\repository\org\springframework\spring-orm\4.2.5.RELEASE\spring-orm-4.2.5.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-beans\4.2.5.RELEASE\spring-beans-4.2.5.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-core\4.2.5.RELEASE\spring-core-4.2.5.RELEASE.jar;C:\Users\IonutBa\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-jdbc\4.2.5.RELEASE\spring-jdbc-4.2.5.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-tx\4.2.5.RELEASE\spring-tx-4.2.5.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\IonutBa\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\IonutBa\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\IonutBa\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\IonutBa\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\IonutBa\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\IonutBa\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\IonutBa\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\IonutBa\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\IonutBa\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\IonutBa\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\IonutBa\.m2\repository\mysql\mysql-connector-java\5.1.37\mysql-connector-java-5.1.37.jar;C:\Users\IonutBa\.m2\repository\org\apache\commons\commons-lang3\3.4\commons-lang3-3.4.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-context\4.2.5.RELEASE\spring-context-4.2.5.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-aop\4.2.5.RELEASE\spring-aop-4.2.5.RELEASE.jar;C:\Users\IonutBa\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-expression\4.2.5.RELEASE\spring-expression-4.2.5.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-test\4.2.5.RELEASE\spring-test-4.2.5.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-aspects\4.2.5.RELEASE\spring-aspects-4.2.5.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\aspectj\aspectjweaver\1.8.8\aspectjweaver-1.8.8.jar;C:\Users\IonutBa\.m2\repository\org\slf4j\slf4j-log4j12\1.7.13\slf4j-log4j12-1.7.13.jar;C:\Users\IonutBa\.m2\repository\org\slf4j\slf4j-api\1.7.13\slf4j-api-1.7.13.jar;C:\Users\IonutBa\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\IonutBa\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\IonutBa\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/other/eclipse/eclipse/configuration/org.eclipse.osgi/383/0/.cp/;/D:/other/eclipse/eclipse/configuration/org.eclipse.osgi/382/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=false, javax.persistence.validation.mode=AUTO, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 54521 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -testNameFile C:\Users\IonutBa\AppData\Local\Temp\testNames811835118365202861.txt, java.home=D:\software\Java\jdk1.8.0_91\jre, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, user.language.format=ro, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_91, java.ext.dirs=D:\software\Java\jdk1.8.0_91\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\software\Java\jdk1.8.0_91\jre\lib\resources.jar;D:\software\Java\jdk1.8.0_91\jre\lib\rt.jar;D:\software\Java\jdk1.8.0_91\jre\lib\sunrsasign.jar;D:\software\Java\jdk1.8.0_91\jre\lib\jsse.jar;D:\software\Java\jdk1.8.0_91\jre\lib\jce.jar;D:\software\Java\jdk1.8.0_91\jre\lib\charsets.jar;D:\software\Java\jdk1.8.0_91\jre\lib\jfr.jar;D:\software\Java\jdk1.8.0_91\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=validate, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
 [main] DEBUG spi.JaccIntegrator - Skipping JACC integration as it was not enabled
 [main] DEBUG spi.CascadeStyles - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.Product] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.Product
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.Product] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.Product
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.UserProfile] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.UserProfile] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.Purchase] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.Purchase
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.Purchase] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.Purchase
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.Order] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.Order
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.Order] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.Order
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.User] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.User
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.User] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.User
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.Address] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.Address
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.Address] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.Address
 [main] DEBUG collection.AbstractCollectionPersister - Static SQL for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG collection.AbstractCollectionPersister -  Row insert: update address set user_profile_id=? where address_id=?
 [main] DEBUG collection.AbstractCollectionPersister -  Row update: update address set  where address_id=?
 [main] DEBUG collection.AbstractCollectionPersister -  Row delete: update address set user_profile_id=null where user_profile_id=? and address_id=?
 [main] DEBUG collection.AbstractCollectionPersister -  One-shot delete: update address set user_profile_id=null where user_profile_id=?
 [main] DEBUG collection.AbstractCollectionPersister - Static SQL for collection: ro.estore.model.entitiy.User.orders
 [main] DEBUG collection.AbstractCollectionPersister -  Row insert: update `order` set user_id=? where order_id=?
 [main] DEBUG collection.AbstractCollectionPersister -  Row update: update `order` set  where order_id=?
 [main] DEBUG collection.AbstractCollectionPersister -  Row delete: update `order` set user_id=null where user_id=? and order_id=?
 [main] DEBUG collection.AbstractCollectionPersister -  One-shot delete: update `order` set user_id=null where user_id=?
 [main] DEBUG collection.AbstractCollectionPersister - Static SQL for collection: ro.estore.model.entitiy.Order.purchases
 [main] DEBUG collection.AbstractCollectionPersister -  Row insert: update purchase set order_id=? where purchase_id=?
 [main] DEBUG collection.AbstractCollectionPersister -  Row update: update purchase set  where purchase_id=?
 [main] DEBUG collection.AbstractCollectionPersister -  Row delete: update purchase set order_id=null where order_id=? and purchase_id=?
 [main] DEBUG collection.AbstractCollectionPersister -  One-shot delete: update purchase set order_id=null where order_id=?
 [main] DEBUG entity.AbstractEntityPersister - Static SQL for entity: ro.estore.model.entitiy.Product
 [main] DEBUG entity.AbstractEntityPersister -  Version select: select product_id from product where product_id =?
 [main] DEBUG entity.AbstractEntityPersister -  Snapshot select: select product_.product_id, product_.brand as brand2_2_, product_.description as descript3_2_, product_.name as name4_2_, product_.price as price5_2_, product_.stock as stock6_2_ from product product_ where product_.product_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Insert 0: insert into product (brand, description, name, price, stock, product_id) values (?, ?, ?, ?, ?, ?)
 [main] DEBUG logging.DelegatingBasicLogger -  Update 0: update product set brand=?, description=?, name=?, price=?, stock=? where product_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Delete 0: delete from product where product_id=?
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b1c0397]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [NONE]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=?
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5226e402]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [READ]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=?
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@189b5fb1]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [UPGRADE]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ddd3478]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [UPGRADE_NOWAIT]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d33940d]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [UPGRADE_SKIPLOCKED]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37c5fc56]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [FORCE]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50825a02]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [PESSIMISTIC_READ]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=? lock in share mode
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@703feacd]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [PESSIMISTIC_WRITE]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3241713e]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [PESSIMISTIC_FORCE_INCREMENT]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@512d4583]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [OPTIMISTIC]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=?
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13cd7ea5]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [OPTIMISTIC_FORCE_INCREMENT]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_MERGE on entity ro.estore.model.entitiy.Product: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_REFRESH on entity ro.estore.model.entitiy.Product: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=?
 [main] DEBUG entity.AbstractEntityPersister - Static SQL for entity: ro.estore.model.entitiy.UserProfile
 [main] DEBUG entity.AbstractEntityPersister -  Version select: select user_profile_id from user_profile where user_profile_id =?
 [main] DEBUG entity.AbstractEntityPersister -  Snapshot select: select userprofil_.user_profile_id, userprofil_.email_address as email_ad2_5_, userprofil_.name as name3_5_, userprofil_.phone_number as phone_nu4_5_, userprofil_.surname as surname5_5_ from user_profile userprofil_ where userprofil_.user_profile_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Insert 0: insert into user_profile (email_address, name, phone_number, surname, user_profile_id) values (?, ?, ?, ?, ?)
 [main] DEBUG logging.DelegatingBasicLogger -  Update 0: update user_profile set email_address=?, name=?, phone_number=?, surname=? where user_profile_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Delete 0: delete from user_profile where user_profile_id=?
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@997d532]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [NONE]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76911385]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [READ]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@160396db]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [UPGRADE]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40ab8a8]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [UPGRADE_NOWAIT]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65cc8228]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [UPGRADE_SKIPLOCKED]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76b224cd]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [FORCE]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dd93a21]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [PESSIMISTIC_READ]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? lock in share mode
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@304a3655]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [PESSIMISTIC_WRITE]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12a160c2]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [PESSIMISTIC_FORCE_INCREMENT]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b3871d6]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [OPTIMISTIC]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2eb79cbe]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [OPTIMISTIC_FORCE_INCREMENT]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_MERGE on entity ro.estore.model.entitiy.UserProfile: select userprofil0_.user_profile_id as user_pro1_5_1_, userprofil0_.email_address as email_ad2_5_1_, userprofil0_.name as name3_5_1_, userprofil0_.phone_number as phone_nu4_5_1_, userprofil0_.surname as surname5_5_1_, addresses1_.user_profile_id as user_pro7_0_3_, addresses1_.address_id as address_1_0_3_, addresses1_.address_id as address_1_0_0_, addresses1_.address_line_1 as address_2_0_0_, addresses1_.address_line_2 as address_3_0_0_, addresses1_.address_name as address_4_0_0_, addresses1_.city as city5_0_0_, addresses1_.postcode as postcode6_0_0_, addresses1_.user_profile_id as user_pro7_0_0_ from user_profile userprofil0_ left outer join address addresses1_ on userprofil0_.user_profile_id=addresses1_.user_profile_id where userprofil0_.user_profile_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_REFRESH on entity ro.estore.model.entitiy.UserProfile: select userprofil0_.user_profile_id as user_pro1_5_1_, userprofil0_.email_address as email_ad2_5_1_, userprofil0_.name as name3_5_1_, userprofil0_.phone_number as phone_nu4_5_1_, userprofil0_.surname as surname5_5_1_, addresses1_.user_profile_id as user_pro7_0_3_, addresses1_.address_id as address_1_0_3_, addresses1_.address_id as address_1_0_0_, addresses1_.address_line_1 as address_2_0_0_, addresses1_.address_line_2 as address_3_0_0_, addresses1_.address_name as address_4_0_0_, addresses1_.city as city5_0_0_, addresses1_.postcode as postcode6_0_0_, addresses1_.user_profile_id as user_pro7_0_0_ from user_profile userprofil0_ left outer join address addresses1_ on userprofil0_.user_profile_id=addresses1_.user_profile_id where userprofil0_.user_profile_id=?
 [main] DEBUG entity.AbstractEntityPersister - Static SQL for entity: ro.estore.model.entitiy.Purchase
 [main] DEBUG entity.AbstractEntityPersister -  Version select: select purchase_id from purchase where purchase_id =?
 [main] DEBUG entity.AbstractEntityPersister -  Snapshot select: select purchase_.purchase_id, purchase_.order_id as order_id3_3_, purchase_.product_id as product_4_3_, purchase_.quantity as quantity2_3_, purchase_.user_id as user_id5_3_ from purchase purchase_ where purchase_.purchase_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Insert 0: insert into purchase (order_id, product_id, quantity, user_id, purchase_id) values (?, ?, ?, ?, ?)
 [main] DEBUG logging.DelegatingBasicLogger -  Update 0: update purchase set order_id=?, product_id=?, quantity=?, user_id=? where purchase_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Delete 0: delete from purchase where purchase_id=?
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23ee75c5]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73877e19]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order.address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3af356f]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order.address.addressLine1
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order.address.addressLine2
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order.address.addressName
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order.address.city
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order.address.postcode
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order.address.userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e46d648]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order.purchases
 [main] DEBUG spi.MetamodelGraphWalker - Property path deemed to be circular : order.purchases
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order.user
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51751e5f]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order.user.orders
 [main] DEBUG spi.MetamodelGraphWalker - Property path deemed to be circular : order.user.orders
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order.user.password
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order.user.userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7068f7ca]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order.user.username
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38548b19]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.brand
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.description
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.price
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.stock
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@303a5119]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.orders
 [main] DEBUG spi.MetamodelGraphWalker - Property path deemed to be circular : user.orders
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.password
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bcb79c2]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.userProfile.addresses
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.userProfile.emailAddress
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.userProfile.name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.userProfile.phoneNumber
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.userProfile.surname
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.username
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.order)
             - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Purchase.order.address)
                - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Purchase.order.address.userProfile)
             - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:4>, path=ro.estore.model.entitiy.Purchase.order.user)
                - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:5>, path=ro.estore.model.entitiy.Purchase.order.user.userProfile)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:6>, path=ro.estore.model.entitiy.Purchase.product)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:7>, path=ro.estore.model.entitiy.Purchase.user)
             - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:8>, path=ro.estore.model.entitiy.Purchase.user.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}
          - JOIN (JoinDefinedByMetadata(order)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ro.estore.model.entitiy.Order)
                - SQL table alias mapping - order1_
                - alias suffix - 1_
                - suffixed key columns - {order_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(address)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ro.estore.model.entitiy.Address)
                      - SQL table alias mapping - address2_
                      - alias suffix - 2_
                      - suffixed key columns - {address_1_0_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=ro.estore.model.entitiy.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {user_id1_4_3_}
          - JOIN (JoinDefinedByMetadata(product)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=ro.estore.model.entitiy.Product)
                - SQL table alias mapping - product4_
                - alias suffix - 4_
                - suffixed key columns - {product_1_2_4_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:7>
             - EntityQuerySpaceImpl(uid=<gen:7>, entity=ro.estore.model.entitiy.User)
                - SQL table alias mapping - user5_
                - alias suffix - 5_
                - suffixed key columns - {user_id1_4_5_}
                - JOIN (JoinDefinedByMetadata(userProfile)) : <gen:7> -> <gen:8>
                   - EntityQuerySpaceImpl(uid=<gen:8>, entity=ro.estore.model.entitiy.UserProfile)
                      - SQL table alias mapping - userprofil6_
                      - alias suffix - 6_
                      - suffixed key columns - {user_pro1_5_6_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [NONE]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.order_id as order_id3_3_0_, purchase0_.product_id as product_4_3_0_, purchase0_.quantity as quantity2_3_0_, purchase0_.user_id as user_id5_3_0_, order1_.order_id as order_id1_1_1_, order1_.address_id as address_2_1_1_, order1_.user_id as user_id3_1_1_, address2_.address_id as address_1_0_2_, address2_.address_line_1 as address_2_0_2_, address2_.address_line_2 as address_3_0_2_, address2_.address_name as address_4_0_2_, address2_.city as city5_0_2_, address2_.postcode as postcode6_0_2_, address2_.user_profile_id as user_pro7_0_2_, user3_.user_id as user_id1_4_3_, user3_.password as password2_4_3_, user3_.user_profile_id as user_pro4_4_3_, user3_.username as username3_4_3_, product4_.product_id as product_1_2_4_, product4_.brand as brand2_2_4_, product4_.description as descript3_2_4_, product4_.name as name4_2_4_, product4_.price as price5_2_4_, product4_.stock as stock6_2_4_, user5_.user_id as user_id1_4_5_, user5_.password as password2_4_5_, user5_.user_profile_id as user_pro4_4_5_, user5_.username as username3_4_5_, userprofil6_.user_profile_id as user_pro1_5_6_, userprofil6_.email_address as email_ad2_5_6_, userprofil6_.name as name3_5_6_, userprofil6_.phone_number as phone_nu4_5_6_, userprofil6_.surname as surname5_5_6_ from purchase purchase0_ left outer join `order` order1_ on purchase0_.order_id=order1_.order_id left outer join address address2_ on order1_.address_id=address2_.address_id left outer join user user3_ on order1_.user_id=user3_.user_id left outer join product product4_ on purchase0_.product_id=product4_.product_id left outer join user user5_ on purchase0_.user_id=user5_.user_id left outer join user_profile userprofil6_ on user5_.user_profile_id=userprofil6_.user_profile_id where purchase0_.purchase_id=?
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fca2a8f]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71391b3f]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order.address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12db3386]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order.address.addressLine1
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order.address.addressLine2
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order.address.addressName
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order.address.city
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order.address.postcode
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order.address.userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79a1728c]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order.purchases
 [main] DEBUG spi.MetamodelGraphWalker - Property path deemed to be circular : order.purchases
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order.user
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a7f0ab6]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order.user.orders
 [main] DEBUG spi.MetamodelGraphWalker - Property path deemed to be circular : order.user.orders
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order.user.password
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order.user.userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42c2f48c]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order.user.username
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3005db4a]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.brand
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.description
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.price
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.stock
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@198ef2ce]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.orders
 [main] DEBUG spi.MetamodelGraphWalker - Property path deemed to be circular : user.orders
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.password
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52fc5eb1]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.userProfile.addresses
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.userProfile.emailAddress
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.userProfile.name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.userProfile.phoneNumber
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.userProfile.surname
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.username
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.order)
             - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Purchase.order.address)
                - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Purchase.order.address.userProfile)
             - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:4>, path=ro.estore.model.entitiy.Purchase.order.user)
                - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:5>, path=ro.estore.model.entitiy.Purchase.order.user.userProfile)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:6>, path=ro.estore.model.entitiy.Purchase.product)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:7>, path=ro.estore.model.entitiy.Purchase.user)
             - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:8>, path=ro.estore.model.entitiy.Purchase.user.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}
          - JOIN (JoinDefinedByMetadata(order)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ro.estore.model.entitiy.Order)
                - SQL table alias mapping - order1_
                - alias suffix - 1_
                - suffixed key columns - {order_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(address)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ro.estore.model.entitiy.Address)
                      - SQL table alias mapping - address2_
                      - alias suffix - 2_
                      - suffixed key columns - {address_1_0_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=ro.estore.model.entitiy.User)
                      - SQL table alias mapping - user3_
                      - alias suffix - 3_
                      - suffixed key columns - {user_id1_4_3_}
          - JOIN (JoinDefinedByMetadata(product)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=ro.estore.model.entitiy.Product)
                - SQL table alias mapping - product4_
                - alias suffix - 4_
                - suffixed key columns - {product_1_2_4_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:7>
             - EntityQuerySpaceImpl(uid=<gen:7>, entity=ro.estore.model.entitiy.User)
                - SQL table alias mapping - user5_
                - alias suffix - 5_
                - suffixed key columns - {user_id1_4_5_}
                - JOIN (JoinDefinedByMetadata(userProfile)) : <gen:7> -> <gen:8>
                   - EntityQuerySpaceImpl(uid=<gen:8>, entity=ro.estore.model.entitiy.UserProfile)
                      - SQL table alias mapping - userprofil6_
                      - alias suffix - 6_
                      - suffixed key columns - {user_pro1_5_6_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [READ]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.order_id as order_id3_3_0_, purchase0_.product_id as product_4_3_0_, purchase0_.quantity as quantity2_3_0_, purchase0_.user_id as user_id5_3_0_, order1_.order_id as order_id1_1_1_, order1_.address_id as address_2_1_1_, order1_.user_id as user_id3_1_1_, address2_.address_id as address_1_0_2_, address2_.address_line_1 as address_2_0_2_, address2_.address_line_2 as address_3_0_2_, address2_.address_name as address_4_0_2_, address2_.city as city5_0_2_, address2_.postcode as postcode6_0_2_, address2_.user_profile_id as user_pro7_0_2_, user3_.user_id as user_id1_4_3_, user3_.password as password2_4_3_, user3_.user_profile_id as user_pro4_4_3_, user3_.username as username3_4_3_, product4_.product_id as product_1_2_4_, product4_.brand as brand2_2_4_, product4_.description as descript3_2_4_, product4_.name as name4_2_4_, product4_.price as price5_2_4_, product4_.stock as stock6_2_4_, user5_.user_id as user_id1_4_5_, user5_.password as password2_4_5_, user5_.user_profile_id as user_pro4_4_5_, user5_.username as username3_4_5_, userprofil6_.user_profile_id as user_pro1_5_6_, userprofil6_.email_address as email_ad2_5_6_, userprofil6_.name as name3_5_6_, userprofil6_.phone_number as phone_nu4_5_6_, userprofil6_.surname as surname5_5_6_ from purchase purchase0_ left outer join `order` order1_ on purchase0_.order_id=order1_.order_id left outer join address address2_ on order1_.address_id=address2_.address_id left outer join user user3_ on order1_.user_id=user3_.user_id left outer join product product4_ on purchase0_.product_id=product4_.product_id left outer join user user5_ on purchase0_.user_id=user5_.user_id left outer join user_profile userprofil6_ on user5_.user_profile_id=userprofil6_.user_profile_id where purchase0_.purchase_id=?
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14151bc5]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a49fe]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66596a88]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5aae8eb5]
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Purchase.product)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Purchase.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [UPGRADE]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.order_id as order_id3_3_0_, purchase0_.product_id as product_4_3_0_, purchase0_.quantity as quantity2_3_0_, purchase0_.user_id as user_id5_3_0_ from purchase purchase0_ where purchase0_.purchase_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76954a33]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@982bb90]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27f74733]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bef452c]
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Purchase.product)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Purchase.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [UPGRADE_NOWAIT]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.order_id as order_id3_3_0_, purchase0_.product_id as product_4_3_0_, purchase0_.quantity as quantity2_3_0_, purchase0_.user_id as user_id5_3_0_ from purchase purchase0_ where purchase0_.purchase_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bb8855f]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a29f290]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bee18dc]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44f3fe83]
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Purchase.product)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Purchase.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [UPGRADE_SKIPLOCKED]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.order_id as order_id3_3_0_, purchase0_.product_id as product_4_3_0_, purchase0_.quantity as quantity2_3_0_, purchase0_.user_id as user_id5_3_0_ from purchase purchase0_ where purchase0_.purchase_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44c5a16f]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a6ebe1e]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21325036]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@489543a6]
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Purchase.product)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Purchase.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [FORCE]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.order_id as order_id3_3_0_, purchase0_.product_id as product_4_3_0_, purchase0_.quantity as quantity2_3_0_, purchase0_.user_id as user_id5_3_0_ from purchase purchase0_ where purchase0_.purchase_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6272c96f]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ee34b1b]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c89bb12]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48c4245d]
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Purchase.product)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Purchase.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [PESSIMISTIC_READ]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.order_id as order_id3_3_0_, purchase0_.product_id as product_4_3_0_, purchase0_.quantity as quantity2_3_0_, purchase0_.user_id as user_id5_3_0_ from purchase purchase0_ where purchase0_.purchase_id=? lock in share mode
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3df978b9]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8a62297]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61a91912]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1763992e]
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Purchase.product)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Purchase.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [PESSIMISTIC_WRITE]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.order_id as order_id3_3_0_, purchase0_.product_id as product_4_3_0_, purchase0_.quantity as quantity2_3_0_, purchase0_.user_id as user_id5_3_0_ from purchase purchase0_ where purchase0_.purchase_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c92166b]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cd1c1dc]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47f08b81]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b9dfc5a]
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Purchase.product)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Purchase.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [PESSIMISTIC_FORCE_INCREMENT]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.order_id as order_id3_3_0_, purchase0_.product_id as product_4_3_0_, purchase0_.quantity as quantity2_3_0_, purchase0_.user_id as user_id5_3_0_ from purchase purchase0_ where purchase0_.purchase_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2787de58]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@267517e4]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@426e505c]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b022357]
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Purchase.product)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Purchase.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [OPTIMISTIC]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.order_id as order_id3_3_0_, purchase0_.product_id as product_4_3_0_, purchase0_.quantity as quantity2_3_0_, purchase0_.user_id as user_id5_3_0_ from purchase purchase0_ where purchase0_.purchase_id=?
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f8e0cee]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5116ac09]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bc425e7]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b2a30d]
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Purchase.product)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Purchase.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [OPTIMISTIC_FORCE_INCREMENT]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.order_id as order_id3_3_0_, purchase0_.product_id as product_4_3_0_, purchase0_.quantity as quantity2_3_0_, purchase0_.user_id as user_id5_3_0_ from purchase purchase0_ where purchase0_.purchase_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_MERGE on entity ro.estore.model.entitiy.Purchase: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.order_id as order_id3_3_0_, purchase0_.product_id as product_4_3_0_, purchase0_.quantity as quantity2_3_0_, purchase0_.user_id as user_id5_3_0_ from purchase purchase0_ where purchase0_.purchase_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_REFRESH on entity ro.estore.model.entitiy.Purchase: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.order_id as order_id3_3_0_, purchase0_.product_id as product_4_3_0_, purchase0_.quantity as quantity2_3_0_, purchase0_.user_id as user_id5_3_0_ from purchase purchase0_ where purchase0_.purchase_id=?
 [main] DEBUG entity.AbstractEntityPersister - Static SQL for entity: ro.estore.model.entitiy.Order
 [main] DEBUG entity.AbstractEntityPersister -  Version select: select order_id from `order` where order_id =?
 [main] DEBUG entity.AbstractEntityPersister -  Snapshot select: select order_.order_id, order_.address_id as address_2_1_, order_.user_id as user_id3_1_ from `order` order_ where order_.order_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Insert 0: insert into `order` (address_id, user_id, order_id) values (?, ?, ?)
 [main] DEBUG logging.DelegatingBasicLogger -  Update 0: update `order` set address_id=?, user_id=? where order_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Delete 0: delete from `order` where order_id=?
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@322803db]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ceb7b5e]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.addressLine1
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.addressLine2
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.addressName
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.city
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.postcode
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f14e5bf]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.userProfile.addresses
 [main] DEBUG spi.MetamodelGraphWalker - Property path deemed to be circular : address.userProfile.addresses
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.userProfile.emailAddress
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.userProfile.name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.userProfile.phoneNumber
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.userProfile.surname
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a91d146]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.orders
 [main] DEBUG spi.MetamodelGraphWalker - Property path deemed to be circular : user.orders
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.password
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f952d6c]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.userProfile.addresses
 [main] DEBUG spi.MetamodelGraphWalker - Property path deemed to be circular : user.userProfile.addresses
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.userProfile.emailAddress
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.userProfile.name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.userProfile.phoneNumber
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.userProfile.surname
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.username
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
             - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.address.userProfile)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Order.user)
             - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:4>, path=ro.estore.model.entitiy.Order.user.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(address)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ro.estore.model.entitiy.Address)
                - SQL table alias mapping - address1_
                - alias suffix - 1_
                - suffixed key columns - {address_1_0_1_}
                - JOIN (JoinDefinedByMetadata(userProfile)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ro.estore.model.entitiy.UserProfile)
                      - SQL table alias mapping - userprofil2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_pro1_5_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=ro.estore.model.entitiy.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {user_id1_4_3_}
                - JOIN (JoinDefinedByMetadata(userProfile)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=ro.estore.model.entitiy.UserProfile)
                      - SQL table alias mapping - userprofil4_
                      - alias suffix - 4_
                      - suffixed key columns - {user_pro1_5_4_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [NONE]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, order0_.user_id as user_id3_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_, address1_.user_profile_id as user_pro7_0_1_, userprofil2_.user_profile_id as user_pro1_5_2_, userprofil2_.email_address as email_ad2_5_2_, userprofil2_.name as name3_5_2_, userprofil2_.phone_number as phone_nu4_5_2_, userprofil2_.surname as surname5_5_2_, user3_.user_id as user_id1_4_3_, user3_.password as password2_4_3_, user3_.user_profile_id as user_pro4_4_3_, user3_.username as username3_4_3_, userprofil4_.user_profile_id as user_pro1_5_4_, userprofil4_.email_address as email_ad2_5_4_, userprofil4_.name as name3_5_4_, userprofil4_.phone_number as phone_nu4_5_4_, userprofil4_.surname as surname5_5_4_ from `order` order0_ left outer join address address1_ on order0_.address_id=address1_.address_id left outer join user_profile userprofil2_ on address1_.user_profile_id=userprofil2_.user_profile_id left outer join user user3_ on order0_.user_id=user3_.user_id left outer join user_profile userprofil4_ on user3_.user_profile_id=userprofil4_.user_profile_id where order0_.order_id=?
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d4a65c6]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c98a6d5]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.addressLine1
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.addressLine2
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.addressName
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.city
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.postcode
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f02251]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.userProfile.addresses
 [main] DEBUG spi.MetamodelGraphWalker - Property path deemed to be circular : address.userProfile.addresses
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.userProfile.emailAddress
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.userProfile.name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.userProfile.phoneNumber
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.userProfile.surname
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d8126f]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.orders
 [main] DEBUG spi.MetamodelGraphWalker - Property path deemed to be circular : user.orders
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.password
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b587673]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.userProfile.addresses
 [main] DEBUG spi.MetamodelGraphWalker - Property path deemed to be circular : user.userProfile.addresses
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.userProfile.emailAddress
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.userProfile.name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.userProfile.phoneNumber
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.userProfile.surname
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.username
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
             - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.address.userProfile)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Order.user)
             - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:4>, path=ro.estore.model.entitiy.Order.user.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(address)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ro.estore.model.entitiy.Address)
                - SQL table alias mapping - address1_
                - alias suffix - 1_
                - suffixed key columns - {address_1_0_1_}
                - JOIN (JoinDefinedByMetadata(userProfile)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ro.estore.model.entitiy.UserProfile)
                      - SQL table alias mapping - userprofil2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_pro1_5_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=ro.estore.model.entitiy.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {user_id1_4_3_}
                - JOIN (JoinDefinedByMetadata(userProfile)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=ro.estore.model.entitiy.UserProfile)
                      - SQL table alias mapping - userprofil4_
                      - alias suffix - 4_
                      - suffixed key columns - {user_pro1_5_4_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [READ]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, order0_.user_id as user_id3_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_, address1_.user_profile_id as user_pro7_0_1_, userprofil2_.user_profile_id as user_pro1_5_2_, userprofil2_.email_address as email_ad2_5_2_, userprofil2_.name as name3_5_2_, userprofil2_.phone_number as phone_nu4_5_2_, userprofil2_.surname as surname5_5_2_, user3_.user_id as user_id1_4_3_, user3_.password as password2_4_3_, user3_.user_profile_id as user_pro4_4_3_, user3_.username as username3_4_3_, userprofil4_.user_profile_id as user_pro1_5_4_, userprofil4_.email_address as email_ad2_5_4_, userprofil4_.name as name3_5_4_, userprofil4_.phone_number as phone_nu4_5_4_, userprofil4_.surname as surname5_5_4_ from `order` order0_ left outer join address address1_ on order0_.address_id=address1_.address_id left outer join user_profile userprofil2_ on address1_.user_profile_id=userprofil2_.user_profile_id left outer join user user3_ on order0_.user_id=user3_.user_id left outer join user_profile userprofil4_ on user3_.user_profile_id=userprofil4_.user_profile_id where order0_.order_id=?
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f404594]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b2a3ff8]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bbae752]
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [UPGRADE]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, order0_.user_id as user_id3_1_0_ from `order` order0_ where order0_.order_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@460b6d54]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76075d65]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a4ba480]
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [UPGRADE_NOWAIT]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, order0_.user_id as user_id3_1_0_ from `order` order0_ where order0_.order_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27b71f50]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74971ed9]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@131fcb6f]
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [UPGRADE_SKIPLOCKED]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, order0_.user_id as user_id3_1_0_ from `order` order0_ where order0_.order_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ccd1bc3]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4455f57d]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29fc1a2b]
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [FORCE]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, order0_.user_id as user_id3_1_0_ from `order` order0_ where order0_.order_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d0b0fd4]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c37bd27]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25d3cfc8]
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [PESSIMISTIC_READ]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, order0_.user_id as user_id3_1_0_ from `order` order0_ where order0_.order_id=? lock in share mode
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30331109]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74fe5966]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fe875be]
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [PESSIMISTIC_WRITE]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, order0_.user_id as user_id3_1_0_ from `order` order0_ where order0_.order_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@677b8e13]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c27d39d]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40ee0a22]
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [PESSIMISTIC_FORCE_INCREMENT]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, order0_.user_id as user_id3_1_0_ from `order` order0_ where order0_.order_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bde1f3a]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67dba613]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57540fd0]
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [OPTIMISTIC]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, order0_.user_id as user_id3_1_0_ from `order` order0_ where order0_.order_id=?
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cf8edcf]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@629f066f]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1542af63]
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [OPTIMISTIC_FORCE_INCREMENT]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, order0_.user_id as user_id3_1_0_ from `order` order0_ where order0_.order_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_MERGE on entity ro.estore.model.entitiy.Order: select order0_.order_id as order_id1_1_1_, order0_.address_id as address_2_1_1_, order0_.user_id as user_id3_1_1_, purchases1_.order_id as order_id3_3_3_, purchases1_.purchase_id as purchase1_3_3_, purchases1_.purchase_id as purchase1_3_0_, purchases1_.order_id as order_id3_3_0_, purchases1_.product_id as product_4_3_0_, purchases1_.quantity as quantity2_3_0_, purchases1_.user_id as user_id5_3_0_ from `order` order0_ left outer join purchase purchases1_ on order0_.order_id=purchases1_.order_id where order0_.order_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_REFRESH on entity ro.estore.model.entitiy.Order: select order0_.order_id as order_id1_1_1_, order0_.address_id as address_2_1_1_, order0_.user_id as user_id3_1_1_, purchases1_.order_id as order_id3_3_3_, purchases1_.purchase_id as purchase1_3_3_, purchases1_.purchase_id as purchase1_3_0_, purchases1_.order_id as order_id3_3_0_, purchases1_.product_id as product_4_3_0_, purchases1_.quantity as quantity2_3_0_, purchases1_.user_id as user_id5_3_0_ from `order` order0_ left outer join purchase purchases1_ on order0_.order_id=purchases1_.order_id where order0_.order_id=?
 [main] DEBUG entity.AbstractEntityPersister - Static SQL for entity: ro.estore.model.entitiy.User
 [main] DEBUG entity.AbstractEntityPersister -  Version select: select user_id from user where user_id =?
 [main] DEBUG entity.AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.password as password2_4_, user_.user_profile_id as user_pro4_4_, user_.username as username3_4_ from user user_ where user_.user_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Insert 0: insert into user (password, user_profile_id, username, user_id) values (?, ?, ?, ?)
 [main] DEBUG logging.DelegatingBasicLogger -  Update 0: update user set password=?, user_profile_id=?, username=? where user_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Delete 0: delete from user where user_id=?
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ecfbe91]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3adbe50f]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.addresses
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.emailAddress
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.phoneNumber
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.surname
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}
          - JOIN (JoinDefinedByMetadata(userProfile)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ro.estore.model.entitiy.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_5_1_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [NONE]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ left outer join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=?
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49aa766b]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65004ff6]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.addresses
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.emailAddress
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.phoneNumber
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.surname
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}
          - JOIN (JoinDefinedByMetadata(userProfile)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ro.estore.model.entitiy.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_5_1_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [READ]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ left outer join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=?
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@562c877a]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@989da1]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [UPGRADE]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_ from user user0_ where user0_.user_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31cb96e1]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64030b91]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [UPGRADE_NOWAIT]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_ from user user0_ where user0_.user_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2032e725]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@383f1975]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [UPGRADE_SKIPLOCKED]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_ from user user0_ where user0_.user_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@441cc260]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26dcd8c0]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [FORCE]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_ from user user0_ where user0_.user_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66e889df]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3766c667]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [PESSIMISTIC_READ]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_ from user user0_ where user0_.user_id=? lock in share mode
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@773c0293]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b569985]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [PESSIMISTIC_WRITE]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_ from user user0_ where user0_.user_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a022576]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e48e859]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_ from user user0_ where user0_.user_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31ddd4a4]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b22b970]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [OPTIMISTIC]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_ from user user0_ where user0_.user_id=?
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22d1886d]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cbb3d3b]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_ from user user0_ where user0_.user_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_MERGE on entity ro.estore.model.entitiy.User: select user0_.user_id as user_id1_4_2_, user0_.password as password2_4_2_, user0_.user_profile_id as user_pro4_4_2_, user0_.username as username3_4_2_, orders1_.user_id as user_id3_1_4_, orders1_.order_id as order_id1_1_4_, orders1_.order_id as order_id1_1_0_, orders1_.address_id as address_2_1_0_, orders1_.user_id as user_id3_1_0_, userprofil2_.user_profile_id as user_pro1_5_1_, userprofil2_.email_address as email_ad2_5_1_, userprofil2_.name as name3_5_1_, userprofil2_.phone_number as phone_nu4_5_1_, userprofil2_.surname as surname5_5_1_ from user user0_ left outer join `order` orders1_ on user0_.user_id=orders1_.user_id left outer join user_profile userprofil2_ on user0_.user_profile_id=userprofil2_.user_profile_id where user0_.user_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_REFRESH on entity ro.estore.model.entitiy.User: select user0_.user_id as user_id1_4_2_, user0_.password as password2_4_2_, user0_.user_profile_id as user_pro4_4_2_, user0_.username as username3_4_2_, orders1_.user_id as user_id3_1_4_, orders1_.order_id as order_id1_1_4_, orders1_.order_id as order_id1_1_0_, orders1_.address_id as address_2_1_0_, orders1_.user_id as user_id3_1_0_, userprofil2_.user_profile_id as user_pro1_5_1_, userprofil2_.email_address as email_ad2_5_1_, userprofil2_.name as name3_5_1_, userprofil2_.phone_number as phone_nu4_5_1_, userprofil2_.surname as surname5_5_1_ from user user0_ left outer join `order` orders1_ on user0_.user_id=orders1_.user_id left outer join user_profile userprofil2_ on user0_.user_profile_id=userprofil2_.user_profile_id where user0_.user_id=?
 [main] DEBUG entity.AbstractEntityPersister - Static SQL for entity: ro.estore.model.entitiy.Address
 [main] DEBUG entity.AbstractEntityPersister -  Version select: select address_id from address where address_id =?
 [main] DEBUG entity.AbstractEntityPersister -  Snapshot select: select address_.address_id, address_.address_line_1 as address_2_0_, address_.address_line_2 as address_3_0_, address_.address_name as address_4_0_, address_.city as city5_0_, address_.postcode as postcode6_0_, address_.user_profile_id as user_pro7_0_ from address address_ where address_.address_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Insert 0: insert into address (address_line_1, address_line_2, address_name, city, postcode, user_profile_id, address_id) values (?, ?, ?, ?, ?, ?, ?)
 [main] DEBUG logging.DelegatingBasicLogger -  Update 0: update address set address_line_1=?, address_line_2=?, address_name=?, city=?, postcode=?, user_profile_id=? where address_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Delete 0: delete from address where address_id=?
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@529cfee5]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@319854f0]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.addresses
 [main] DEBUG spi.MetamodelGraphWalker - Property path deemed to be circular : userProfile.addresses
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.emailAddress
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.phoneNumber
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.surname
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Address.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}
          - JOIN (JoinDefinedByMetadata(userProfile)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ro.estore.model.entitiy.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_5_1_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [NONE]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_, address0_.user_profile_id as user_pro7_0_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from address address0_ left outer join user_profile userprofil1_ on address0_.user_profile_id=userprofil1_.user_profile_id where address0_.address_id=?
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@415156bf]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4af46df3]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.addresses
 [main] DEBUG spi.MetamodelGraphWalker - Property path deemed to be circular : userProfile.addresses
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.emailAddress
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.phoneNumber
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.surname
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Address.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}
          - JOIN (JoinDefinedByMetadata(userProfile)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ro.estore.model.entitiy.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_5_1_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [READ]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_, address0_.user_profile_id as user_pro7_0_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from address address0_ left outer join user_profile userprofil1_ on address0_.user_profile_id=userprofil1_.user_profile_id where address0_.address_id=?
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@af78c87]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ecfcbc9]
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Address.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [UPGRADE]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_, address0_.user_profile_id as user_pro7_0_0_ from address address0_ where address0_.address_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1965539b]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@353efdbf]
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Address.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [UPGRADE_NOWAIT]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_, address0_.user_profile_id as user_pro7_0_0_ from address address0_ where address0_.address_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55cff952]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a55a6e8]
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Address.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [UPGRADE_SKIPLOCKED]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_, address0_.user_profile_id as user_pro7_0_0_ from address address0_ where address0_.address_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8c46918]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@682bd3c4]
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Address.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [FORCE]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_, address0_.user_profile_id as user_pro7_0_0_ from address address0_ where address0_.address_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f2e4acf]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5eb97ced]
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Address.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [PESSIMISTIC_READ]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_, address0_.user_profile_id as user_pro7_0_0_ from address address0_ where address0_.address_id=? lock in share mode
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68ba310d]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7aad3f7d]
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Address.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [PESSIMISTIC_WRITE]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_, address0_.user_profile_id as user_pro7_0_0_ from address address0_ where address0_.address_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f667ad1]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@388b401d]
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Address.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [PESSIMISTIC_FORCE_INCREMENT]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_, address0_.user_profile_id as user_pro7_0_0_ from address address0_ where address0_.address_id=? for update
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bcec6a6]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4912d525]
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Address.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [OPTIMISTIC]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_, address0_.user_profile_id as user_pro7_0_0_ from address address0_ where address0_.address_id=?
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bfbffb2]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@151335cb]
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Address.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [OPTIMISTIC_FORCE_INCREMENT]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_, address0_.user_profile_id as user_pro7_0_0_ from address address0_ where address0_.address_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_MERGE on entity ro.estore.model.entitiy.Address: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_, address0_.user_profile_id as user_pro7_0_0_ from address address0_ where address0_.address_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_REFRESH on entity ro.estore.model.entitiy.Address: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_, address0_.user_profile_id as user_pro7_0_0_ from address address0_ where address0_.address_id=?
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@41c204a0]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64138b0c]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] DEBUG spi.MetamodelGraphWalker - Property path deemed to be circular : userProfile
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(collection=ro.estore.model.entitiy.UserProfile.addresses)
    - Returns
       - CollectionReturnImpl(collection=ro.estore.model.entitiy.UserProfile.addresses, querySpaceUid=<gen:0>, path=[ro.estore.model.entitiy.UserProfile.addresses])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=[ro.estore.model.entitiy.UserProfile.addresses].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ro.estore.model.entitiy.UserProfile.addresses)
          - SQL table alias mapping - addresses0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro7_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - address_1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ro.estore.model.entitiy.Address)
                - SQL table alias mapping - addresses0_
                - alias suffix - 1_
                - suffixed key columns - {address_1_0_1_}

 [main] DEBUG plan.CollectionLoader - Static select for collection ro.estore.model.entitiy.UserProfile.addresses: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_, addresses0_.user_profile_id as user_pro7_0_1_ from address addresses0_ where addresses0_.user_profile_id=?
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1bfe3203]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b214b94]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23e44287]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.addressLine1
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.addressLine2
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.addressName
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.city
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.postcode
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6daf2337]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.userProfile.addresses
 [main] DEBUG spi.MetamodelGraphWalker - Property path deemed to be circular : address.userProfile.addresses
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.userProfile.emailAddress
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.userProfile.name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.userProfile.phoneNumber
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.userProfile.surname
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user
 [main] DEBUG spi.MetamodelGraphWalker - Property path deemed to be circular : user
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(collection=ro.estore.model.entitiy.User.orders)
    - Returns
       - CollectionReturnImpl(collection=ro.estore.model.entitiy.User.orders, querySpaceUid=<gen:0>, path=[ro.estore.model.entitiy.User.orders])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:1>, path=[ro.estore.model.entitiy.User.orders].<elements>)
             - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:2>, path=[ro.estore.model.entitiy.User.orders].<elements>.address)
                - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:3>, path=[ro.estore.model.entitiy.User.orders].<elements>.address.userProfile)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ro.estore.model.entitiy.User.orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - order_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ro.estore.model.entitiy.Order)
                - SQL table alias mapping - orders0_
                - alias suffix - 1_
                - suffixed key columns - {order_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(address)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ro.estore.model.entitiy.Address)
                      - SQL table alias mapping - address1_
                      - alias suffix - 2_
                      - suffixed key columns - {address_1_0_2_}
                      - JOIN (JoinDefinedByMetadata(userProfile)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=ro.estore.model.entitiy.UserProfile)
                            - SQL table alias mapping - userprofil2_
                            - alias suffix - 3_
                            - suffixed key columns - {user_pro1_5_3_}

 [main] DEBUG plan.CollectionLoader - Static select for collection ro.estore.model.entitiy.User.orders: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, orders0_.user_id as user_id3_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_, address1_.user_profile_id as user_pro7_0_2_, userprofil2_.user_profile_id as user_pro1_5_3_, userprofil2_.email_address as email_ad2_5_3_, userprofil2_.name as name3_5_3_, userprofil2_.phone_number as phone_nu4_5_3_, userprofil2_.surname as surname5_5_3_ from `order` orders0_ left outer join address address1_ on orders0_.address_id=address1_.address_id left outer join user_profile userprofil2_ on address1_.user_profile_id=userprofil2_.user_profile_id where orders0_.user_id=?
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@250b236d]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61f3fbb8]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : order
 [main] DEBUG spi.MetamodelGraphWalker - Property path deemed to be circular : order
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78de58ea]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.brand
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.description
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.price
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.stock
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d755813]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.orders
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.password
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.userProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63da207f]
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.userProfile.addresses
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.userProfile.emailAddress
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.userProfile.name
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.userProfile.phoneNumber
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.userProfile.surname
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : user.username
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(collection=ro.estore.model.entitiy.Order.purchases)
    - Returns
       - CollectionReturnImpl(collection=ro.estore.model.entitiy.Order.purchases, querySpaceUid=<gen:0>, path=[ro.estore.model.entitiy.Order.purchases])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:1>, path=[ro.estore.model.entitiy.Order.purchases].<elements>)
             - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:2>, path=[ro.estore.model.entitiy.Order.purchases].<elements>.product)
             - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:3>, path=[ro.estore.model.entitiy.Order.purchases].<elements>.user)
                - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:4>, path=[ro.estore.model.entitiy.Order.purchases].<elements>.user.userProfile)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ro.estore.model.entitiy.Order.purchases)
          - SQL table alias mapping - purchases0_
          - alias suffix - 0_
          - suffixed key columns - {order_id3_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - purchase1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ro.estore.model.entitiy.Purchase)
                - SQL table alias mapping - purchases0_
                - alias suffix - 1_
                - suffixed key columns - {purchase1_3_1_}
                - JOIN (JoinDefinedByMetadata(product)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ro.estore.model.entitiy.Product)
                      - SQL table alias mapping - product1_
                      - alias suffix - 2_
                      - suffixed key columns - {product_1_2_2_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=ro.estore.model.entitiy.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 3_
                      - suffixed key columns - {user_id1_4_3_}
                      - JOIN (JoinDefinedByMetadata(userProfile)) : <gen:3> -> <gen:4>
                         - EntityQuerySpaceImpl(uid=<gen:4>, entity=ro.estore.model.entitiy.UserProfile)
                            - SQL table alias mapping - userprofil3_
                            - alias suffix - 4_
                            - suffixed key columns - {user_pro1_5_4_}

 [main] DEBUG plan.CollectionLoader - Static select for collection ro.estore.model.entitiy.Order.purchases: select purchases0_.order_id as order_id3_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.order_id as order_id3_3_1_, purchases0_.product_id as product_4_3_1_, purchases0_.quantity as quantity2_3_1_, purchases0_.user_id as user_id5_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_, user2_.user_id as user_id1_4_3_, user2_.password as password2_4_3_, user2_.user_profile_id as user_pro4_4_3_, user2_.username as username3_4_3_, userprofil3_.user_profile_id as user_pro1_5_4_, userprofil3_.email_address as email_ad2_5_4_, userprofil3_.name as name3_5_4_, userprofil3_.phone_number as phone_nu4_5_4_, userprofil3_.surname as surname5_5_4_ from purchase purchases0_ left outer join product product1_ on purchases0_.product_id=product1_.product_id left outer join user user2_ on purchases0_.user_id=user2_.user_id left outer join user_profile userprofil3_ on user2_.user_profile_id=userprofil3_.user_profile_id where purchases0_.order_id=?
 [main] DEBUG internal.SessionFactoryImpl - Instantiated session factory
 [main] INFO  hbm2ddl.SchemaValidator - HHH000229: Running schema validator
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
 [main] DEBUG internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
 [main] DEBUG internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
 [main] DEBUG internal.NamedQueryRepository - Checking 0 named HQL queries
 [main] DEBUG internal.NamedQueryRepository - Checking 0 named SQL queries
 [main] DEBUG internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6edcd0d8
 [main] DEBUG internal.SessionFactoryRegistry - Registering SessionFactory: 8c48932b-e21a-4a9c-99ed-aca4207ade36 (<unnamed>)
 [main] DEBUG internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
 [main] DEBUG schemagen.JpaSchemaGenerator$GenerationProcess - No actions specified; doing nothing
 [main] DEBUG internal.EntityManagerFactoryRegistry - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@1549bba7
 [main] DEBUG internal.EntityManagerFactoryRegistry - Registering EntityManagerFactory: default 
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'entityManagerFactory'
 [main] DEBUG support.DefaultListableBeanFactory - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5e25a92e: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,jpaHibernateTestConfig,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor,addressConverter,orderConverter,productConverter,purchaseConverter,userConverter,userProfileConverter,addressRepositoryJpaImpl,orderRepositoryJpaImpl,productRepositoryJpaImpl,purchaseRepositoryJpaImpl,userProfileRepositoryJpaImpl,userRepositoryJpaImpl,addressServiceImpl,orderServiceImpl,productServiceImpl,purchaseServiceImpl,userProfileServiceImpl,userServiceImpl,loggingAspect,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,org.springframework.transaction.config.internalTransactionalEventListenerFactory,ro.estore.model.config.RootJpaHibernateConfig,transactionManager,dataSource,entityManagerFactory,org.springframework.aop.config.internalAutoProxyCreator]; root of factory hierarchy
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.context.event.internalEventListenerProcessor' to allow for resolving potential circular references
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.context.event.internalEventListenerFactory' to allow for resolving potential circular references
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'jpaHibernateTestConfig'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'jpaHibernateTestConfig'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'jpaHibernateTestConfig' to allow for resolving potential circular references
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'jpaHibernateTestConfig'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'addressConverter'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'addressConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'addressConverter' to allow for resolving potential circular references
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'addressConverter'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'orderConverter'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'orderConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.converter.OrderConverter]: AutowiredFieldElement for private ro.estore.domain.converter.AddressConverter ro.estore.domain.converter.OrderConverter.addressConverter
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.converter.OrderConverter]: AutowiredFieldElement for private ro.estore.domain.converter.PurchaseConverter ro.estore.domain.converter.OrderConverter.purchaseConverter
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'orderConverter' to allow for resolving potential circular references
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'orderConverter': AutowiredFieldElement for private ro.estore.domain.converter.AddressConverter ro.estore.domain.converter.OrderConverter.addressConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'orderConverter' to bean named 'addressConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'orderConverter': AutowiredFieldElement for private ro.estore.domain.converter.PurchaseConverter ro.estore.domain.converter.OrderConverter.purchaseConverter
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'purchaseConverter'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'purchaseConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.converter.PurchaseConverter]: AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.converter.PurchaseConverter.productConverter
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'purchaseConverter' to allow for resolving potential circular references
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'purchaseConverter': AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.converter.PurchaseConverter.productConverter
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'productConverter'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'productConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'productConverter' to allow for resolving potential circular references
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'productConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'purchaseConverter' to bean named 'productConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'purchaseConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'orderConverter' to bean named 'purchaseConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'orderConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseConverter'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'userConverter'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'userConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.converter.UserConverter]: AutowiredFieldElement for private ro.estore.domain.converter.OrderConverter ro.estore.domain.converter.UserConverter.orderConverter
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.converter.UserConverter]: AutowiredFieldElement for private ro.estore.domain.converter.UserProfileConverter ro.estore.domain.converter.UserConverter.userProfileConverter
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'userConverter' to allow for resolving potential circular references
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userConverter': AutowiredFieldElement for private ro.estore.domain.converter.OrderConverter ro.estore.domain.converter.UserConverter.orderConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'userConverter' to bean named 'orderConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userConverter': AutowiredFieldElement for private ro.estore.domain.converter.UserProfileConverter ro.estore.domain.converter.UserConverter.userProfileConverter
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'userProfileConverter'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'userProfileConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.converter.UserProfileConverter]: AutowiredFieldElement for private ro.estore.domain.converter.AddressConverter ro.estore.domain.converter.UserProfileConverter.addressConverter
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'userProfileConverter' to allow for resolving potential circular references
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userProfileConverter': AutowiredFieldElement for private ro.estore.domain.converter.AddressConverter ro.estore.domain.converter.UserProfileConverter.addressConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'userProfileConverter' to bean named 'addressConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'userProfileConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'userConverter' to bean named 'userProfileConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'userConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileConverter'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'addressRepositoryJpaImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'addressRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.model.repository.impl.AddressRepositoryJpaImpl]: PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'addressRepositoryJpaImpl' to allow for resolving potential circular references
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'addressRepositoryJpaImpl': PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'addressRepositoryJpaImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'orderRepositoryJpaImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'orderRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.model.repository.impl.OrderRepositoryJpaImpl]: PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'orderRepositoryJpaImpl' to allow for resolving potential circular references
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'orderRepositoryJpaImpl': PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'orderRepositoryJpaImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'productRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.model.repository.impl.ProductRepositoryJpaImpl]: PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'productRepositoryJpaImpl' to allow for resolving potential circular references
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'productRepositoryJpaImpl': PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'productRepositoryJpaImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'purchaseRepositoryJpaImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'purchaseRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImpl]: PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'purchaseRepositoryJpaImpl' to allow for resolving potential circular references
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'purchaseRepositoryJpaImpl': PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'purchaseRepositoryJpaImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'userProfileRepositoryJpaImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'userProfileRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImpl]: PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'userProfileRepositoryJpaImpl' to allow for resolving potential circular references
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userProfileRepositoryJpaImpl': PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'userProfileRepositoryJpaImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'userRepositoryJpaImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'userRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.model.repository.impl.UserRepositoryJpaImpl]: PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'userRepositoryJpaImpl' to allow for resolving potential circular references
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userRepositoryJpaImpl': PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'userRepositoryJpaImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'addressServiceImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'addressServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.AddressServiceImpl]: AutowiredFieldElement for private ro.estore.model.repository.AddressRepository ro.estore.domain.service.impl.AddressServiceImpl.addressRepository
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.AddressServiceImpl]: AutowiredFieldElement for private ro.estore.domain.converter.AddressConverter ro.estore.domain.service.impl.AddressServiceImpl.addressConverter
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'addressServiceImpl' to allow for resolving potential circular references
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'addressServiceImpl': AutowiredFieldElement for private ro.estore.model.repository.AddressRepository ro.estore.domain.service.impl.AddressServiceImpl.addressRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'addressServiceImpl' to bean named 'addressRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'addressServiceImpl': AutowiredFieldElement for private ro.estore.domain.converter.AddressConverter ro.estore.domain.service.impl.AddressServiceImpl.addressConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'addressServiceImpl' to bean named 'addressConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'addressServiceImpl' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.AddressServiceImpl@ba354ca]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.GenericEntityConverter ro.estore.domain.service.impl.AddressServiceImpl.getEntityConverter()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.AddressConverter ro.estore.domain.service.impl.AddressServiceImpl.getEntityConverter()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.GenericRepository ro.estore.domain.service.impl.AddressServiceImpl.getRepository()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.AddressRepository ro.estore.domain.service.impl.AddressServiceImpl.getRepository()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.GenericServiceImpl.remove(ro.estore.domain.domain.DomainDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Integer ro.estore.domain.service.impl.GenericServiceImpl.count()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImpl.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.domain.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(ro.estore.domain.domain.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.domain.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.create(ro.estore.domain.domain.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.domain.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(java.io.Serializable)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.domain.service.impl.GenericServiceImpl.findAll()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found finalize() method - using NO_OVERRIDE
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'addressServiceImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'orderServiceImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'orderServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.OrderServiceImpl]: AutowiredFieldElement for private ro.estore.model.repository.OrderRepository ro.estore.domain.service.impl.OrderServiceImpl.orderRepository
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.OrderServiceImpl]: AutowiredFieldElement for private ro.estore.domain.converter.OrderConverter ro.estore.domain.service.impl.OrderServiceImpl.orderConverter
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'orderServiceImpl' to allow for resolving potential circular references
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'orderServiceImpl': AutowiredFieldElement for private ro.estore.model.repository.OrderRepository ro.estore.domain.service.impl.OrderServiceImpl.orderRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'orderServiceImpl' to bean named 'orderRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'orderServiceImpl': AutowiredFieldElement for private ro.estore.domain.converter.OrderConverter ro.estore.domain.service.impl.OrderServiceImpl.orderConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'orderServiceImpl' to bean named 'orderConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'orderServiceImpl' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.OrderServiceImpl@5e2f3be5]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.GenericEntityConverter ro.estore.domain.service.impl.OrderServiceImpl.getEntityConverter()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.OrderConverter ro.estore.domain.service.impl.OrderServiceImpl.getEntityConverter()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.GenericRepository ro.estore.domain.service.impl.OrderServiceImpl.getRepository()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.OrderRepository ro.estore.domain.service.impl.OrderServiceImpl.getRepository()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.GenericServiceImpl.remove(ro.estore.domain.domain.DomainDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Integer ro.estore.domain.service.impl.GenericServiceImpl.count()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImpl.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.domain.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(ro.estore.domain.domain.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.domain.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.create(ro.estore.domain.domain.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.domain.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(java.io.Serializable)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.domain.service.impl.GenericServiceImpl.findAll()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found finalize() method - using NO_OVERRIDE
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'orderServiceImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'productServiceImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'productServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.ProductServiceImpl]: AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.domain.service.impl.ProductServiceImpl.productRepository
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.ProductServiceImpl]: AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.service.impl.ProductServiceImpl.productConverter
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'productServiceImpl' to allow for resolving potential circular references
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'productServiceImpl': AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.domain.service.impl.ProductServiceImpl.productRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'productServiceImpl' to bean named 'productRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'productServiceImpl': AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.service.impl.ProductServiceImpl.productConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'productServiceImpl' to bean named 'productConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'productServiceImpl' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.ProductServiceImpl@26a2f7f9]
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.domain.ProductDTO ro.estore.domain.service.impl.ProductServiceImpl.create(ro.estore.domain.domain.ProductDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.domain.DomainDTO ro.estore.domain.service.impl.ProductServiceImpl.create(ro.estore.domain.domain.DomainDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.domain.service.impl.ProductServiceImpl.findByFilter(ro.estore.domain.filter.SearchProductFilter)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.GenericEntityConverter ro.estore.domain.service.impl.ProductServiceImpl.getEntityConverter()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.ProductConverter ro.estore.domain.service.impl.ProductServiceImpl.getEntityConverter()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.GenericRepository ro.estore.domain.service.impl.ProductServiceImpl.getRepository()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.ProductRepository ro.estore.domain.service.impl.ProductServiceImpl.getRepository()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.GenericServiceImpl.remove(ro.estore.domain.domain.DomainDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Integer ro.estore.domain.service.impl.GenericServiceImpl.count()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImpl.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.domain.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(ro.estore.domain.domain.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.domain.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(java.io.Serializable)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.domain.service.impl.GenericServiceImpl.findAll()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found finalize() method - using NO_OVERRIDE
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'productServiceImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'purchaseServiceImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'purchaseServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.PurchaseServiceImpl]: AutowiredFieldElement for private ro.estore.model.repository.PurchaseRepository ro.estore.domain.service.impl.PurchaseServiceImpl.purchaseRepository
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.PurchaseServiceImpl]: AutowiredFieldElement for private ro.estore.domain.converter.PurchaseConverter ro.estore.domain.service.impl.PurchaseServiceImpl.purchaseConverter
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'purchaseServiceImpl' to allow for resolving potential circular references
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'purchaseServiceImpl': AutowiredFieldElement for private ro.estore.model.repository.PurchaseRepository ro.estore.domain.service.impl.PurchaseServiceImpl.purchaseRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'purchaseServiceImpl' to bean named 'purchaseRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'purchaseServiceImpl': AutowiredFieldElement for private ro.estore.domain.converter.PurchaseConverter ro.estore.domain.service.impl.PurchaseServiceImpl.purchaseConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'purchaseServiceImpl' to bean named 'purchaseConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'purchaseServiceImpl' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.PurchaseServiceImpl@5c10285a]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.GenericEntityConverter ro.estore.domain.service.impl.PurchaseServiceImpl.getEntityConverter()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.PurchaseConverter ro.estore.domain.service.impl.PurchaseServiceImpl.getEntityConverter()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.GenericRepository ro.estore.domain.service.impl.PurchaseServiceImpl.getRepository()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.PurchaseRepository ro.estore.domain.service.impl.PurchaseServiceImpl.getRepository()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.GenericServiceImpl.remove(ro.estore.domain.domain.DomainDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Integer ro.estore.domain.service.impl.GenericServiceImpl.count()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImpl.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.domain.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(ro.estore.domain.domain.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.domain.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.create(ro.estore.domain.domain.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.domain.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(java.io.Serializable)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.domain.service.impl.GenericServiceImpl.findAll()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found finalize() method - using NO_OVERRIDE
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'purchaseServiceImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'userProfileServiceImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'userProfileServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.UserProfileServiceImpl]: AutowiredFieldElement for private ro.estore.model.repository.UserProfileRepository ro.estore.domain.service.impl.UserProfileServiceImpl.userProfileRepository
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.UserProfileServiceImpl]: AutowiredFieldElement for private ro.estore.domain.converter.UserProfileConverter ro.estore.domain.service.impl.UserProfileServiceImpl.userProfileConverter
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'userProfileServiceImpl' to allow for resolving potential circular references
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userProfileServiceImpl': AutowiredFieldElement for private ro.estore.model.repository.UserProfileRepository ro.estore.domain.service.impl.UserProfileServiceImpl.userProfileRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'userProfileServiceImpl' to bean named 'userProfileRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userProfileServiceImpl': AutowiredFieldElement for private ro.estore.domain.converter.UserProfileConverter ro.estore.domain.service.impl.UserProfileServiceImpl.userProfileConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'userProfileServiceImpl' to bean named 'userProfileConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'userProfileServiceImpl' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserProfileServiceImpl@3cec79d3]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.GenericEntityConverter ro.estore.domain.service.impl.UserProfileServiceImpl.getEntityConverter()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.UserProfileConverter ro.estore.domain.service.impl.UserProfileServiceImpl.getEntityConverter()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.GenericRepository ro.estore.domain.service.impl.UserProfileServiceImpl.getRepository()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.UserProfileRepository ro.estore.domain.service.impl.UserProfileServiceImpl.getRepository()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.GenericServiceImpl.remove(ro.estore.domain.domain.DomainDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Integer ro.estore.domain.service.impl.GenericServiceImpl.count()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImpl.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.domain.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(ro.estore.domain.domain.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.domain.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.create(ro.estore.domain.domain.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.domain.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(java.io.Serializable)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.domain.service.impl.GenericServiceImpl.findAll()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found finalize() method - using NO_OVERRIDE
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'userProfileServiceImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'userServiceImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'userServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.UserServiceImpl]: AutowiredFieldElement for private ro.estore.model.repository.UserRepository ro.estore.domain.service.impl.UserServiceImpl.userRepository
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.UserServiceImpl]: AutowiredFieldElement for private ro.estore.domain.converter.UserConverter ro.estore.domain.service.impl.UserServiceImpl.userConverter
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.UserServiceImpl]: AutowiredFieldElement for private ro.estore.domain.service.AddressService ro.estore.domain.service.impl.UserServiceImpl.addressService
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.UserServiceImpl]: AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.UserServiceImpl.productService
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'userServiceImpl' to allow for resolving potential circular references
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userServiceImpl': AutowiredFieldElement for private ro.estore.model.repository.UserRepository ro.estore.domain.service.impl.UserServiceImpl.userRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'userServiceImpl' to bean named 'userRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userServiceImpl': AutowiredFieldElement for private ro.estore.domain.converter.UserConverter ro.estore.domain.service.impl.UserServiceImpl.userConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'userServiceImpl' to bean named 'userConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userServiceImpl': AutowiredFieldElement for private ro.estore.domain.service.AddressService ro.estore.domain.service.impl.UserServiceImpl.addressService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressServiceImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'userServiceImpl' to bean named 'addressServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userServiceImpl': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.UserServiceImpl.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'userServiceImpl' to bean named 'productServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImpl.findByUsername' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'userServiceImpl' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserServiceImpl@6eaa21d8]
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImpl.findByUsername' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.domain.UserDTO ro.estore.domain.service.impl.UserServiceImpl.findByUsername(java.lang.String)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImpl.findByUsernameAndPassword' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.domain.UserDTO ro.estore.domain.service.impl.UserServiceImpl.findByUsernameAndPassword(java.lang.String,java.lang.String)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImpl.addOrder' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.domain.OrderDTO ro.estore.domain.service.impl.UserServiceImpl.addOrder(java.lang.Long,ro.estore.domain.domain.OrderDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.GenericEntityConverter ro.estore.domain.service.impl.UserServiceImpl.getEntityConverter()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.UserConverter ro.estore.domain.service.impl.UserServiceImpl.getEntityConverter()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.GenericRepository ro.estore.domain.service.impl.UserServiceImpl.getRepository()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.UserRepository ro.estore.domain.service.impl.UserServiceImpl.getRepository()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.GenericServiceImpl.remove(ro.estore.domain.domain.DomainDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Integer ro.estore.domain.service.impl.GenericServiceImpl.count()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImpl.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.domain.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(ro.estore.domain.domain.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.domain.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.create(ro.estore.domain.domain.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.domain.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(java.io.Serializable)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.domain.service.impl.GenericServiceImpl.findAll()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found finalize() method - using NO_OVERRIDE
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'userServiceImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'loggingAspect'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'loggingAspect'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'loggingAspect' to allow for resolving potential circular references
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'loggingAspect'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionAttributeSource'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionInterceptor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' to allow for resolving potential circular references
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'ro.estore.model.config.RootJpaHibernateConfig'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'transactionManager'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'transactionManager'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'ro.estore.model.config.RootJpaHibernateConfig'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
 [main] DEBUG support.ConstructorResolver - Autowiring by type from bean name 'transactionManager' via factory method to bean named 'entityManagerFactory'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Invoking afterPropertiesSet() on bean with name 'transactionManager'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'transactionManager'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'dataSource'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
 [main] DEBUG support.AbstractApplicationContext - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@ab20d7c]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'lifecycleProcessor'
 [main] DEBUG env.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
 [main] DEBUG env.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
 [main] DEBUG env.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Storing ApplicationContext in cache under key [[MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 0, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserService ro.estore.domain.service.impl.UserServiceImplTest.userService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userServiceImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.UserServiceImplTest' to bean named 'userServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.UserConverter ro.estore.domain.service.impl.UserServiceImplTest.userConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.UserServiceImplTest' to bean named 'userConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.createUser' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserServiceImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserServiceImplTest@3c0f93f1]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserServiceImplTest.createUser()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.findUserByUsernameTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.saveAndFindUserByUsernameAndPasswordTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserServiceImplTest.saveAndFindUserByUsernameAndPasswordTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.findUserByUsernameAndPasswordFailTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameAndPasswordFailTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.deleteUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserServiceImplTest.deleteUserTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.updateUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserServiceImplTest.updateUserTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.findUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserServiceImplTest.findUserTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.findUserByUsernameFailTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameFailTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found finalize() method - using NO_OVERRIDE
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@3c0f93f1, testMethod = findUserByUsernameAndPasswordFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.findUserByUsernameAndPasswordFailTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@3c0f93f1, testMethod = findUserByUsernameAndPasswordFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@1431267b transactionManagerName = '', defaultRollback = true] for test class [ro.estore.domain.service.impl.UserServiceImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 1, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@3c0f93f1, testMethod = findUserByUsernameAndPasswordFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameAndPasswordFailTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG internal.StatisticsInitiator - Statistics initialized [enabled=false]
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@36b310aa] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@43a51d00]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@3c0f93f1, testMethod = findUserByUsernameAndPasswordFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@36b310aa] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG criteria.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 )
 [main] DEBUG internal.QueryTranslatorFactoryInitiator - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@37ed010a
 [main] INFO  internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
 [main] DEBUG ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from ro.estore.model.entitiy.User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 )
 [main] DEBUG ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'ro'
    |  |     |  |  |  |  \-[IDENT] Node: 'estore'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'entitiy'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'username'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'password'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

 [main] DEBUG ast.ErrorCounter - throwQueryException() : no errors
 [main] DEBUG antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
 [main] DEBUG tree.FromElement - FromClause{level=1} : ro.estore.model.entitiy.User (generatedAlias0) -> user0_
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
 [main] DEBUG tree.DotNode - getDataType() : username -> org.hibernate.type.StringType@64ba3208
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0.username -> user0_.username
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
 [main] DEBUG tree.DotNode - getDataType() : password -> org.hibernate.type.StringType@64ba3208
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0.password -> user0_.password
 [main] DEBUG antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
 [main] DEBUG ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} user user0_ ) ( where ( and ( = ( user0_.username user0_.user_id username ) ? ) ( = ( user0_.password user0_.user_id password ) ? ) ) ) )
 [main] DEBUG util.JoinProcessor - Using FROM fragment [user user0_]
 [main] DEBUG antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
 [main] DEBUG ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_4_' {alias=generatedAlias0, className=ro.estore.model.entitiy.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=ro.estore.model.entitiy.User}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=generatedAlias0.username,tableAlias=user0_,className=ro.estore.model.entitiy.User,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=generatedAlias0, className=ro.estore.model.entitiy.User, tableAlias=user0_}
          |  |  \-[IDENT] IdentNode: 'username' {originalText=username}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@64ba3208}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path=generatedAlias0.password,tableAlias=user0_,className=ro.estore.model.entitiy.User,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=generatedAlias0, className=ro.estore.model.entitiy.User, tableAlias=user0_}
             |  \-[IDENT] IdentNode: 'password' {originalText=password}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@64ba3208}

 [main] DEBUG ast.ErrorCounter - throwQueryException() : no errors
 [main] DEBUG ast.QueryTranslatorImpl - HQL: select generatedAlias0 from ro.estore.model.entitiy.User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 )
 [main] DEBUG ast.QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=? and user0_.password=?
 [main] DEBUG ast.ErrorCounter - throwQueryException() : no errors
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_,
        user0_.password as password2_4_,
        user0_.user_profile_id as user_pro4_4_,
        user0_.username as username3_4_ 
    from
        user user0_ 
    where
        user0_.username=? 
        and user0_.password=?
 [main] ERROR impl.UserRepositoryJpaImpl - No user was found (Index: 0, Size: 0)
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@36b310aa]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@36b310aa] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@3c0f93f1, testMethod = findUserByUsernameAndPasswordFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@3c0f93f1, testMethod = findUserByUsernameAndPasswordFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@199bc830, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 2, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserService ro.estore.domain.service.impl.UserServiceImplTest.userService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.UserConverter ro.estore.domain.service.impl.UserServiceImplTest.userConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserServiceImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserServiceImplTest@199bc830]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@199bc830, testMethod = findUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.findUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@199bc830, testMethod = findUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 3, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@199bc830, testMethod = findUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserServiceImplTest.findUserTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@4b3fe06e] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4d8286c4]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@199bc830, testMethod = findUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@4b3fe06e] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.password as password2_4_0_,
        user0_.user_profile_id as user_pro4_4_0_,
        user0_.username as username3_4_0_,
        userprofil1_.user_profile_id as user_pro1_5_1_,
        userprofil1_.email_address as email_ad2_5_1_,
        userprofil1_.name as name3_5_1_,
        userprofil1_.phone_number as phone_nu4_5_1_,
        userprofil1_.surname as surname5_5_1_ 
    from
        user user0_ 
    left outer join
        user_profile userprofil1_ 
            on user0_.user_profile_id=userprofil1_.user_profile_id 
    where
        user0_.user_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.User#0
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.User.orders#0]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        orders0_.user_id as user_id3_1_0_,
        orders0_.order_id as order_id1_1_0_,
        orders0_.order_id as order_id1_1_1_,
        orders0_.address_id as address_2_1_1_,
        orders0_.user_id as user_id3_1_1_,
        address1_.address_id as address_1_0_2_,
        address1_.address_line_1 as address_2_0_2_,
        address1_.address_line_2 as address_3_0_2_,
        address1_.address_name as address_4_0_2_,
        address1_.city as city5_0_2_,
        address1_.postcode as postcode6_0_2_,
        address1_.user_profile_id as user_pro7_0_2_,
        userprofil2_.user_profile_id as user_pro1_5_3_,
        userprofil2_.email_address as email_ad2_5_3_,
        userprofil2_.name as name3_5_3_,
        userprofil2_.phone_number as phone_nu4_5_3_,
        userprofil2_.surname as surname5_5_3_ 
    from
        `
    order` orders0_ left outer join
        address address1_ 
            on orders0_.address_id=address1_.address_id 
    left outer join
        user_profile userprofil2_ 
            on address1_.user_profile_id=userprofil2_.user_profile_id 
    where
        orders0_.user_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.User.orders#0]
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.User.orders#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.User.orders
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.User.orders#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.User.orders
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchases0_.order_id as order_id3_3_0_,
        purchases0_.purchase_id as purchase1_3_0_,
        purchases0_.purchase_id as purchase1_3_1_,
        purchases0_.order_id as order_id3_3_1_,
        purchases0_.product_id as product_4_3_1_,
        purchases0_.quantity as quantity2_3_1_,
        purchases0_.user_id as user_id5_3_1_,
        product1_.product_id as product_1_2_2_,
        product1_.brand as brand2_2_2_,
        product1_.description as descript3_2_2_,
        product1_.name as name4_2_2_,
        product1_.price as price5_2_2_,
        product1_.stock as stock6_2_2_,
        user2_.user_id as user_id1_4_3_,
        user2_.password as password2_4_3_,
        user2_.user_profile_id as user_pro4_4_3_,
        user2_.username as username3_4_3_,
        userprofil3_.user_profile_id as user_pro1_5_4_,
        userprofil3_.email_address as email_ad2_5_4_,
        userprofil3_.name as name3_5_4_,
        userprofil3_.phone_number as phone_nu4_5_4_,
        userprofil3_.surname as surname5_5_4_ 
    from
        purchase purchases0_ 
    left outer join
        product product1_ 
            on purchases0_.product_id=product1_.product_id 
    left outer join
        user user2_ 
            on purchases0_.user_id=user2_.user_id 
    left outer join
        user_profile userprofil3_ 
            on user2_.user_profile_id=userprofil3_.user_profile_id 
    where
        purchases0_.order_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.Order.purchases
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.Order.purchases
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        addresses0_.user_profile_id as user_pro7_0_0_,
        addresses0_.address_id as address_1_0_0_,
        addresses0_.address_id as address_1_0_1_,
        addresses0_.address_line_1 as address_2_0_1_,
        addresses0_.address_line_2 as address_3_0_1_,
        addresses0_.address_name as address_4_0_1_,
        addresses0_.city as city5_0_1_,
        addresses0_.postcode as postcode6_0_1_,
        addresses0_.user_profile_id as user_pro7_0_1_ 
    from
        address addresses0_ 
    where
        addresses0_.user_profile_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@4b3fe06e]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@4b3fe06e] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@199bc830, testMethod = findUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@199bc830, testMethod = findUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@282ffbf5, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 4, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserService ro.estore.domain.service.impl.UserServiceImplTest.userService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.UserConverter ro.estore.domain.service.impl.UserServiceImplTest.userConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserServiceImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserServiceImplTest@282ffbf5]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@282ffbf5, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.saveAndFindUserByUsernameAndPasswordTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@282ffbf5, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 5, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@282ffbf5, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserServiceImplTest.saveAndFindUserByUsernameAndPasswordTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@3e104d4b] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6cd164a6]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@282ffbf5, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@3e104d4b] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG criteria.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 )
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_,
        user0_.password as password2_4_,
        user0_.user_profile_id as user_pro4_4_,
        user0_.username as username3_4_ 
    from
        user user0_ 
    where
        user0_.username=? 
        and user0_.password=?
 [main] DEBUG logging.DelegatingBasicLogger - Result set row: 0
 [main] DEBUG loader.Loader - Result row: EntityKey[ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#0]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        userprofil0_.user_profile_id as user_pro1_5_0_,
        userprofil0_.email_address as email_ad2_5_0_,
        userprofil0_.name as name3_5_0_,
        userprofil0_.phone_number as phone_nu4_5_0_,
        userprofil0_.surname as surname5_5_0_ 
    from
        user_profile userprofil0_ 
    where
        userprofil0_.user_profile_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.UserProfile#0
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#0]
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.User.orders#0]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        orders0_.user_id as user_id3_1_0_,
        orders0_.order_id as order_id1_1_0_,
        orders0_.order_id as order_id1_1_1_,
        orders0_.address_id as address_2_1_1_,
        orders0_.user_id as user_id3_1_1_,
        address1_.address_id as address_1_0_2_,
        address1_.address_line_1 as address_2_0_2_,
        address1_.address_line_2 as address_3_0_2_,
        address1_.address_name as address_4_0_2_,
        address1_.city as city5_0_2_,
        address1_.postcode as postcode6_0_2_,
        address1_.user_profile_id as user_pro7_0_2_,
        userprofil2_.user_profile_id as user_pro1_5_3_,
        userprofil2_.email_address as email_ad2_5_3_,
        userprofil2_.name as name3_5_3_,
        userprofil2_.phone_number as phone_nu4_5_3_,
        userprofil2_.surname as surname5_5_3_ 
    from
        `
    order` orders0_ left outer join
        address address1_ 
            on orders0_.address_id=address1_.address_id 
    left outer join
        user_profile userprofil2_ 
            on address1_.user_profile_id=userprofil2_.user_profile_id 
    where
        orders0_.user_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.User.orders#0]
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.User.orders#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.User.orders
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.User.orders#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.User.orders
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchases0_.order_id as order_id3_3_0_,
        purchases0_.purchase_id as purchase1_3_0_,
        purchases0_.purchase_id as purchase1_3_1_,
        purchases0_.order_id as order_id3_3_1_,
        purchases0_.product_id as product_4_3_1_,
        purchases0_.quantity as quantity2_3_1_,
        purchases0_.user_id as user_id5_3_1_,
        product1_.product_id as product_1_2_2_,
        product1_.brand as brand2_2_2_,
        product1_.description as descript3_2_2_,
        product1_.name as name4_2_2_,
        product1_.price as price5_2_2_,
        product1_.stock as stock6_2_2_,
        user2_.user_id as user_id1_4_3_,
        user2_.password as password2_4_3_,
        user2_.user_profile_id as user_pro4_4_3_,
        user2_.username as username3_4_3_,
        userprofil3_.user_profile_id as user_pro1_5_4_,
        userprofil3_.email_address as email_ad2_5_4_,
        userprofil3_.name as name3_5_4_,
        userprofil3_.phone_number as phone_nu4_5_4_,
        userprofil3_.surname as surname5_5_4_ 
    from
        purchase purchases0_ 
    left outer join
        product product1_ 
            on purchases0_.product_id=product1_.product_id 
    left outer join
        user user2_ 
            on purchases0_.user_id=user2_.user_id 
    left outer join
        user_profile userprofil3_ 
            on user2_.user_profile_id=userprofil3_.user_profile_id 
    where
        purchases0_.order_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.Order.purchases
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.Order.purchases
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        addresses0_.user_profile_id as user_pro7_0_0_,
        addresses0_.address_id as address_1_0_0_,
        addresses0_.address_id as address_1_0_1_,
        addresses0_.address_line_1 as address_2_0_1_,
        addresses0_.address_line_2 as address_3_0_1_,
        addresses0_.address_name as address_4_0_1_,
        addresses0_.city as city5_0_1_,
        addresses0_.postcode as postcode6_0_1_,
        addresses0_.user_profile_id as user_pro7_0_1_ 
    from
        address addresses0_ 
    where
        addresses0_.user_profile_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@3e104d4b]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@3e104d4b] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@282ffbf5, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@282ffbf5, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@3c0bbc9f, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 6, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserService ro.estore.domain.service.impl.UserServiceImplTest.userService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.UserConverter ro.estore.domain.service.impl.UserServiceImplTest.userConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserServiceImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserServiceImplTest@3c0bbc9f]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@3c0bbc9f, testMethod = updateUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.updateUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@3c0bbc9f, testMethod = updateUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 7, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@3c0bbc9f, testMethod = updateUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserServiceImplTest.updateUserTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@1317b708] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@615e3f51]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@3c0bbc9f, testMethod = updateUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@1317b708] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.password as password2_4_0_,
        user0_.user_profile_id as user_pro4_4_0_,
        user0_.username as username3_4_0_,
        userprofil1_.user_profile_id as user_pro1_5_1_,
        userprofil1_.email_address as email_ad2_5_1_,
        userprofil1_.name as name3_5_1_,
        userprofil1_.phone_number as phone_nu4_5_1_,
        userprofil1_.surname as surname5_5_1_ 
    from
        user user0_ 
    left outer join
        user_profile userprofil1_ 
            on user0_.user_profile_id=userprofil1_.user_profile_id 
    where
        user0_.user_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.User#0
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.User.orders#0]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        orders0_.user_id as user_id3_1_0_,
        orders0_.order_id as order_id1_1_0_,
        orders0_.order_id as order_id1_1_1_,
        orders0_.address_id as address_2_1_1_,
        orders0_.user_id as user_id3_1_1_,
        address1_.address_id as address_1_0_2_,
        address1_.address_line_1 as address_2_0_2_,
        address1_.address_line_2 as address_3_0_2_,
        address1_.address_name as address_4_0_2_,
        address1_.city as city5_0_2_,
        address1_.postcode as postcode6_0_2_,
        address1_.user_profile_id as user_pro7_0_2_,
        userprofil2_.user_profile_id as user_pro1_5_3_,
        userprofil2_.email_address as email_ad2_5_3_,
        userprofil2_.name as name3_5_3_,
        userprofil2_.phone_number as phone_nu4_5_3_,
        userprofil2_.surname as surname5_5_3_ 
    from
        `
    order` orders0_ left outer join
        address address1_ 
            on orders0_.address_id=address1_.address_id 
    left outer join
        user_profile userprofil2_ 
            on address1_.user_profile_id=userprofil2_.user_profile_id 
    where
        orders0_.user_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.User.orders#0]
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.User.orders#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.User.orders
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.User.orders#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.User.orders
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchases0_.order_id as order_id3_3_0_,
        purchases0_.purchase_id as purchase1_3_0_,
        purchases0_.purchase_id as purchase1_3_1_,
        purchases0_.order_id as order_id3_3_1_,
        purchases0_.product_id as product_4_3_1_,
        purchases0_.quantity as quantity2_3_1_,
        purchases0_.user_id as user_id5_3_1_,
        product1_.product_id as product_1_2_2_,
        product1_.brand as brand2_2_2_,
        product1_.description as descript3_2_2_,
        product1_.name as name4_2_2_,
        product1_.price as price5_2_2_,
        product1_.stock as stock6_2_2_,
        user2_.user_id as user_id1_4_3_,
        user2_.password as password2_4_3_,
        user2_.user_profile_id as user_pro4_4_3_,
        user2_.username as username3_4_3_,
        userprofil3_.user_profile_id as user_pro1_5_4_,
        userprofil3_.email_address as email_ad2_5_4_,
        userprofil3_.name as name3_5_4_,
        userprofil3_.phone_number as phone_nu4_5_4_,
        userprofil3_.surname as surname5_5_4_ 
    from
        purchase purchases0_ 
    left outer join
        product product1_ 
            on purchases0_.product_id=product1_.product_id 
    left outer join
        user user2_ 
            on purchases0_.user_id=user2_.user_id 
    left outer join
        user_profile userprofil3_ 
            on user2_.user_profile_id=userprofil3_.user_profile_id 
    where
        purchases0_.order_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.Order.purchases
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.Order.purchases
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        addresses0_.user_profile_id as user_pro7_0_0_,
        addresses0_.address_id as address_1_0_0_,
        addresses0_.address_id as address_1_0_1_,
        addresses0_.address_line_1 as address_2_0_1_,
        addresses0_.address_line_2 as address_3_0_1_,
        addresses0_.address_name as address_4_0_1_,
        addresses0_.city as city5_0_1_,
        addresses0_.postcode as postcode6_0_1_,
        addresses0_.user_profile_id as user_pro7_0_1_ 
    from
        address addresses0_ 
    where
        addresses0_.user_profile_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@1317b708] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG internal.DefaultMergeEventListener - EntityCopyObserver strategy: disallow
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@1317b708] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@1317b708]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@1317b708] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@3c0bbc9f, testMethod = updateUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@3c0bbc9f, testMethod = updateUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@2b037cfc, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 8, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserService ro.estore.domain.service.impl.UserServiceImplTest.userService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.UserConverter ro.estore.domain.service.impl.UserServiceImplTest.userConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserServiceImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserServiceImplTest@2b037cfc]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@2b037cfc, testMethod = findUserByUsernameFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.findUserByUsernameFailTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@2b037cfc, testMethod = findUserByUsernameFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 9, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@2b037cfc, testMethod = findUserByUsernameFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameFailTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@44924587] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@126f1ba8]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@2b037cfc, testMethod = findUserByUsernameFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@44924587] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG criteria.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0
 [main] DEBUG ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from ro.estore.model.entitiy.User as generatedAlias0 where generatedAlias0.username=:param0
 [main] DEBUG ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'ro'
    |  |     |  |  |  |  \-[IDENT] Node: 'estore'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'entitiy'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

 [main] DEBUG ast.ErrorCounter - throwQueryException() : no errors
 [main] DEBUG antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
 [main] DEBUG tree.FromElement - FromClause{level=1} : ro.estore.model.entitiy.User (generatedAlias0) -> user0_
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
 [main] DEBUG tree.DotNode - getDataType() : username -> org.hibernate.type.StringType@64ba3208
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0.username -> user0_.username
 [main] DEBUG antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
 [main] DEBUG ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
 [main] DEBUG util.JoinProcessor - Using FROM fragment [user user0_]
 [main] DEBUG antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
 [main] DEBUG ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_4_' {alias=generatedAlias0, className=ro.estore.model.entitiy.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=ro.estore.model.entitiy.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=generatedAlias0.username,tableAlias=user0_,className=ro.estore.model.entitiy.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=generatedAlias0, className=ro.estore.model.entitiy.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@64ba3208}

 [main] DEBUG ast.ErrorCounter - throwQueryException() : no errors
 [main] DEBUG ast.QueryTranslatorImpl - HQL: select generatedAlias0 from ro.estore.model.entitiy.User as generatedAlias0 where generatedAlias0.username=:param0
 [main] DEBUG ast.QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=?
 [main] DEBUG ast.ErrorCounter - throwQueryException() : no errors
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_,
        user0_.password as password2_4_,
        user0_.user_profile_id as user_pro4_4_,
        user0_.username as username3_4_ 
    from
        user user0_ 
    where
        user0_.username=?
 [main] ERROR impl.UserRepositoryJpaImpl - No user was found (No entity found for query)
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@44924587]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@44924587] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@2b037cfc, testMethod = findUserByUsernameFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@2b037cfc, testMethod = findUserByUsernameFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@19ee1ae6, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 10, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserService ro.estore.domain.service.impl.UserServiceImplTest.userService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.UserConverter ro.estore.domain.service.impl.UserServiceImplTest.userConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserServiceImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserServiceImplTest@19ee1ae6]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@19ee1ae6, testMethod = createUser@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.createUser' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@19ee1ae6, testMethod = createUser@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 11, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@19ee1ae6, testMethod = createUser@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserServiceImplTest.createUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@5f117b3d] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@78226c36]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@19ee1ae6, testMethod = createUser@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@5f117b3d] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG id.IncrementGenerator - Fetching initial value: select max(user_id) from user
 [main] DEBUG spi.SqlStatementLogger - 
    select
        max(user_id) 
    from
        user
 [main] DEBUG id.IncrementGenerator - First free id: 1
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG id.IncrementGenerator - Fetching initial value: select max(user_profile_id) from user_profile
 [main] DEBUG spi.SqlStatementLogger - 
    select
        max(user_profile_id) 
    from
        user_profile
 [main] DEBUG id.IncrementGenerator - First free id: 1
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG id.IncrementGenerator - Fetching initial value: select max(address_id) from address
 [main] DEBUG spi.SqlStatementLogger - 
    select
        max(address_id) 
    from
        address
 [main] DEBUG id.IncrementGenerator - First free id: 1
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 2, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG id.IncrementGenerator - Fetching initial value: select max(order_id) from `order`
 [main] DEBUG spi.SqlStatementLogger - 
    select
        max(order_id) 
    from
        `
    order`
 [main] DEBUG id.IncrementGenerator - First free id: 1
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG id.IncrementGenerator - Fetching initial value: select max(purchase_id) from purchase
 [main] DEBUG spi.SqlStatementLogger - 
    select
        max(purchase_id) 
    from
        purchase
 [main] DEBUG id.IncrementGenerator - First free id: 1
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 1, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 2, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 2, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 3, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 4, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@5f117b3d]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@5f117b3d] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@19ee1ae6, testMethod = createUser@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@19ee1ae6, testMethod = createUser@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@1894593a, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 12, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserService ro.estore.domain.service.impl.UserServiceImplTest.userService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.UserConverter ro.estore.domain.service.impl.UserServiceImplTest.userConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserServiceImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserServiceImplTest@1894593a]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@1894593a, testMethod = findUserByUsernameTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.findUserByUsernameTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@1894593a, testMethod = findUserByUsernameTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 13, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@1894593a, testMethod = findUserByUsernameTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@14b0e127] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5527b211]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@1894593a, testMethod = findUserByUsernameTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@14b0e127] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG criteria.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_,
        user0_.password as password2_4_,
        user0_.user_profile_id as user_pro4_4_,
        user0_.username as username3_4_ 
    from
        user user0_ 
    where
        user0_.username=?
 [main] DEBUG logging.DelegatingBasicLogger - Result set row: 0
 [main] DEBUG loader.Loader - Result row: EntityKey[ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#0]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        userprofil0_.user_profile_id as user_pro1_5_0_,
        userprofil0_.email_address as email_ad2_5_0_,
        userprofil0_.name as name3_5_0_,
        userprofil0_.phone_number as phone_nu4_5_0_,
        userprofil0_.surname as surname5_5_0_ 
    from
        user_profile userprofil0_ 
    where
        userprofil0_.user_profile_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.UserProfile#0
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#0]
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.User.orders#0]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        orders0_.user_id as user_id3_1_0_,
        orders0_.order_id as order_id1_1_0_,
        orders0_.order_id as order_id1_1_1_,
        orders0_.address_id as address_2_1_1_,
        orders0_.user_id as user_id3_1_1_,
        address1_.address_id as address_1_0_2_,
        address1_.address_line_1 as address_2_0_2_,
        address1_.address_line_2 as address_3_0_2_,
        address1_.address_name as address_4_0_2_,
        address1_.city as city5_0_2_,
        address1_.postcode as postcode6_0_2_,
        address1_.user_profile_id as user_pro7_0_2_,
        userprofil2_.user_profile_id as user_pro1_5_3_,
        userprofil2_.email_address as email_ad2_5_3_,
        userprofil2_.name as name3_5_3_,
        userprofil2_.phone_number as phone_nu4_5_3_,
        userprofil2_.surname as surname5_5_3_ 
    from
        `
    order` orders0_ left outer join
        address address1_ 
            on orders0_.address_id=address1_.address_id 
    left outer join
        user_profile userprofil2_ 
            on address1_.user_profile_id=userprofil2_.user_profile_id 
    where
        orders0_.user_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.User.orders#0]
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.User.orders#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.User.orders
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.User.orders#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.User.orders
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchases0_.order_id as order_id3_3_0_,
        purchases0_.purchase_id as purchase1_3_0_,
        purchases0_.purchase_id as purchase1_3_1_,
        purchases0_.order_id as order_id3_3_1_,
        purchases0_.product_id as product_4_3_1_,
        purchases0_.quantity as quantity2_3_1_,
        purchases0_.user_id as user_id5_3_1_,
        product1_.product_id as product_1_2_2_,
        product1_.brand as brand2_2_2_,
        product1_.description as descript3_2_2_,
        product1_.name as name4_2_2_,
        product1_.price as price5_2_2_,
        product1_.stock as stock6_2_2_,
        user2_.user_id as user_id1_4_3_,
        user2_.password as password2_4_3_,
        user2_.user_profile_id as user_pro4_4_3_,
        user2_.username as username3_4_3_,
        userprofil3_.user_profile_id as user_pro1_5_4_,
        userprofil3_.email_address as email_ad2_5_4_,
        userprofil3_.name as name3_5_4_,
        userprofil3_.phone_number as phone_nu4_5_4_,
        userprofil3_.surname as surname5_5_4_ 
    from
        purchase purchases0_ 
    left outer join
        product product1_ 
            on purchases0_.product_id=product1_.product_id 
    left outer join
        user user2_ 
            on purchases0_.user_id=user2_.user_id 
    left outer join
        user_profile userprofil3_ 
            on user2_.user_profile_id=userprofil3_.user_profile_id 
    where
        purchases0_.order_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.Order.purchases
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.Order.purchases
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        addresses0_.user_profile_id as user_pro7_0_0_,
        addresses0_.address_id as address_1_0_0_,
        addresses0_.address_id as address_1_0_1_,
        addresses0_.address_line_1 as address_2_0_1_,
        addresses0_.address_line_2 as address_3_0_1_,
        addresses0_.address_name as address_4_0_1_,
        addresses0_.city as city5_0_1_,
        addresses0_.postcode as postcode6_0_1_,
        addresses0_.user_profile_id as user_pro7_0_1_ 
    from
        address addresses0_ 
    where
        addresses0_.user_profile_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@14b0e127]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@14b0e127] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@1894593a, testMethod = findUserByUsernameTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@1894593a, testMethod = findUserByUsernameTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@6a4ccef7, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 14, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserService ro.estore.domain.service.impl.UserServiceImplTest.userService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.UserConverter ro.estore.domain.service.impl.UserServiceImplTest.userConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserServiceImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserServiceImplTest@6a4ccef7]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@6a4ccef7, testMethod = deleteUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.deleteUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@6a4ccef7, testMethod = deleteUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 15, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@6a4ccef7, testMethod = deleteUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserServiceImplTest.deleteUserTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@69391e08] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@49ec6a9f]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@6a4ccef7, testMethod = deleteUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@69391e08] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.password as password2_4_0_,
        user0_.user_profile_id as user_pro4_4_0_,
        user0_.username as username3_4_0_,
        userprofil1_.user_profile_id as user_pro1_5_1_,
        userprofil1_.email_address as email_ad2_5_1_,
        userprofil1_.name as name3_5_1_,
        userprofil1_.phone_number as phone_nu4_5_1_,
        userprofil1_.surname as surname5_5_1_ 
    from
        user user0_ 
    left outer join
        user_profile userprofil1_ 
            on user0_.user_profile_id=userprofil1_.user_profile_id 
    where
        user0_.user_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.User#0
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.User.orders#0]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        orders0_.user_id as user_id3_1_0_,
        orders0_.order_id as order_id1_1_0_,
        orders0_.order_id as order_id1_1_1_,
        orders0_.address_id as address_2_1_1_,
        orders0_.user_id as user_id3_1_1_,
        address1_.address_id as address_1_0_2_,
        address1_.address_line_1 as address_2_0_2_,
        address1_.address_line_2 as address_3_0_2_,
        address1_.address_name as address_4_0_2_,
        address1_.city as city5_0_2_,
        address1_.postcode as postcode6_0_2_,
        address1_.user_profile_id as user_pro7_0_2_,
        userprofil2_.user_profile_id as user_pro1_5_3_,
        userprofil2_.email_address as email_ad2_5_3_,
        userprofil2_.name as name3_5_3_,
        userprofil2_.phone_number as phone_nu4_5_3_,
        userprofil2_.surname as surname5_5_3_ 
    from
        `
    order` orders0_ left outer join
        address address1_ 
            on orders0_.address_id=address1_.address_id 
    left outer join
        user_profile userprofil2_ 
            on address1_.user_profile_id=userprofil2_.user_profile_id 
    where
        orders0_.user_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.User.orders#0]
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.User.orders#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.User.orders
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.User.orders#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.User.orders
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchases0_.order_id as order_id3_3_0_,
        purchases0_.purchase_id as purchase1_3_0_,
        purchases0_.purchase_id as purchase1_3_1_,
        purchases0_.order_id as order_id3_3_1_,
        purchases0_.product_id as product_4_3_1_,
        purchases0_.quantity as quantity2_3_1_,
        purchases0_.user_id as user_id5_3_1_,
        product1_.product_id as product_1_2_2_,
        product1_.brand as brand2_2_2_,
        product1_.description as descript3_2_2_,
        product1_.name as name4_2_2_,
        product1_.price as price5_2_2_,
        product1_.stock as stock6_2_2_,
        user2_.user_id as user_id1_4_3_,
        user2_.password as password2_4_3_,
        user2_.user_profile_id as user_pro4_4_3_,
        user2_.username as username3_4_3_,
        userprofil3_.user_profile_id as user_pro1_5_4_,
        userprofil3_.email_address as email_ad2_5_4_,
        userprofil3_.name as name3_5_4_,
        userprofil3_.phone_number as phone_nu4_5_4_,
        userprofil3_.surname as surname5_5_4_ 
    from
        purchase purchases0_ 
    left outer join
        product product1_ 
            on purchases0_.product_id=product1_.product_id 
    left outer join
        user user2_ 
            on purchases0_.user_id=user2_.user_id 
    left outer join
        user_profile userprofil3_ 
            on user2_.user_profile_id=userprofil3_.user_profile_id 
    where
        purchases0_.order_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.Order.purchases
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.Order.purchases
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        addresses0_.user_profile_id as user_pro7_0_0_,
        addresses0_.address_id as address_1_0_0_,
        addresses0_.address_id as address_1_0_1_,
        addresses0_.address_line_1 as address_2_0_1_,
        addresses0_.address_line_2 as address_3_0_1_,
        addresses0_.address_name as address_4_0_1_,
        addresses0_.city as city5_0_1_,
        addresses0_.postcode as postcode6_0_1_,
        addresses0_.user_profile_id as user_pro7_0_1_ 
    from
        address addresses0_ 
    where
        addresses0_.user_profile_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@69391e08] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@69391e08] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@69391e08]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@69391e08] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@6a4ccef7, testMethod = deleteUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@6a4ccef7, testMethod = deleteUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@64bf3bbf testClass = UserServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@55d56113 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@10fda3d0 testClass = PurchaseRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@10fda3d0 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@4f6b687e, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 16, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.PurchaseRepository ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.purchaseRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest' to bean named 'purchaseRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseRepositoryJpaImplTest.findPurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@4f6b687e]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.findPurchaseTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseRepositoryJpaImplTest.createPurchase' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.createPurchase()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseRepositoryJpaImplTest.deletePurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.deletePurchaseTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseRepositoryJpaImplTest.updatePurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.updatePurchaseTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found finalize() method - using NO_OVERRIDE
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@10fda3d0 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@4f6b687e, testMethod = findPurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseRepositoryJpaImplTest.findPurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@10fda3d0 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@4f6b687e, testMethod = findPurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@1431267b transactionManagerName = '', defaultRollback = true] for test class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 17, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@10fda3d0 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@4f6b687e, testMethod = findPurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.findPurchaseTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@6cfd9a54] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@73d4066e]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@10fda3d0 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@4f6b687e, testMethod = findPurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchase0_.purchase_id as purchase1_3_0_,
        purchase0_.order_id as order_id3_3_0_,
        purchase0_.product_id as product_4_3_0_,
        purchase0_.quantity as quantity2_3_0_,
        purchase0_.user_id as user_id5_3_0_,
        order1_.order_id as order_id1_1_1_,
        order1_.address_id as address_2_1_1_,
        order1_.user_id as user_id3_1_1_,
        address2_.address_id as address_1_0_2_,
        address2_.address_line_1 as address_2_0_2_,
        address2_.address_line_2 as address_3_0_2_,
        address2_.address_name as address_4_0_2_,
        address2_.city as city5_0_2_,
        address2_.postcode as postcode6_0_2_,
        address2_.user_profile_id as user_pro7_0_2_,
        user3_.user_id as user_id1_4_3_,
        user3_.password as password2_4_3_,
        user3_.user_profile_id as user_pro4_4_3_,
        user3_.username as username3_4_3_,
        product4_.product_id as product_1_2_4_,
        product4_.brand as brand2_2_4_,
        product4_.description as descript3_2_4_,
        product4_.name as name4_2_4_,
        product4_.price as price5_2_4_,
        product4_.stock as stock6_2_4_,
        user5_.user_id as user_id1_4_5_,
        user5_.password as password2_4_5_,
        user5_.user_profile_id as user_pro4_4_5_,
        user5_.username as username3_4_5_,
        userprofil6_.user_profile_id as user_pro1_5_6_,
        userprofil6_.email_address as email_ad2_5_6_,
        userprofil6_.name as name3_5_6_,
        userprofil6_.phone_number as phone_nu4_5_6_,
        userprofil6_.surname as surname5_5_6_ 
    from
        purchase purchase0_ 
    left outer join
        `
    order` order1_ 
        on purchase0_.order_id=order1_.order_id left outer join
            address address2_ 
                on order1_.address_id=address2_.address_id 
        left outer join
            user user3_ 
                on order1_.user_id=user3_.user_id 
        left outer join
            product product4_ 
                on purchase0_.product_id=product4_.product_id 
        left outer join
            user user5_ 
                on purchase0_.user_id=user5_.user_id 
        left outer join
            user_profile userprofil6_ 
                on user5_.user_profile_id=userprofil6_.user_profile_id 
        where
            purchase0_.purchase_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Purchase#0
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@6cfd9a54]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@6cfd9a54] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@10fda3d0 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@4f6b687e, testMethod = findPurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@10fda3d0 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@4f6b687e, testMethod = findPurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@10fda3d0 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@45404d5, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 18, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.PurchaseRepository ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.purchaseRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@45404d5]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@10fda3d0 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@45404d5, testMethod = createPurchase@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseRepositoryJpaImplTest.createPurchase' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@10fda3d0 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@45404d5, testMethod = createPurchase@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 19, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@10fda3d0 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@45404d5, testMethod = createPurchase@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.createPurchase]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@29138d3a] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7c251f90]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@10fda3d0 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@45404d5, testMethod = createPurchase@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 5, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@29138d3a]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@29138d3a] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@10fda3d0 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@45404d5, testMethod = createPurchase@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@10fda3d0 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@45404d5, testMethod = createPurchase@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@10fda3d0 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@5ba26eb0, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 20, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.PurchaseRepository ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.purchaseRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@5ba26eb0]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@10fda3d0 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@5ba26eb0, testMethod = deletePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseRepositoryJpaImplTest.deletePurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@10fda3d0 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@5ba26eb0, testMethod = deletePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 21, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@10fda3d0 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@5ba26eb0, testMethod = deletePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.deletePurchaseTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@435e60ff] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@10afe71a]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@10fda3d0 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@5ba26eb0, testMethod = deletePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchase0_.purchase_id as purchase1_3_0_,
        purchase0_.order_id as order_id3_3_0_,
        purchase0_.product_id as product_4_3_0_,
        purchase0_.quantity as quantity2_3_0_,
        purchase0_.user_id as user_id5_3_0_,
        order1_.order_id as order_id1_1_1_,
        order1_.address_id as address_2_1_1_,
        order1_.user_id as user_id3_1_1_,
        address2_.address_id as address_1_0_2_,
        address2_.address_line_1 as address_2_0_2_,
        address2_.address_line_2 as address_3_0_2_,
        address2_.address_name as address_4_0_2_,
        address2_.city as city5_0_2_,
        address2_.postcode as postcode6_0_2_,
        address2_.user_profile_id as user_pro7_0_2_,
        user3_.user_id as user_id1_4_3_,
        user3_.password as password2_4_3_,
        user3_.user_profile_id as user_pro4_4_3_,
        user3_.username as username3_4_3_,
        product4_.product_id as product_1_2_4_,
        product4_.brand as brand2_2_4_,
        product4_.description as descript3_2_4_,
        product4_.name as name4_2_4_,
        product4_.price as price5_2_4_,
        product4_.stock as stock6_2_4_,
        user5_.user_id as user_id1_4_5_,
        user5_.password as password2_4_5_,
        user5_.user_profile_id as user_pro4_4_5_,
        user5_.username as username3_4_5_,
        userprofil6_.user_profile_id as user_pro1_5_6_,
        userprofil6_.email_address as email_ad2_5_6_,
        userprofil6_.name as name3_5_6_,
        userprofil6_.phone_number as phone_nu4_5_6_,
        userprofil6_.surname as surname5_5_6_ 
    from
        purchase purchase0_ 
    left outer join
        `
    order` order1_ 
        on purchase0_.order_id=order1_.order_id left outer join
            address address2_ 
                on order1_.address_id=address2_.address_id 
        left outer join
            user user3_ 
                on order1_.user_id=user3_.user_id 
        left outer join
            product product4_ 
                on purchase0_.product_id=product4_.product_id 
        left outer join
            user user5_ 
                on purchase0_.user_id=user5_.user_id 
        left outer join
            user_profile userprofil6_ 
                on user5_.user_profile_id=userprofil6_.user_profile_id 
        where
            purchase0_.purchase_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Purchase#0
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@435e60ff]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@435e60ff] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@10fda3d0 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@5ba26eb0, testMethod = deletePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@10fda3d0 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@5ba26eb0, testMethod = deletePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@10fda3d0 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@17690e14, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 22, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.PurchaseRepository ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.purchaseRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@17690e14]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@10fda3d0 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@17690e14, testMethod = updatePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseRepositoryJpaImplTest.updatePurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@10fda3d0 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@17690e14, testMethod = updatePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 23, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@10fda3d0 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@17690e14, testMethod = updatePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.updatePurchaseTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@6850b758] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4207609e]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@10fda3d0 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@17690e14, testMethod = updatePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchase0_.purchase_id as purchase1_3_0_,
        purchase0_.order_id as order_id3_3_0_,
        purchase0_.product_id as product_4_3_0_,
        purchase0_.quantity as quantity2_3_0_,
        purchase0_.user_id as user_id5_3_0_,
        order1_.order_id as order_id1_1_1_,
        order1_.address_id as address_2_1_1_,
        order1_.user_id as user_id3_1_1_,
        address2_.address_id as address_1_0_2_,
        address2_.address_line_1 as address_2_0_2_,
        address2_.address_line_2 as address_3_0_2_,
        address2_.address_name as address_4_0_2_,
        address2_.city as city5_0_2_,
        address2_.postcode as postcode6_0_2_,
        address2_.user_profile_id as user_pro7_0_2_,
        user3_.user_id as user_id1_4_3_,
        user3_.password as password2_4_3_,
        user3_.user_profile_id as user_pro4_4_3_,
        user3_.username as username3_4_3_,
        product4_.product_id as product_1_2_4_,
        product4_.brand as brand2_2_4_,
        product4_.description as descript3_2_4_,
        product4_.name as name4_2_4_,
        product4_.price as price5_2_4_,
        product4_.stock as stock6_2_4_,
        user5_.user_id as user_id1_4_5_,
        user5_.password as password2_4_5_,
        user5_.user_profile_id as user_pro4_4_5_,
        user5_.username as username3_4_5_,
        userprofil6_.user_profile_id as user_pro1_5_6_,
        userprofil6_.email_address as email_ad2_5_6_,
        userprofil6_.name as name3_5_6_,
        userprofil6_.phone_number as phone_nu4_5_6_,
        userprofil6_.surname as surname5_5_6_ 
    from
        purchase purchase0_ 
    left outer join
        `
    order` order1_ 
        on purchase0_.order_id=order1_.order_id left outer join
            address address2_ 
                on order1_.address_id=address2_.address_id 
        left outer join
            user user3_ 
                on order1_.user_id=user3_.user_id 
        left outer join
            product product4_ 
                on purchase0_.product_id=product4_.product_id 
        left outer join
            user user5_ 
                on purchase0_.user_id=user5_.user_id 
        left outer join
            user_profile userprofil6_ 
                on user5_.user_profile_id=userprofil6_.user_profile_id 
        where
            purchase0_.purchase_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Purchase#0
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@6850b758]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@6850b758] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@10fda3d0 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@17690e14, testMethod = updatePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@10fda3d0 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@17690e14, testMethod = updatePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@10fda3d0 testClass = PurchaseRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2123064f testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@67b100fe testClass = PurchaseServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@67b100fe testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@2ba5aa7a, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 24, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.PurchaseServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.PurchaseService ro.estore.domain.service.impl.PurchaseServiceImplTest.purchaseService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseServiceImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.PurchaseServiceImplTest' to bean named 'purchaseServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.PurchaseServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.PurchaseConverter ro.estore.domain.service.impl.PurchaseServiceImplTest.purchaseConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.PurchaseServiceImplTest' to bean named 'purchaseConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImplTest.findPurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.PurchaseServiceImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.PurchaseServiceImplTest@2ba5aa7a]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.PurchaseServiceImplTest.findPurchaseTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImplTest.createPurchase' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.PurchaseServiceImplTest.createPurchase()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImplTest.deletePurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.PurchaseServiceImplTest.deletePurchaseTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImplTest.updatePurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.PurchaseServiceImplTest.updatePurchaseTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found finalize() method - using NO_OVERRIDE
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@67b100fe testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@2ba5aa7a, testMethod = findPurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImplTest.findPurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@67b100fe testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@2ba5aa7a, testMethod = findPurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.domain.service.impl.PurchaseServiceImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@1431267b transactionManagerName = '', defaultRollback = true] for test class [ro.estore.domain.service.impl.PurchaseServiceImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 25, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@67b100fe testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@2ba5aa7a, testMethod = findPurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.PurchaseServiceImplTest.findPurchaseTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@6a638c79] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3fe46690]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@67b100fe testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@2ba5aa7a, testMethod = findPurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@6a638c79] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchase0_.purchase_id as purchase1_3_0_,
        purchase0_.order_id as order_id3_3_0_,
        purchase0_.product_id as product_4_3_0_,
        purchase0_.quantity as quantity2_3_0_,
        purchase0_.user_id as user_id5_3_0_,
        order1_.order_id as order_id1_1_1_,
        order1_.address_id as address_2_1_1_,
        order1_.user_id as user_id3_1_1_,
        address2_.address_id as address_1_0_2_,
        address2_.address_line_1 as address_2_0_2_,
        address2_.address_line_2 as address_3_0_2_,
        address2_.address_name as address_4_0_2_,
        address2_.city as city5_0_2_,
        address2_.postcode as postcode6_0_2_,
        address2_.user_profile_id as user_pro7_0_2_,
        user3_.user_id as user_id1_4_3_,
        user3_.password as password2_4_3_,
        user3_.user_profile_id as user_pro4_4_3_,
        user3_.username as username3_4_3_,
        product4_.product_id as product_1_2_4_,
        product4_.brand as brand2_2_4_,
        product4_.description as descript3_2_4_,
        product4_.name as name4_2_4_,
        product4_.price as price5_2_4_,
        product4_.stock as stock6_2_4_,
        user5_.user_id as user_id1_4_5_,
        user5_.password as password2_4_5_,
        user5_.user_profile_id as user_pro4_4_5_,
        user5_.username as username3_4_5_,
        userprofil6_.user_profile_id as user_pro1_5_6_,
        userprofil6_.email_address as email_ad2_5_6_,
        userprofil6_.name as name3_5_6_,
        userprofil6_.phone_number as phone_nu4_5_6_,
        userprofil6_.surname as surname5_5_6_ 
    from
        purchase purchase0_ 
    left outer join
        `
    order` order1_ 
        on purchase0_.order_id=order1_.order_id left outer join
            address address2_ 
                on order1_.address_id=address2_.address_id 
        left outer join
            user user3_ 
                on order1_.user_id=user3_.user_id 
        left outer join
            product product4_ 
                on purchase0_.product_id=product4_.product_id 
        left outer join
            user user5_ 
                on purchase0_.user_id=user5_.user_id 
        left outer join
            user_profile userprofil6_ 
                on user5_.user_profile_id=userprofil6_.user_profile_id 
        where
            purchase0_.purchase_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Purchase#0
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@6a638c79]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@6a638c79] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@67b100fe testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@2ba5aa7a, testMethod = findPurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@67b100fe testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@2ba5aa7a, testMethod = findPurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@67b100fe testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@4195105b, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 26, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.PurchaseServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.PurchaseService ro.estore.domain.service.impl.PurchaseServiceImplTest.purchaseService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.PurchaseServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.PurchaseConverter ro.estore.domain.service.impl.PurchaseServiceImplTest.purchaseConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.PurchaseServiceImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.PurchaseServiceImplTest@4195105b]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@67b100fe testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@4195105b, testMethod = createPurchase@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImplTest.createPurchase' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@67b100fe testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@4195105b, testMethod = createPurchase@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 27, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@67b100fe testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@4195105b, testMethod = createPurchase@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.PurchaseServiceImplTest.createPurchase]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@6f3e19b3] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6cd5122d]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@67b100fe testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@4195105b, testMethod = createPurchase@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@6f3e19b3] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 6, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@6f3e19b3]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@6f3e19b3] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@67b100fe testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@4195105b, testMethod = createPurchase@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@67b100fe testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@4195105b, testMethod = createPurchase@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@67b100fe testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@10c07b8d, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 28, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.PurchaseServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.PurchaseService ro.estore.domain.service.impl.PurchaseServiceImplTest.purchaseService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.PurchaseServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.PurchaseConverter ro.estore.domain.service.impl.PurchaseServiceImplTest.purchaseConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.PurchaseServiceImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.PurchaseServiceImplTest@10c07b8d]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@67b100fe testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@10c07b8d, testMethod = deletePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImplTest.deletePurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@67b100fe testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@10c07b8d, testMethod = deletePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 29, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@67b100fe testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@10c07b8d, testMethod = deletePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.PurchaseServiceImplTest.deletePurchaseTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@720bf653] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@70c53dbe]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@67b100fe testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@10c07b8d, testMethod = deletePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@720bf653] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchase0_.purchase_id as purchase1_3_0_,
        purchase0_.order_id as order_id3_3_0_,
        purchase0_.product_id as product_4_3_0_,
        purchase0_.quantity as quantity2_3_0_,
        purchase0_.user_id as user_id5_3_0_,
        order1_.order_id as order_id1_1_1_,
        order1_.address_id as address_2_1_1_,
        order1_.user_id as user_id3_1_1_,
        address2_.address_id as address_1_0_2_,
        address2_.address_line_1 as address_2_0_2_,
        address2_.address_line_2 as address_3_0_2_,
        address2_.address_name as address_4_0_2_,
        address2_.city as city5_0_2_,
        address2_.postcode as postcode6_0_2_,
        address2_.user_profile_id as user_pro7_0_2_,
        user3_.user_id as user_id1_4_3_,
        user3_.password as password2_4_3_,
        user3_.user_profile_id as user_pro4_4_3_,
        user3_.username as username3_4_3_,
        product4_.product_id as product_1_2_4_,
        product4_.brand as brand2_2_4_,
        product4_.description as descript3_2_4_,
        product4_.name as name4_2_4_,
        product4_.price as price5_2_4_,
        product4_.stock as stock6_2_4_,
        user5_.user_id as user_id1_4_5_,
        user5_.password as password2_4_5_,
        user5_.user_profile_id as user_pro4_4_5_,
        user5_.username as username3_4_5_,
        userprofil6_.user_profile_id as user_pro1_5_6_,
        userprofil6_.email_address as email_ad2_5_6_,
        userprofil6_.name as name3_5_6_,
        userprofil6_.phone_number as phone_nu4_5_6_,
        userprofil6_.surname as surname5_5_6_ 
    from
        purchase purchase0_ 
    left outer join
        `
    order` order1_ 
        on purchase0_.order_id=order1_.order_id left outer join
            address address2_ 
                on order1_.address_id=address2_.address_id 
        left outer join
            user user3_ 
                on order1_.user_id=user3_.user_id 
        left outer join
            product product4_ 
                on purchase0_.product_id=product4_.product_id 
        left outer join
            user user5_ 
                on purchase0_.user_id=user5_.user_id 
        left outer join
            user_profile userprofil6_ 
                on user5_.user_profile_id=userprofil6_.user_profile_id 
        where
            purchase0_.purchase_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Purchase#0
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@720bf653] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@720bf653] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@720bf653]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@720bf653] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@67b100fe testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@10c07b8d, testMethod = deletePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@67b100fe testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@10c07b8d, testMethod = deletePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@67b100fe testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@6c9320c2, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 30, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.PurchaseServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.PurchaseService ro.estore.domain.service.impl.PurchaseServiceImplTest.purchaseService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.PurchaseServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.PurchaseConverter ro.estore.domain.service.impl.PurchaseServiceImplTest.purchaseConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.PurchaseServiceImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.PurchaseServiceImplTest@6c9320c2]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@67b100fe testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@6c9320c2, testMethod = updatePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImplTest.updatePurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@67b100fe testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@6c9320c2, testMethod = updatePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 31, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@67b100fe testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@6c9320c2, testMethod = updatePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.PurchaseServiceImplTest.updatePurchaseTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@cf518cf] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1e43e323]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@67b100fe testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@6c9320c2, testMethod = updatePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@cf518cf] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchase0_.purchase_id as purchase1_3_0_,
        purchase0_.order_id as order_id3_3_0_,
        purchase0_.product_id as product_4_3_0_,
        purchase0_.quantity as quantity2_3_0_,
        purchase0_.user_id as user_id5_3_0_,
        order1_.order_id as order_id1_1_1_,
        order1_.address_id as address_2_1_1_,
        order1_.user_id as user_id3_1_1_,
        address2_.address_id as address_1_0_2_,
        address2_.address_line_1 as address_2_0_2_,
        address2_.address_line_2 as address_3_0_2_,
        address2_.address_name as address_4_0_2_,
        address2_.city as city5_0_2_,
        address2_.postcode as postcode6_0_2_,
        address2_.user_profile_id as user_pro7_0_2_,
        user3_.user_id as user_id1_4_3_,
        user3_.password as password2_4_3_,
        user3_.user_profile_id as user_pro4_4_3_,
        user3_.username as username3_4_3_,
        product4_.product_id as product_1_2_4_,
        product4_.brand as brand2_2_4_,
        product4_.description as descript3_2_4_,
        product4_.name as name4_2_4_,
        product4_.price as price5_2_4_,
        product4_.stock as stock6_2_4_,
        user5_.user_id as user_id1_4_5_,
        user5_.password as password2_4_5_,
        user5_.user_profile_id as user_pro4_4_5_,
        user5_.username as username3_4_5_,
        userprofil6_.user_profile_id as user_pro1_5_6_,
        userprofil6_.email_address as email_ad2_5_6_,
        userprofil6_.name as name3_5_6_,
        userprofil6_.phone_number as phone_nu4_5_6_,
        userprofil6_.surname as surname5_5_6_ 
    from
        purchase purchase0_ 
    left outer join
        `
    order` order1_ 
        on purchase0_.order_id=order1_.order_id left outer join
            address address2_ 
                on order1_.address_id=address2_.address_id 
        left outer join
            user user3_ 
                on order1_.user_id=user3_.user_id 
        left outer join
            product product4_ 
                on purchase0_.product_id=product4_.product_id 
        left outer join
            user user5_ 
                on purchase0_.user_id=user5_.user_id 
        left outer join
            user_profile userprofil6_ 
                on user5_.user_profile_id=userprofil6_.user_profile_id 
        where
            purchase0_.purchase_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Purchase#0
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@cf518cf] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@cf518cf] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@cf518cf]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@cf518cf] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@67b100fe testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@6c9320c2, testMethod = updatePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@67b100fe testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@6c9320c2, testMethod = updatePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@67b100fe testClass = PurchaseServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b18fe4 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@7979b8b7 testClass = UserProfileRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@7979b8b7 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@1bc49bc5, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 32, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserProfileRepository ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.userProfileRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest' to bean named 'userProfileRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileRepositoryJpaImplTest.createUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@1bc49bc5]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.createUserProfileTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileRepositoryJpaImplTest.findUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.findUserProfileTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileRepositoryJpaImplTest.deleteUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.deleteUserProfileTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileRepositoryJpaImplTest.updateUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.updateUserProfileTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found finalize() method - using NO_OVERRIDE
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@7979b8b7 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@1bc49bc5, testMethod = findUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileRepositoryJpaImplTest.findUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@7979b8b7 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@1bc49bc5, testMethod = findUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@1431267b transactionManagerName = '', defaultRollback = true] for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 33, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@7979b8b7 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@1bc49bc5, testMethod = findUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.findUserProfileTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@124ac145] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@188cbcde]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7979b8b7 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@1bc49bc5, testMethod = findUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        userprofil0_.user_profile_id as user_pro1_5_0_,
        userprofil0_.email_address as email_ad2_5_0_,
        userprofil0_.name as name3_5_0_,
        userprofil0_.phone_number as phone_nu4_5_0_,
        userprofil0_.surname as surname5_5_0_ 
    from
        user_profile userprofil0_ 
    where
        userprofil0_.user_profile_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.UserProfile#0
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@124ac145]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@124ac145] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@7979b8b7 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@1bc49bc5, testMethod = findUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@7979b8b7 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@1bc49bc5, testMethod = findUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@7979b8b7 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@35267fd4, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 34, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserProfileRepository ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.userProfileRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@35267fd4]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@7979b8b7 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@35267fd4, testMethod = updateUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileRepositoryJpaImplTest.updateUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@7979b8b7 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@35267fd4, testMethod = updateUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 35, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@7979b8b7 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@35267fd4, testMethod = updateUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.updateUserProfileTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@397ef2] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@9b21bd3]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7979b8b7 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@35267fd4, testMethod = updateUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        userprofil0_.user_profile_id as user_pro1_5_0_,
        userprofil0_.email_address as email_ad2_5_0_,
        userprofil0_.name as name3_5_0_,
        userprofil0_.phone_number as phone_nu4_5_0_,
        userprofil0_.surname as surname5_5_0_ 
    from
        user_profile userprofil0_ 
    where
        userprofil0_.user_profile_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.UserProfile#0
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@397ef2]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@397ef2] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@7979b8b7 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@35267fd4, testMethod = updateUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@7979b8b7 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@35267fd4, testMethod = updateUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@7979b8b7 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@7903d448, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 36, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserProfileRepository ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.userProfileRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@7903d448]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@7979b8b7 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@7903d448, testMethod = deleteUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileRepositoryJpaImplTest.deleteUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@7979b8b7 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@7903d448, testMethod = deleteUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 37, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@7979b8b7 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@7903d448, testMethod = deleteUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.deleteUserProfileTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@4e08acf9] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@14ef2482]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7979b8b7 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@7903d448, testMethod = deleteUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        userprofil0_.user_profile_id as user_pro1_5_0_,
        userprofil0_.email_address as email_ad2_5_0_,
        userprofil0_.name as name3_5_0_,
        userprofil0_.phone_number as phone_nu4_5_0_,
        userprofil0_.surname as surname5_5_0_ 
    from
        user_profile userprofil0_ 
    where
        userprofil0_.user_profile_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.UserProfile#0
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        addresses0_.user_profile_id as user_pro7_0_0_,
        addresses0_.address_id as address_1_0_0_,
        addresses0_.address_id as address_1_0_1_,
        addresses0_.address_line_1 as address_2_0_1_,
        addresses0_.address_line_2 as address_3_0_1_,
        addresses0_.address_name as address_4_0_1_,
        addresses0_.city as city5_0_1_,
        addresses0_.postcode as postcode6_0_1_,
        addresses0_.user_profile_id as user_pro7_0_1_ 
    from
        address addresses0_ 
    where
        addresses0_.user_profile_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@4e08acf9]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@4e08acf9] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@7979b8b7 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@7903d448, testMethod = deleteUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@7979b8b7 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@7903d448, testMethod = deleteUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@7979b8b7 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@711d1a52, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 38, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserProfileRepository ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.userProfileRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@711d1a52]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@7979b8b7 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@711d1a52, testMethod = createUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileRepositoryJpaImplTest.createUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@7979b8b7 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@711d1a52, testMethod = createUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 39, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@7979b8b7 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@711d1a52, testMethod = createUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.createUserProfileTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@612e21b9] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7718a40f]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7979b8b7 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@711d1a52, testMethod = createUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 2, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 3, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 4, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@612e21b9]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@612e21b9] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@7979b8b7 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@711d1a52, testMethod = createUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@7979b8b7 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@711d1a52, testMethod = createUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@7979b8b7 testClass = UserProfileRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a04fea7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@4068102e testClass = AddressRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4068102e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@6c008c24, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 40, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.AddressRepository ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.addressRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest' to bean named 'addressRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressRepositoryJpaImplTest.findAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@6c008c24]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.findAddressTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressRepositoryJpaImplTest.updateAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.updateAddressTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressRepositoryJpaImplTest.createAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.createAddressTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressRepositoryJpaImplTest.deleteAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.deleteAddressTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found finalize() method - using NO_OVERRIDE
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@4068102e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@6c008c24, testMethod = deleteAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressRepositoryJpaImplTest.deleteAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4068102e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@6c008c24, testMethod = deleteAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@1431267b transactionManagerName = '', defaultRollback = true] for test class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 41, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4068102e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@6c008c24, testMethod = deleteAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.deleteAddressTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@fcc6023] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@472a11ae]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4068102e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@6c008c24, testMethod = deleteAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        address0_.address_id as address_1_0_0_,
        address0_.address_line_1 as address_2_0_0_,
        address0_.address_line_2 as address_3_0_0_,
        address0_.address_name as address_4_0_0_,
        address0_.city as city5_0_0_,
        address0_.postcode as postcode6_0_0_,
        address0_.user_profile_id as user_pro7_0_0_,
        userprofil1_.user_profile_id as user_pro1_5_1_,
        userprofil1_.email_address as email_ad2_5_1_,
        userprofil1_.name as name3_5_1_,
        userprofil1_.phone_number as phone_nu4_5_1_,
        userprofil1_.surname as surname5_5_1_ 
    from
        address address0_ 
    left outer join
        user_profile userprofil1_ 
            on address0_.user_profile_id=userprofil1_.user_profile_id 
    where
        address0_.address_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Address#0
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@fcc6023]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@fcc6023] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@4068102e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@6c008c24, testMethod = deleteAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4068102e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@6c008c24, testMethod = deleteAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4068102e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@1ac4ccad, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 42, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.AddressRepository ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.addressRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@1ac4ccad]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@4068102e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@1ac4ccad, testMethod = createAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressRepositoryJpaImplTest.createAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4068102e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@1ac4ccad, testMethod = createAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 43, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4068102e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@1ac4ccad, testMethod = createAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.createAddressTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@fd9ebde] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@323f3c96]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4068102e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@1ac4ccad, testMethod = createAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 5, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@fd9ebde]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@fd9ebde] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@4068102e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@1ac4ccad, testMethod = createAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4068102e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@1ac4ccad, testMethod = createAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4068102e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@33899f7a, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 44, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.AddressRepository ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.addressRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@33899f7a]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@4068102e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@33899f7a, testMethod = findAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressRepositoryJpaImplTest.findAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4068102e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@33899f7a, testMethod = findAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 45, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4068102e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@33899f7a, testMethod = findAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.findAddressTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@7899de11] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5292ceca]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4068102e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@33899f7a, testMethod = findAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        address0_.address_id as address_1_0_0_,
        address0_.address_line_1 as address_2_0_0_,
        address0_.address_line_2 as address_3_0_0_,
        address0_.address_name as address_4_0_0_,
        address0_.city as city5_0_0_,
        address0_.postcode as postcode6_0_0_,
        address0_.user_profile_id as user_pro7_0_0_,
        userprofil1_.user_profile_id as user_pro1_5_1_,
        userprofil1_.email_address as email_ad2_5_1_,
        userprofil1_.name as name3_5_1_,
        userprofil1_.phone_number as phone_nu4_5_1_,
        userprofil1_.surname as surname5_5_1_ 
    from
        address address0_ 
    left outer join
        user_profile userprofil1_ 
            on address0_.user_profile_id=userprofil1_.user_profile_id 
    where
        address0_.address_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Address#0
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@7899de11]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@7899de11] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@4068102e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@33899f7a, testMethod = findAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4068102e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@33899f7a, testMethod = findAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4068102e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@62e93c3a, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 46, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.AddressRepository ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.addressRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@62e93c3a]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@4068102e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@62e93c3a, testMethod = updateAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressRepositoryJpaImplTest.updateAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4068102e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@62e93c3a, testMethod = updateAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 47, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4068102e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@62e93c3a, testMethod = updateAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.updateAddressTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@673919a7] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@20cece0b]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4068102e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@62e93c3a, testMethod = updateAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        address0_.address_id as address_1_0_0_,
        address0_.address_line_1 as address_2_0_0_,
        address0_.address_line_2 as address_3_0_0_,
        address0_.address_name as address_4_0_0_,
        address0_.city as city5_0_0_,
        address0_.postcode as postcode6_0_0_,
        address0_.user_profile_id as user_pro7_0_0_,
        userprofil1_.user_profile_id as user_pro1_5_1_,
        userprofil1_.email_address as email_ad2_5_1_,
        userprofil1_.name as name3_5_1_,
        userprofil1_.phone_number as phone_nu4_5_1_,
        userprofil1_.surname as surname5_5_1_ 
    from
        address address0_ 
    left outer join
        user_profile userprofil1_ 
            on address0_.user_profile_id=userprofil1_.user_profile_id 
    where
        address0_.address_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Address#0
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@673919a7]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@673919a7] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@4068102e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@62e93c3a, testMethod = updateAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4068102e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@62e93c3a, testMethod = updateAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@4068102e testClass = AddressRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44bd4b0a testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@1deceb67, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 48, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.userRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' to bean named 'userRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.createUser' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@1deceb67]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.createUser()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.findUserByUsernameTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.saveAndFindUserByUsernameAndPasswordTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.saveAndFindUserByUsernameAndPasswordTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.findUserByUsernameAndPasswordFailTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameAndPasswordFailTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.deleteUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.deleteUserTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.updateUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.updateUserTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.findUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.findUserByUsernameFailTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameFailTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found finalize() method - using NO_OVERRIDE
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@1deceb67, testMethod = findUserByUsernameAndPasswordFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.findUserByUsernameAndPasswordFailTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@1deceb67, testMethod = findUserByUsernameAndPasswordFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@1431267b transactionManagerName = '', defaultRollback = true] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 49, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@1deceb67, testMethod = findUserByUsernameAndPasswordFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameAndPasswordFailTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@292158f8] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5d5c04f9]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@1deceb67, testMethod = findUserByUsernameAndPasswordFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG criteria.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 )
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_,
        user0_.password as password2_4_,
        user0_.user_profile_id as user_pro4_4_,
        user0_.username as username3_4_ 
    from
        user user0_ 
    where
        user0_.username=? 
        and user0_.password=?
 [main] ERROR impl.UserRepositoryJpaImpl - No user was found (Index: 0, Size: 0)
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@292158f8]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@292158f8] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@1deceb67, testMethod = findUserByUsernameAndPasswordFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@1deceb67, testMethod = findUserByUsernameAndPasswordFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@61cd1c71, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 50, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.userRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@61cd1c71]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@61cd1c71, testMethod = findUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.findUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@61cd1c71, testMethod = findUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 51, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@61cd1c71, testMethod = findUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@6724cdec] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1a4d1ab7]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@61cd1c71, testMethod = findUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.password as password2_4_0_,
        user0_.user_profile_id as user_pro4_4_0_,
        user0_.username as username3_4_0_,
        userprofil1_.user_profile_id as user_pro1_5_1_,
        userprofil1_.email_address as email_ad2_5_1_,
        userprofil1_.name as name3_5_1_,
        userprofil1_.phone_number as phone_nu4_5_1_,
        userprofil1_.surname as surname5_5_1_ 
    from
        user user0_ 
    left outer join
        user_profile userprofil1_ 
            on user0_.user_profile_id=userprofil1_.user_profile_id 
    where
        user0_.user_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.User#0
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@6724cdec]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@6724cdec] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@61cd1c71, testMethod = findUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@61cd1c71, testMethod = findUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2a3194c6, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 52, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.userRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2a3194c6]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2a3194c6, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.saveAndFindUserByUsernameAndPasswordTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2a3194c6, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 53, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2a3194c6, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserRepositoryJpaImplTest.saveAndFindUserByUsernameAndPasswordTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@2819c460] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@78d6447a]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2a3194c6, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG criteria.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 )
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_,
        user0_.password as password2_4_,
        user0_.user_profile_id as user_pro4_4_,
        user0_.username as username3_4_ 
    from
        user user0_ 
    where
        user0_.username=? 
        and user0_.password=?
 [main] DEBUG logging.DelegatingBasicLogger - Result set row: 0
 [main] DEBUG loader.Loader - Result row: EntityKey[ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#0]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        userprofil0_.user_profile_id as user_pro1_5_0_,
        userprofil0_.email_address as email_ad2_5_0_,
        userprofil0_.name as name3_5_0_,
        userprofil0_.phone_number as phone_nu4_5_0_,
        userprofil0_.surname as surname5_5_0_ 
    from
        user_profile userprofil0_ 
    where
        userprofil0_.user_profile_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.UserProfile#0
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#0]
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@2819c460]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@2819c460] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2a3194c6, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2a3194c6, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@8851ce1, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 54, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.userRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@8851ce1]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@8851ce1, testMethod = updateUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.updateUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@8851ce1, testMethod = updateUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 55, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@8851ce1, testMethod = updateUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserRepositoryJpaImplTest.updateUserTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@2d9dff65] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@34d52ecd]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@8851ce1, testMethod = updateUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.password as password2_4_0_,
        user0_.user_profile_id as user_pro4_4_0_,
        user0_.username as username3_4_0_,
        userprofil1_.user_profile_id as user_pro1_5_1_,
        userprofil1_.email_address as email_ad2_5_1_,
        userprofil1_.name as name3_5_1_,
        userprofil1_.phone_number as phone_nu4_5_1_,
        userprofil1_.surname as surname5_5_1_ 
    from
        user user0_ 
    left outer join
        user_profile userprofil1_ 
            on user0_.user_profile_id=userprofil1_.user_profile_id 
    where
        user0_.user_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.User#0
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@2d9dff65]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@2d9dff65] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@8851ce1, testMethod = updateUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@8851ce1, testMethod = updateUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6a094db2, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 56, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.userRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6a094db2]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6a094db2, testMethod = findUserByUsernameFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.findUserByUsernameFailTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6a094db2, testMethod = findUserByUsernameFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 57, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6a094db2, testMethod = findUserByUsernameFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameFailTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@65bdd558] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@60325987]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6a094db2, testMethod = findUserByUsernameFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG criteria.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_,
        user0_.password as password2_4_,
        user0_.user_profile_id as user_pro4_4_,
        user0_.username as username3_4_ 
    from
        user user0_ 
    where
        user0_.username=?
 [main] ERROR impl.UserRepositoryJpaImpl - No user was found (No entity found for query)
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@65bdd558]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@65bdd558] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6a094db2, testMethod = findUserByUsernameFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6a094db2, testMethod = findUserByUsernameFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@48528634, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 58, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.userRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@48528634]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@48528634, testMethod = createUser@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.createUser' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@48528634, testMethod = createUser@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 59, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@48528634, testMethod = createUser@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserRepositoryJpaImplTest.createUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@5e1d03d7] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@22587507]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@48528634, testMethod = createUser@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 2, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 3, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 6, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 7, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 3, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 7, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 8, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 4, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 9, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 10, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@5e1d03d7]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@5e1d03d7] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@48528634, testMethod = createUser@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@48528634, testMethod = createUser@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@508a65bf, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 60, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.userRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@508a65bf]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@508a65bf, testMethod = findUserByUsernameTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.findUserByUsernameTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@508a65bf, testMethod = findUserByUsernameTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 61, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@508a65bf, testMethod = findUserByUsernameTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@17f2dd85] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@23b8d9f3]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@508a65bf, testMethod = findUserByUsernameTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG criteria.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_,
        user0_.password as password2_4_,
        user0_.user_profile_id as user_pro4_4_,
        user0_.username as username3_4_ 
    from
        user user0_ 
    where
        user0_.username=?
 [main] DEBUG logging.DelegatingBasicLogger - Result set row: 0
 [main] DEBUG loader.Loader - Result row: EntityKey[ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#0]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        userprofil0_.user_profile_id as user_pro1_5_0_,
        userprofil0_.email_address as email_ad2_5_0_,
        userprofil0_.name as name3_5_0_,
        userprofil0_.phone_number as phone_nu4_5_0_,
        userprofil0_.surname as surname5_5_0_ 
    from
        user_profile userprofil0_ 
    where
        userprofil0_.user_profile_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.UserProfile#0
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#0]
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@17f2dd85]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@17f2dd85] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@508a65bf, testMethod = findUserByUsernameTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@508a65bf, testMethod = findUserByUsernameTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@7b6860f9, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 62, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.userRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@7b6860f9]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@7b6860f9, testMethod = deleteUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.deleteUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@7b6860f9, testMethod = deleteUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 63, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@7b6860f9, testMethod = deleteUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserRepositoryJpaImplTest.deleteUserTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@60f70249] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@46c269e0]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@7b6860f9, testMethod = deleteUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.password as password2_4_0_,
        user0_.user_profile_id as user_pro4_4_0_,
        user0_.username as username3_4_0_,
        userprofil1_.user_profile_id as user_pro1_5_1_,
        userprofil1_.email_address as email_ad2_5_1_,
        userprofil1_.name as name3_5_1_,
        userprofil1_.phone_number as phone_nu4_5_1_,
        userprofil1_.surname as surname5_5_1_ 
    from
        user user0_ 
    left outer join
        user_profile userprofil1_ 
            on user0_.user_profile_id=userprofil1_.user_profile_id 
    where
        user0_.user_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.User#0
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.User.orders#0]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        orders0_.user_id as user_id3_1_0_,
        orders0_.order_id as order_id1_1_0_,
        orders0_.order_id as order_id1_1_1_,
        orders0_.address_id as address_2_1_1_,
        orders0_.user_id as user_id3_1_1_,
        address1_.address_id as address_1_0_2_,
        address1_.address_line_1 as address_2_0_2_,
        address1_.address_line_2 as address_3_0_2_,
        address1_.address_name as address_4_0_2_,
        address1_.city as city5_0_2_,
        address1_.postcode as postcode6_0_2_,
        address1_.user_profile_id as user_pro7_0_2_,
        userprofil2_.user_profile_id as user_pro1_5_3_,
        userprofil2_.email_address as email_ad2_5_3_,
        userprofil2_.name as name3_5_3_,
        userprofil2_.phone_number as phone_nu4_5_3_,
        userprofil2_.surname as surname5_5_3_ 
    from
        `
    order` orders0_ left outer join
        address address1_ 
            on orders0_.address_id=address1_.address_id 
    left outer join
        user_profile userprofil2_ 
            on address1_.user_profile_id=userprofil2_.user_profile_id 
    where
        orders0_.user_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.User.orders#0]
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.User.orders#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.User.orders
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.User.orders#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.User.orders
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchases0_.order_id as order_id3_3_0_,
        purchases0_.purchase_id as purchase1_3_0_,
        purchases0_.purchase_id as purchase1_3_1_,
        purchases0_.order_id as order_id3_3_1_,
        purchases0_.product_id as product_4_3_1_,
        purchases0_.quantity as quantity2_3_1_,
        purchases0_.user_id as user_id5_3_1_,
        product1_.product_id as product_1_2_2_,
        product1_.brand as brand2_2_2_,
        product1_.description as descript3_2_2_,
        product1_.name as name4_2_2_,
        product1_.price as price5_2_2_,
        product1_.stock as stock6_2_2_,
        user2_.user_id as user_id1_4_3_,
        user2_.password as password2_4_3_,
        user2_.user_profile_id as user_pro4_4_3_,
        user2_.username as username3_4_3_,
        userprofil3_.user_profile_id as user_pro1_5_4_,
        userprofil3_.email_address as email_ad2_5_4_,
        userprofil3_.name as name3_5_4_,
        userprofil3_.phone_number as phone_nu4_5_4_,
        userprofil3_.surname as surname5_5_4_ 
    from
        purchase purchases0_ 
    left outer join
        product product1_ 
            on purchases0_.product_id=product1_.product_id 
    left outer join
        user user2_ 
            on purchases0_.user_id=user2_.user_id 
    left outer join
        user_profile userprofil3_ 
            on user2_.user_profile_id=userprofil3_.user_profile_id 
    where
        purchases0_.order_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.Order.purchases
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.Order.purchases
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        addresses0_.user_profile_id as user_pro7_0_0_,
        addresses0_.address_id as address_1_0_0_,
        addresses0_.address_id as address_1_0_1_,
        addresses0_.address_line_1 as address_2_0_1_,
        addresses0_.address_line_2 as address_3_0_1_,
        addresses0_.address_name as address_4_0_1_,
        addresses0_.city as city5_0_1_,
        addresses0_.postcode as postcode6_0_1_,
        addresses0_.user_profile_id as user_pro7_0_1_ 
    from
        address addresses0_ 
    where
        addresses0_.user_profile_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@60f70249]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@60f70249] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@7b6860f9, testMethod = deleteUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@7b6860f9, testMethod = deleteUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@73c9e8e8 testClass = UserRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@de8039f testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@3968bc60 testClass = OrderRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@3968bc60 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@227a47, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 64, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.OrderRepository ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.orderRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest' to bean named 'orderRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderRepositoryJpaImplTest.updateOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@227a47]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.updateOrderTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderRepositoryJpaImplTest.createOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.createOrderTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderRepositoryJpaImplTest.deleteOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.deleteOrderTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderRepositoryJpaImplTest.findOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.findOrderTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found finalize() method - using NO_OVERRIDE
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@3968bc60 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@227a47, testMethod = createOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderRepositoryJpaImplTest.createOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@3968bc60 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@227a47, testMethod = createOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@1431267b transactionManagerName = '', defaultRollback = true] for test class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 65, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@3968bc60 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@227a47, testMethod = createOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.createOrderTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@70228253] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@421056e5]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3968bc60 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@227a47, testMethod = createOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 5, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 11, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 12, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@70228253]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@70228253] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@3968bc60 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@227a47, testMethod = createOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@3968bc60 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@227a47, testMethod = createOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@3968bc60 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@54e3658c, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 66, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.OrderRepository ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.orderRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@54e3658c]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@3968bc60 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@54e3658c, testMethod = findOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderRepositoryJpaImplTest.findOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@3968bc60 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@54e3658c, testMethod = findOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 67, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@3968bc60 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@54e3658c, testMethod = findOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.findOrderTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@43e9089] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@a66e580]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3968bc60 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@54e3658c, testMethod = findOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        order0_.order_id as order_id1_1_0_,
        order0_.address_id as address_2_1_0_,
        order0_.user_id as user_id3_1_0_,
        address1_.address_id as address_1_0_1_,
        address1_.address_line_1 as address_2_0_1_,
        address1_.address_line_2 as address_3_0_1_,
        address1_.address_name as address_4_0_1_,
        address1_.city as city5_0_1_,
        address1_.postcode as postcode6_0_1_,
        address1_.user_profile_id as user_pro7_0_1_,
        userprofil2_.user_profile_id as user_pro1_5_2_,
        userprofil2_.email_address as email_ad2_5_2_,
        userprofil2_.name as name3_5_2_,
        userprofil2_.phone_number as phone_nu4_5_2_,
        userprofil2_.surname as surname5_5_2_,
        user3_.user_id as user_id1_4_3_,
        user3_.password as password2_4_3_,
        user3_.user_profile_id as user_pro4_4_3_,
        user3_.username as username3_4_3_,
        userprofil4_.user_profile_id as user_pro1_5_4_,
        userprofil4_.email_address as email_ad2_5_4_,
        userprofil4_.name as name3_5_4_,
        userprofil4_.phone_number as phone_nu4_5_4_,
        userprofil4_.surname as surname5_5_4_ 
    from
        `
    order` order0_ left outer join
        address address1_ 
            on order0_.address_id=address1_.address_id 
    left outer join
        user_profile userprofil2_ 
            on address1_.user_profile_id=userprofil2_.user_profile_id 
    left outer join
        user user3_ 
            on order0_.user_id=user3_.user_id 
    left outer join
        user_profile userprofil4_ 
            on user3_.user_profile_id=userprofil4_.user_profile_id 
    where
        order0_.order_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Order#0
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@43e9089]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@43e9089] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@3968bc60 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@54e3658c, testMethod = findOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@3968bc60 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@54e3658c, testMethod = findOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@3968bc60 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@4c6007fb, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 68, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.OrderRepository ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.orderRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@4c6007fb]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@3968bc60 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@4c6007fb, testMethod = deleteOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderRepositoryJpaImplTest.deleteOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@3968bc60 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@4c6007fb, testMethod = deleteOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 69, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@3968bc60 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@4c6007fb, testMethod = deleteOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.deleteOrderTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@3e33d73e] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@e84fb85]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3968bc60 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@4c6007fb, testMethod = deleteOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        order0_.order_id as order_id1_1_0_,
        order0_.address_id as address_2_1_0_,
        order0_.user_id as user_id3_1_0_,
        address1_.address_id as address_1_0_1_,
        address1_.address_line_1 as address_2_0_1_,
        address1_.address_line_2 as address_3_0_1_,
        address1_.address_name as address_4_0_1_,
        address1_.city as city5_0_1_,
        address1_.postcode as postcode6_0_1_,
        address1_.user_profile_id as user_pro7_0_1_,
        userprofil2_.user_profile_id as user_pro1_5_2_,
        userprofil2_.email_address as email_ad2_5_2_,
        userprofil2_.name as name3_5_2_,
        userprofil2_.phone_number as phone_nu4_5_2_,
        userprofil2_.surname as surname5_5_2_,
        user3_.user_id as user_id1_4_3_,
        user3_.password as password2_4_3_,
        user3_.user_profile_id as user_pro4_4_3_,
        user3_.username as username3_4_3_,
        userprofil4_.user_profile_id as user_pro1_5_4_,
        userprofil4_.email_address as email_ad2_5_4_,
        userprofil4_.name as name3_5_4_,
        userprofil4_.phone_number as phone_nu4_5_4_,
        userprofil4_.surname as surname5_5_4_ 
    from
        `
    order` order0_ left outer join
        address address1_ 
            on order0_.address_id=address1_.address_id 
    left outer join
        user_profile userprofil2_ 
            on address1_.user_profile_id=userprofil2_.user_profile_id 
    left outer join
        user user3_ 
            on order0_.user_id=user3_.user_id 
    left outer join
        user_profile userprofil4_ 
            on user3_.user_profile_id=userprofil4_.user_profile_id 
    where
        order0_.order_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Order#0
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchases0_.order_id as order_id3_3_0_,
        purchases0_.purchase_id as purchase1_3_0_,
        purchases0_.purchase_id as purchase1_3_1_,
        purchases0_.order_id as order_id3_3_1_,
        purchases0_.product_id as product_4_3_1_,
        purchases0_.quantity as quantity2_3_1_,
        purchases0_.user_id as user_id5_3_1_,
        product1_.product_id as product_1_2_2_,
        product1_.brand as brand2_2_2_,
        product1_.description as descript3_2_2_,
        product1_.name as name4_2_2_,
        product1_.price as price5_2_2_,
        product1_.stock as stock6_2_2_,
        user2_.user_id as user_id1_4_3_,
        user2_.password as password2_4_3_,
        user2_.user_profile_id as user_pro4_4_3_,
        user2_.username as username3_4_3_,
        userprofil3_.user_profile_id as user_pro1_5_4_,
        userprofil3_.email_address as email_ad2_5_4_,
        userprofil3_.name as name3_5_4_,
        userprofil3_.phone_number as phone_nu4_5_4_,
        userprofil3_.surname as surname5_5_4_ 
    from
        purchase purchases0_ 
    left outer join
        product product1_ 
            on purchases0_.product_id=product1_.product_id 
    left outer join
        user user2_ 
            on purchases0_.user_id=user2_.user_id 
    left outer join
        user_profile userprofil3_ 
            on user2_.user_profile_id=userprofil3_.user_profile_id 
    where
        purchases0_.order_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.Order.purchases
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.Order.purchases
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@3e33d73e]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@3e33d73e] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@3968bc60 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@4c6007fb, testMethod = deleteOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@3968bc60 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@4c6007fb, testMethod = deleteOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@3968bc60 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@78054f54, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 70, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.OrderRepository ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.orderRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@78054f54]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@3968bc60 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@78054f54, testMethod = updateOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderRepositoryJpaImplTest.updateOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@3968bc60 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@78054f54, testMethod = updateOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 71, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@3968bc60 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@78054f54, testMethod = updateOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.updateOrderTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@cb7fa71] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@654c7d2d]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@3968bc60 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@78054f54, testMethod = updateOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        order0_.order_id as order_id1_1_0_,
        order0_.address_id as address_2_1_0_,
        order0_.user_id as user_id3_1_0_,
        address1_.address_id as address_1_0_1_,
        address1_.address_line_1 as address_2_0_1_,
        address1_.address_line_2 as address_3_0_1_,
        address1_.address_name as address_4_0_1_,
        address1_.city as city5_0_1_,
        address1_.postcode as postcode6_0_1_,
        address1_.user_profile_id as user_pro7_0_1_,
        userprofil2_.user_profile_id as user_pro1_5_2_,
        userprofil2_.email_address as email_ad2_5_2_,
        userprofil2_.name as name3_5_2_,
        userprofil2_.phone_number as phone_nu4_5_2_,
        userprofil2_.surname as surname5_5_2_,
        user3_.user_id as user_id1_4_3_,
        user3_.password as password2_4_3_,
        user3_.user_profile_id as user_pro4_4_3_,
        user3_.username as username3_4_3_,
        userprofil4_.user_profile_id as user_pro1_5_4_,
        userprofil4_.email_address as email_ad2_5_4_,
        userprofil4_.name as name3_5_4_,
        userprofil4_.phone_number as phone_nu4_5_4_,
        userprofil4_.surname as surname5_5_4_ 
    from
        `
    order` order0_ left outer join
        address address1_ 
            on order0_.address_id=address1_.address_id 
    left outer join
        user_profile userprofil2_ 
            on address1_.user_profile_id=userprofil2_.user_profile_id 
    left outer join
        user user3_ 
            on order0_.user_id=user3_.user_id 
    left outer join
        user_profile userprofil4_ 
            on user3_.user_profile_id=userprofil4_.user_profile_id 
    where
        order0_.order_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Order#0
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@cb7fa71]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@cb7fa71] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@3968bc60 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@78054f54, testMethod = updateOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@3968bc60 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@78054f54, testMethod = updateOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@3968bc60 testClass = OrderRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26f46fa6 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@5460b754 testClass = UserProfileServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@5460b754 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@c27a3a2, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 72, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserProfileService ro.estore.domain.service.impl.UserProfileServiceImplTest.userProfileService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileServiceImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.UserProfileServiceImplTest' to bean named 'userProfileServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.UserProfileConverter ro.estore.domain.service.impl.UserProfileServiceImplTest.userProfileConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.UserProfileServiceImplTest' to bean named 'userProfileConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImplTest.createUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserProfileServiceImplTest@c27a3a2]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserProfileServiceImplTest.createUserProfileTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImplTest.findUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserProfileServiceImplTest.findUserProfileTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImplTest.deleteUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserProfileServiceImplTest.deleteUserProfileTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImplTest.updateUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserProfileServiceImplTest.updateUserProfileTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found finalize() method - using NO_OVERRIDE
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@5460b754 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@c27a3a2, testMethod = findUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImplTest.findUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@5460b754 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@c27a3a2, testMethod = findUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@1431267b transactionManagerName = '', defaultRollback = true] for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 73, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@5460b754 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@c27a3a2, testMethod = findUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserProfileServiceImplTest.findUserProfileTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@68d7a2df] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3ed7821]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5460b754 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@c27a3a2, testMethod = findUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@68d7a2df] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG spi.SqlStatementLogger - 
    select
        userprofil0_.user_profile_id as user_pro1_5_0_,
        userprofil0_.email_address as email_ad2_5_0_,
        userprofil0_.name as name3_5_0_,
        userprofil0_.phone_number as phone_nu4_5_0_,
        userprofil0_.surname as surname5_5_0_ 
    from
        user_profile userprofil0_ 
    where
        userprofil0_.user_profile_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.UserProfile#0
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        addresses0_.user_profile_id as user_pro7_0_0_,
        addresses0_.address_id as address_1_0_0_,
        addresses0_.address_id as address_1_0_1_,
        addresses0_.address_line_1 as address_2_0_1_,
        addresses0_.address_line_2 as address_3_0_1_,
        addresses0_.address_name as address_4_0_1_,
        addresses0_.city as city5_0_1_,
        addresses0_.postcode as postcode6_0_1_,
        addresses0_.user_profile_id as user_pro7_0_1_ 
    from
        address addresses0_ 
    where
        addresses0_.user_profile_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@68d7a2df]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@68d7a2df] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@5460b754 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@c27a3a2, testMethod = findUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@5460b754 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@c27a3a2, testMethod = findUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@5460b754 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@77bbadc, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 74, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserProfileService ro.estore.domain.service.impl.UserProfileServiceImplTest.userProfileService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.UserProfileConverter ro.estore.domain.service.impl.UserProfileServiceImplTest.userProfileConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserProfileServiceImplTest@77bbadc]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@5460b754 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@77bbadc, testMethod = updateUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImplTest.updateUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@5460b754 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@77bbadc, testMethod = updateUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 75, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@5460b754 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@77bbadc, testMethod = updateUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserProfileServiceImplTest.updateUserProfileTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@3c3a0032] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@49faf066]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5460b754 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@77bbadc, testMethod = updateUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@3c3a0032] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG spi.SqlStatementLogger - 
    select
        userprofil0_.user_profile_id as user_pro1_5_0_,
        userprofil0_.email_address as email_ad2_5_0_,
        userprofil0_.name as name3_5_0_,
        userprofil0_.phone_number as phone_nu4_5_0_,
        userprofil0_.surname as surname5_5_0_ 
    from
        user_profile userprofil0_ 
    where
        userprofil0_.user_profile_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.UserProfile#0
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        addresses0_.user_profile_id as user_pro7_0_0_,
        addresses0_.address_id as address_1_0_0_,
        addresses0_.address_id as address_1_0_1_,
        addresses0_.address_line_1 as address_2_0_1_,
        addresses0_.address_line_2 as address_3_0_1_,
        addresses0_.address_name as address_4_0_1_,
        addresses0_.city as city5_0_1_,
        addresses0_.postcode as postcode6_0_1_,
        addresses0_.user_profile_id as user_pro7_0_1_ 
    from
        address addresses0_ 
    where
        addresses0_.user_profile_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@3c3a0032] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@3c3a0032] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@3c3a0032]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@3c3a0032] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@5460b754 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@77bbadc, testMethod = updateUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@5460b754 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@77bbadc, testMethod = updateUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@5460b754 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@53e800f9, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 76, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserProfileService ro.estore.domain.service.impl.UserProfileServiceImplTest.userProfileService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.UserProfileConverter ro.estore.domain.service.impl.UserProfileServiceImplTest.userProfileConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserProfileServiceImplTest@53e800f9]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@5460b754 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@53e800f9, testMethod = deleteUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImplTest.deleteUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@5460b754 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@53e800f9, testMethod = deleteUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 77, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@5460b754 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@53e800f9, testMethod = deleteUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserProfileServiceImplTest.deleteUserProfileTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@337bbfdf] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@30b131b2]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5460b754 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@53e800f9, testMethod = deleteUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@337bbfdf] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG spi.SqlStatementLogger - 
    select
        userprofil0_.user_profile_id as user_pro1_5_0_,
        userprofil0_.email_address as email_ad2_5_0_,
        userprofil0_.name as name3_5_0_,
        userprofil0_.phone_number as phone_nu4_5_0_,
        userprofil0_.surname as surname5_5_0_ 
    from
        user_profile userprofil0_ 
    where
        userprofil0_.user_profile_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.UserProfile#0
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        addresses0_.user_profile_id as user_pro7_0_0_,
        addresses0_.address_id as address_1_0_0_,
        addresses0_.address_id as address_1_0_1_,
        addresses0_.address_line_1 as address_2_0_1_,
        addresses0_.address_line_2 as address_3_0_1_,
        addresses0_.address_name as address_4_0_1_,
        addresses0_.city as city5_0_1_,
        addresses0_.postcode as postcode6_0_1_,
        addresses0_.user_profile_id as user_pro7_0_1_ 
    from
        address addresses0_ 
    where
        addresses0_.user_profile_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.UserProfile.addresses#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@337bbfdf] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@337bbfdf] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@337bbfdf]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@337bbfdf] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@5460b754 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@53e800f9, testMethod = deleteUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@5460b754 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@53e800f9, testMethod = deleteUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@5460b754 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@6cc86152, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 78, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserProfileService ro.estore.domain.service.impl.UserProfileServiceImplTest.userProfileService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.UserProfileConverter ro.estore.domain.service.impl.UserProfileServiceImplTest.userProfileConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserProfileServiceImplTest@6cc86152]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@5460b754 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@6cc86152, testMethod = createUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImplTest.createUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@5460b754 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@6cc86152, testMethod = createUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 79, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@5460b754 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@6cc86152, testMethod = createUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserProfileServiceImplTest.createUserProfileTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@611a990b] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@65e21ce3]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5460b754 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@6cc86152, testMethod = createUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@611a990b] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 4, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 8, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 9, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@611a990b]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@611a990b] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@5460b754 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@6cc86152, testMethod = createUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@5460b754 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@6cc86152, testMethod = createUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@5460b754 testClass = UserProfileServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a9f023e testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@1aad0b1 testClass = ProductRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@1aad0b1 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@5af8bb51, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 80, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.productRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest' to bean named 'productRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductRepositoryJpaImplTest.findProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@5af8bb51]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.findProductTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductRepositoryJpaImplTest.createProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.createProductTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductRepositoryJpaImplTest.deleteProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.deleteProductTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductRepositoryJpaImplTest.updateProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.updateProductTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found finalize() method - using NO_OVERRIDE
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@1aad0b1 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@5af8bb51, testMethod = deleteProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductRepositoryJpaImplTest.deleteProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@1aad0b1 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@5af8bb51, testMethod = deleteProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@1431267b transactionManagerName = '', defaultRollback = true] for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 81, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@1aad0b1 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@5af8bb51, testMethod = deleteProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.deleteProductTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@54d8c20d] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4d95a72e]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1aad0b1 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@5af8bb51, testMethod = deleteProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        product0_.product_id as product_1_2_0_,
        product0_.brand as brand2_2_0_,
        product0_.description as descript3_2_0_,
        product0_.name as name4_2_0_,
        product0_.price as price5_2_0_,
        product0_.stock as stock6_2_0_ 
    from
        product product0_ 
    where
        product0_.product_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Product#0
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@54d8c20d]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@54d8c20d] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@1aad0b1 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@5af8bb51, testMethod = deleteProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@1aad0b1 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@5af8bb51, testMethod = deleteProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@1aad0b1 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@36681447, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 82, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.productRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@36681447]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@1aad0b1 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@36681447, testMethod = createProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductRepositoryJpaImplTest.createProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@1aad0b1 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@36681447, testMethod = createProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 83, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@1aad0b1 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@36681447, testMethod = createProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.createProductTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@4d21c56e] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@32e54a9d]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1aad0b1 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@36681447, testMethod = createProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG id.IncrementGenerator - Fetching initial value: select max(product_id) from product
 [main] DEBUG spi.SqlStatementLogger - 
    select
        max(product_id) 
    from
        product
 [main] DEBUG id.IncrementGenerator - First free id: 2
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 2, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@4d21c56e]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@4d21c56e] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@1aad0b1 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@36681447, testMethod = createProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@1aad0b1 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@36681447, testMethod = createProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@1aad0b1 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@1cd3b138, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 84, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.productRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@1cd3b138]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@1aad0b1 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@1cd3b138, testMethod = findProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductRepositoryJpaImplTest.findProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@1aad0b1 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@1cd3b138, testMethod = findProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 85, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@1aad0b1 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@1cd3b138, testMethod = findProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.findProductTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@151bf776] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@40e37b06]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1aad0b1 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@1cd3b138, testMethod = findProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        product0_.product_id as product_1_2_0_,
        product0_.brand as brand2_2_0_,
        product0_.description as descript3_2_0_,
        product0_.name as name4_2_0_,
        product0_.price as price5_2_0_,
        product0_.stock as stock6_2_0_ 
    from
        product product0_ 
    where
        product0_.product_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Product#0
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@151bf776]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@151bf776] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@1aad0b1 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@1cd3b138, testMethod = findProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@1aad0b1 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@1cd3b138, testMethod = findProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@1aad0b1 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@56da7487, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 86, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.productRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@56da7487]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@1aad0b1 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@56da7487, testMethod = updateProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductRepositoryJpaImplTest.updateProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@1aad0b1 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@56da7487, testMethod = updateProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 87, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@1aad0b1 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@56da7487, testMethod = updateProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.updateProductTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@599e4d41] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2f2bff16]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@1aad0b1 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@56da7487, testMethod = updateProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        product0_.product_id as product_1_2_0_,
        product0_.brand as brand2_2_0_,
        product0_.description as descript3_2_0_,
        product0_.name as name4_2_0_,
        product0_.price as price5_2_0_,
        product0_.stock as stock6_2_0_ 
    from
        product product0_ 
    where
        product0_.product_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Product#0
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@599e4d41]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@599e4d41] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@1aad0b1 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@56da7487, testMethod = updateProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@1aad0b1 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@56da7487, testMethod = updateProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@1aad0b1 testClass = ProductRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c3edf4c testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@59cda16e testClass = OrderServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@59cda16e testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@12e0f1cb, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 88, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.OrderService ro.estore.domain.service.impl.OrderServiceImplTest.orderService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderServiceImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.OrderServiceImplTest' to bean named 'orderServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.OrderConverter ro.estore.domain.service.impl.OrderServiceImplTest.orderConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.OrderServiceImplTest' to bean named 'orderConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.service.impl.OrderServiceImplTest.productConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.OrderServiceImplTest' to bean named 'productConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.OrderServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.OrderServiceImplTest' to bean named 'productServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImplTest.updateOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.OrderServiceImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.OrderServiceImplTest@12e0f1cb]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.OrderServiceImplTest.updateOrderTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImplTest.createOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.OrderServiceImplTest.createOrderTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImplTest.deleteOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.OrderServiceImplTest.deleteOrderTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImplTest.findOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.OrderServiceImplTest.findOrderTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found finalize() method - using NO_OVERRIDE
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@59cda16e testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@12e0f1cb, testMethod = createOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImplTest.createOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@59cda16e testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@12e0f1cb, testMethod = createOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.domain.service.impl.OrderServiceImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@1431267b transactionManagerName = '', defaultRollback = true] for test class [ro.estore.domain.service.impl.OrderServiceImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 89, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@59cda16e testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@12e0f1cb, testMethod = createOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.OrderServiceImplTest.createOrderTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@588f63c] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@53f4c1e6]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@59cda16e testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@12e0f1cb, testMethod = createOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@588f63c] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 6, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 13, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 14, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@588f63c]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@588f63c] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@59cda16e testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@12e0f1cb, testMethod = createOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@59cda16e testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@12e0f1cb, testMethod = createOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@59cda16e testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@434514d8, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 90, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.OrderService ro.estore.domain.service.impl.OrderServiceImplTest.orderService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.OrderConverter ro.estore.domain.service.impl.OrderServiceImplTest.orderConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.service.impl.OrderServiceImplTest.productConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.OrderServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.OrderServiceImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.OrderServiceImplTest@434514d8]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@59cda16e testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@434514d8, testMethod = findOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImplTest.findOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@59cda16e testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@434514d8, testMethod = findOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 91, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@59cda16e testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@434514d8, testMethod = findOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.OrderServiceImplTest.findOrderTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@6b1dc20f] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@bc042d5]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@59cda16e testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@434514d8, testMethod = findOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@6b1dc20f] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG spi.SqlStatementLogger - 
    select
        order0_.order_id as order_id1_1_0_,
        order0_.address_id as address_2_1_0_,
        order0_.user_id as user_id3_1_0_,
        address1_.address_id as address_1_0_1_,
        address1_.address_line_1 as address_2_0_1_,
        address1_.address_line_2 as address_3_0_1_,
        address1_.address_name as address_4_0_1_,
        address1_.city as city5_0_1_,
        address1_.postcode as postcode6_0_1_,
        address1_.user_profile_id as user_pro7_0_1_,
        userprofil2_.user_profile_id as user_pro1_5_2_,
        userprofil2_.email_address as email_ad2_5_2_,
        userprofil2_.name as name3_5_2_,
        userprofil2_.phone_number as phone_nu4_5_2_,
        userprofil2_.surname as surname5_5_2_,
        user3_.user_id as user_id1_4_3_,
        user3_.password as password2_4_3_,
        user3_.user_profile_id as user_pro4_4_3_,
        user3_.username as username3_4_3_,
        userprofil4_.user_profile_id as user_pro1_5_4_,
        userprofil4_.email_address as email_ad2_5_4_,
        userprofil4_.name as name3_5_4_,
        userprofil4_.phone_number as phone_nu4_5_4_,
        userprofil4_.surname as surname5_5_4_ 
    from
        `
    order` order0_ left outer join
        address address1_ 
            on order0_.address_id=address1_.address_id 
    left outer join
        user_profile userprofil2_ 
            on address1_.user_profile_id=userprofil2_.user_profile_id 
    left outer join
        user user3_ 
            on order0_.user_id=user3_.user_id 
    left outer join
        user_profile userprofil4_ 
            on user3_.user_profile_id=userprofil4_.user_profile_id 
    where
        order0_.order_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Order#0
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchases0_.order_id as order_id3_3_0_,
        purchases0_.purchase_id as purchase1_3_0_,
        purchases0_.purchase_id as purchase1_3_1_,
        purchases0_.order_id as order_id3_3_1_,
        purchases0_.product_id as product_4_3_1_,
        purchases0_.quantity as quantity2_3_1_,
        purchases0_.user_id as user_id5_3_1_,
        product1_.product_id as product_1_2_2_,
        product1_.brand as brand2_2_2_,
        product1_.description as descript3_2_2_,
        product1_.name as name4_2_2_,
        product1_.price as price5_2_2_,
        product1_.stock as stock6_2_2_,
        user2_.user_id as user_id1_4_3_,
        user2_.password as password2_4_3_,
        user2_.user_profile_id as user_pro4_4_3_,
        user2_.username as username3_4_3_,
        userprofil3_.user_profile_id as user_pro1_5_4_,
        userprofil3_.email_address as email_ad2_5_4_,
        userprofil3_.name as name3_5_4_,
        userprofil3_.phone_number as phone_nu4_5_4_,
        userprofil3_.surname as surname5_5_4_ 
    from
        purchase purchases0_ 
    left outer join
        product product1_ 
            on purchases0_.product_id=product1_.product_id 
    left outer join
        user user2_ 
            on purchases0_.user_id=user2_.user_id 
    left outer join
        user_profile userprofil3_ 
            on user2_.user_profile_id=userprofil3_.user_profile_id 
    where
        purchases0_.order_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.Order.purchases
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.Order.purchases
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@6b1dc20f]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@6b1dc20f] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@59cda16e testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@434514d8, testMethod = findOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@59cda16e testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@434514d8, testMethod = findOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@59cda16e testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@36480b2d, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 92, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.OrderService ro.estore.domain.service.impl.OrderServiceImplTest.orderService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.OrderConverter ro.estore.domain.service.impl.OrderServiceImplTest.orderConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.service.impl.OrderServiceImplTest.productConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.OrderServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.OrderServiceImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.OrderServiceImplTest@36480b2d]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@59cda16e testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@36480b2d, testMethod = deleteOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImplTest.deleteOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@59cda16e testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@36480b2d, testMethod = deleteOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 93, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@59cda16e testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@36480b2d, testMethod = deleteOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.OrderServiceImplTest.deleteOrderTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@27d33393] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@97d0c06]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@59cda16e testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@36480b2d, testMethod = deleteOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@27d33393] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG spi.SqlStatementLogger - 
    select
        order0_.order_id as order_id1_1_0_,
        order0_.address_id as address_2_1_0_,
        order0_.user_id as user_id3_1_0_,
        address1_.address_id as address_1_0_1_,
        address1_.address_line_1 as address_2_0_1_,
        address1_.address_line_2 as address_3_0_1_,
        address1_.address_name as address_4_0_1_,
        address1_.city as city5_0_1_,
        address1_.postcode as postcode6_0_1_,
        address1_.user_profile_id as user_pro7_0_1_,
        userprofil2_.user_profile_id as user_pro1_5_2_,
        userprofil2_.email_address as email_ad2_5_2_,
        userprofil2_.name as name3_5_2_,
        userprofil2_.phone_number as phone_nu4_5_2_,
        userprofil2_.surname as surname5_5_2_,
        user3_.user_id as user_id1_4_3_,
        user3_.password as password2_4_3_,
        user3_.user_profile_id as user_pro4_4_3_,
        user3_.username as username3_4_3_,
        userprofil4_.user_profile_id as user_pro1_5_4_,
        userprofil4_.email_address as email_ad2_5_4_,
        userprofil4_.name as name3_5_4_,
        userprofil4_.phone_number as phone_nu4_5_4_,
        userprofil4_.surname as surname5_5_4_ 
    from
        `
    order` order0_ left outer join
        address address1_ 
            on order0_.address_id=address1_.address_id 
    left outer join
        user_profile userprofil2_ 
            on address1_.user_profile_id=userprofil2_.user_profile_id 
    left outer join
        user user3_ 
            on order0_.user_id=user3_.user_id 
    left outer join
        user_profile userprofil4_ 
            on user3_.user_profile_id=userprofil4_.user_profile_id 
    where
        order0_.order_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Order#0
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchases0_.order_id as order_id3_3_0_,
        purchases0_.purchase_id as purchase1_3_0_,
        purchases0_.purchase_id as purchase1_3_1_,
        purchases0_.order_id as order_id3_3_1_,
        purchases0_.product_id as product_4_3_1_,
        purchases0_.quantity as quantity2_3_1_,
        purchases0_.user_id as user_id5_3_1_,
        product1_.product_id as product_1_2_2_,
        product1_.brand as brand2_2_2_,
        product1_.description as descript3_2_2_,
        product1_.name as name4_2_2_,
        product1_.price as price5_2_2_,
        product1_.stock as stock6_2_2_,
        user2_.user_id as user_id1_4_3_,
        user2_.password as password2_4_3_,
        user2_.user_profile_id as user_pro4_4_3_,
        user2_.username as username3_4_3_,
        userprofil3_.user_profile_id as user_pro1_5_4_,
        userprofil3_.email_address as email_ad2_5_4_,
        userprofil3_.name as name3_5_4_,
        userprofil3_.phone_number as phone_nu4_5_4_,
        userprofil3_.surname as surname5_5_4_ 
    from
        purchase purchases0_ 
    left outer join
        product product1_ 
            on purchases0_.product_id=product1_.product_id 
    left outer join
        user user2_ 
            on purchases0_.user_id=user2_.user_id 
    left outer join
        user_profile userprofil3_ 
            on user2_.user_profile_id=userprofil3_.user_profile_id 
    where
        purchases0_.order_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.Order.purchases
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.Order.purchases
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@27d33393] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@27d33393] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@27d33393]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@27d33393] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@59cda16e testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@36480b2d, testMethod = deleteOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@59cda16e testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@36480b2d, testMethod = deleteOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@59cda16e testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@119aa36, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 94, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.OrderService ro.estore.domain.service.impl.OrderServiceImplTest.orderService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.OrderConverter ro.estore.domain.service.impl.OrderServiceImplTest.orderConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.service.impl.OrderServiceImplTest.productConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.OrderServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.OrderServiceImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.OrderServiceImplTest@119aa36]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@59cda16e testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@119aa36, testMethod = updateOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImplTest.updateOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@59cda16e testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@119aa36, testMethod = updateOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 95, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@59cda16e testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@119aa36, testMethod = updateOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.OrderServiceImplTest.updateOrderTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@4e1a46fb] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@709ed6f3]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@59cda16e testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@119aa36, testMethod = updateOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@4e1a46fb] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG spi.SqlStatementLogger - 
    select
        order0_.order_id as order_id1_1_0_,
        order0_.address_id as address_2_1_0_,
        order0_.user_id as user_id3_1_0_,
        address1_.address_id as address_1_0_1_,
        address1_.address_line_1 as address_2_0_1_,
        address1_.address_line_2 as address_3_0_1_,
        address1_.address_name as address_4_0_1_,
        address1_.city as city5_0_1_,
        address1_.postcode as postcode6_0_1_,
        address1_.user_profile_id as user_pro7_0_1_,
        userprofil2_.user_profile_id as user_pro1_5_2_,
        userprofil2_.email_address as email_ad2_5_2_,
        userprofil2_.name as name3_5_2_,
        userprofil2_.phone_number as phone_nu4_5_2_,
        userprofil2_.surname as surname5_5_2_,
        user3_.user_id as user_id1_4_3_,
        user3_.password as password2_4_3_,
        user3_.user_profile_id as user_pro4_4_3_,
        user3_.username as username3_4_3_,
        userprofil4_.user_profile_id as user_pro1_5_4_,
        userprofil4_.email_address as email_ad2_5_4_,
        userprofil4_.name as name3_5_4_,
        userprofil4_.phone_number as phone_nu4_5_4_,
        userprofil4_.surname as surname5_5_4_ 
    from
        `
    order` order0_ left outer join
        address address1_ 
            on order0_.address_id=address1_.address_id 
    left outer join
        user_profile userprofil2_ 
            on address1_.user_profile_id=userprofil2_.user_profile_id 
    left outer join
        user user3_ 
            on order0_.user_id=user3_.user_id 
    left outer join
        user_profile userprofil4_ 
            on user3_.user_profile_id=userprofil4_.user_profile_id 
    where
        order0_.order_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Order#0
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchases0_.order_id as order_id3_3_0_,
        purchases0_.purchase_id as purchase1_3_0_,
        purchases0_.purchase_id as purchase1_3_1_,
        purchases0_.order_id as order_id3_3_1_,
        purchases0_.product_id as product_4_3_1_,
        purchases0_.quantity as quantity2_3_1_,
        purchases0_.user_id as user_id5_3_1_,
        product1_.product_id as product_1_2_2_,
        product1_.brand as brand2_2_2_,
        product1_.description as descript3_2_2_,
        product1_.name as name4_2_2_,
        product1_.price as price5_2_2_,
        product1_.stock as stock6_2_2_,
        user2_.user_id as user_id1_4_3_,
        user2_.password as password2_4_3_,
        user2_.user_profile_id as user_pro4_4_3_,
        user2_.username as username3_4_3_,
        userprofil3_.user_profile_id as user_pro1_5_4_,
        userprofil3_.email_address as email_ad2_5_4_,
        userprofil3_.name as name3_5_4_,
        userprofil3_.phone_number as phone_nu4_5_4_,
        userprofil3_.surname as surname5_5_4_ 
    from
        purchase purchases0_ 
    left outer join
        product product1_ 
            on purchases0_.product_id=product1_.product_id 
    left outer join
        user user2_ 
            on purchases0_.user_id=user2_.user_id 
    left outer join
        user_profile userprofil3_ 
            on user2_.user_profile_id=userprofil3_.user_profile_id 
    where
        purchases0_.order_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.Order.purchases
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.Order.purchases#0]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.Order.purchases
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@4e1a46fb] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG criteria.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Product as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.brand=:param1 ) and ( generatedAlias0.description=:param2 ) and ( generatedAlias0.price=21.542D )
 [main] DEBUG ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from ro.estore.model.entitiy.Product as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.brand=:param1 ) and ( generatedAlias0.description=:param2 ) and ( generatedAlias0.price=21.542D )
 [main] DEBUG ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'ro'
    |  |     |  |  |  |  \-[IDENT] Node: 'estore'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'entitiy'
    |  |     |  \-[IDENT] Node: 'Product'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  \-[IDENT] Node: 'name'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'param0'
          |  |  \-[EQ] Node: '='
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'brand'
          |  |     \-[COLON] Node: ':'
          |  |        \-[IDENT] Node: 'param1'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'description'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param2'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'price'
             \-[NUM_DOUBLE] Node: '21.542D'

 [main] DEBUG ast.ErrorCounter - throwQueryException() : no errors
 [main] DEBUG antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
 [main] DEBUG tree.FromElement - FromClause{level=1} : ro.estore.model.entitiy.Product (generatedAlias0) -> product0_
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0 -> product0_.product_id
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0 -> product0_.product_id
 [main] DEBUG tree.DotNode - getDataType() : name -> org.hibernate.type.StringType@64ba3208
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0.name -> product0_.name
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0 -> product0_.product_id
 [main] DEBUG tree.DotNode - getDataType() : brand -> org.hibernate.type.StringType@64ba3208
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0.brand -> product0_.brand
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0 -> product0_.product_id
 [main] DEBUG tree.DotNode - getDataType() : description -> org.hibernate.type.StringType@64ba3208
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0.description -> product0_.description
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0 -> product0_.product_id
 [main] DEBUG tree.DotNode - getDataType() : price -> org.hibernate.type.DoubleType@2dd80673
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0.price -> product0_.price
 [main] DEBUG antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
 [main] DEBUG ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} product0_.product_id ) ( FromClause{level=1} product product0_ ) ( where ( and ( and ( and ( = ( product0_.name product0_.product_id name ) ? ) ( = ( product0_.brand product0_.product_id brand ) ? ) ) ( = ( product0_.description product0_.product_id description ) ? ) ) ( = ( product0_.price product0_.product_id price ) 21.542 ) ) ) )
 [main] DEBUG util.JoinProcessor - Using FROM fragment [product product0_]
 [main] DEBUG antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
 [main] DEBUG ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'product0_.product_id as product_1_2_' {alias=generatedAlias0, className=ro.estore.model.entitiy.Product, tableAlias=product0_}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.brand as brand2_2_, product0_.description as descript3_2_, product0_.name as name4_2_, product0_.price as price5_2_, product0_.stock as stock6_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=ro.estore.model.entitiy.Product}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'product0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias0.name,tableAlias=product0_,className=ro.estore.model.entitiy.Product,classAlias=generatedAlias0}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'product0_.product_id' {alias=generatedAlias0, className=ro.estore.model.entitiy.Product, tableAlias=product0_}
          |  |  |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@64ba3208}
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[DOT] DotNode: 'product0_.brand' {propertyName=brand,dereferenceType=PRIMITIVE,getPropertyPath=brand,path=generatedAlias0.brand,tableAlias=product0_,className=ro.estore.model.entitiy.Product,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'product0_.product_id' {alias=generatedAlias0, className=ro.estore.model.entitiy.Product, tableAlias=product0_}
          |  |     |  \-[IDENT] IdentNode: 'brand' {originalText=brand}
          |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@64ba3208}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'product0_.description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=generatedAlias0.description,tableAlias=product0_,className=ro.estore.model.entitiy.Product,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'product0_.product_id' {alias=generatedAlias0, className=ro.estore.model.entitiy.Product, tableAlias=product0_}
          |     |  \-[IDENT] IdentNode: 'description' {originalText=description}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@64ba3208}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'product0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=product0_,className=ro.estore.model.entitiy.Product,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'product0_.product_id' {alias=generatedAlias0, className=ro.estore.model.entitiy.Product, tableAlias=product0_}
             |  \-[IDENT] IdentNode: 'price' {originalText=price}
             \-[NUM_DOUBLE] LiteralNode: '21.542'

 [main] DEBUG ast.ErrorCounter - throwQueryException() : no errors
 [main] DEBUG ast.QueryTranslatorImpl - HQL: select generatedAlias0 from ro.estore.model.entitiy.Product as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.brand=:param1 ) and ( generatedAlias0.description=:param2 ) and ( generatedAlias0.price=21.542D )
 [main] DEBUG ast.QueryTranslatorImpl - SQL: select product0_.product_id as product_1_2_, product0_.brand as brand2_2_, product0_.description as descript3_2_, product0_.name as name4_2_, product0_.price as price5_2_, product0_.stock as stock6_2_ from product product0_ where product0_.name=? and product0_.brand=? and product0_.description=? and product0_.price=21.542
 [main] DEBUG ast.ErrorCounter - throwQueryException() : no errors
 [main] DEBUG internal.AbstractFlushingEventListener - Processing flush-time cascades
 [main] DEBUG internal.AbstractFlushingEventListener - Dirty checking collections
 [main] DEBUG internal.Collections - Collection found: [ro.estore.model.entitiy.Order.purchases#0], was: [ro.estore.model.entitiy.Order.purchases#0] (initialized)
 [main] DEBUG internal.Collections - Collection found: [ro.estore.model.entitiy.UserProfile.addresses#0], was: [ro.estore.model.entitiy.UserProfile.addresses#0] (uninitialized)
 [main] DEBUG internal.Collections - Collection found: [ro.estore.model.entitiy.User.orders#0], was: [ro.estore.model.entitiy.User.orders#0] (uninitialized)
 [main] DEBUG internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
 [main] DEBUG internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
 [main] DEBUG util.EntityPrinter - Listing entities:
 [main] DEBUG util.EntityPrinter - ro.estore.model.entitiy.Order{address=ro.estore.model.entitiy.Address#0, purchases=[ro.estore.model.entitiy.Purchase#0], id=0, user=ro.estore.model.entitiy.User#0}
 [main] DEBUG util.EntityPrinter - ro.estore.model.entitiy.Address{city=city0, postcode=00000, addressLine1=addr line 1_0, addressLine2=addr line 2_0, addressName=addr name 0, id=0, userProfile=ro.estore.model.entitiy.UserProfile#0}
 [main] DEBUG util.EntityPrinter - ro.estore.model.entitiy.UserProfile{addresses=<uninitialized>, emailAddress=email0@test.com, phoneNumber=000000000, surname=surname0, name=name0, id=0}
 [main] DEBUG util.EntityPrinter - ro.estore.model.entitiy.User{password=pass0, orders=<uninitialized>, id=0, userProfile=ro.estore.model.entitiy.UserProfile#0, username=user0}
 [main] DEBUG util.EntityPrinter - ro.estore.model.entitiy.Purchase{product=ro.estore.model.entitiy.Product#0, quantity=4, id=0, user=ro.estore.model.entitiy.User#0, order=ro.estore.model.entitiy.Order#0}
 [main] DEBUG util.EntityPrinter - ro.estore.model.entitiy.Product{price=2.34, name=prod0, description=prod0 desc, id=0, stock=14, brand=brand0}
 [main] DEBUG spi.SqlStatementLogger - 
    select
        product0_.product_id as product_1_2_,
        product0_.brand as brand2_2_,
        product0_.description as descript3_2_,
        product0_.name as name4_2_,
        product0_.price as price5_2_,
        product0_.stock as stock6_2_ 
    from
        product product0_ 
    where
        product0_.name=? 
        and product0_.brand=? 
        and product0_.description=? 
        and product0_.price=21.542
 [main] ERROR impl.ProductRepositoryJpaImpl - No product was found (No entity found for query)
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 3, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@4e1a46fb] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 15, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@4e1a46fb] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@4e1a46fb]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@4e1a46fb] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@59cda16e testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@119aa36, testMethod = updateOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@59cda16e testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@119aa36, testMethod = updateOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@59cda16e testClass = OrderServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5dd903be testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@4228bf58 testClass = ProductServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4228bf58 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@20b9d5d5, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 96, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.ProductServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.ProductServiceImplTest' to bean named 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.service.impl.ProductServiceImplTest.productConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.ProductServiceImplTest' to bean named 'productConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImplTest.findProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.ProductServiceImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.ProductServiceImplTest@20b9d5d5]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.ProductServiceImplTest.findProductTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImplTest.createProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.ProductServiceImplTest.createProductTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImplTest.deleteProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.ProductServiceImplTest.deleteProductTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImplTest.updateProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.ProductServiceImplTest.updateProductTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found finalize() method - using NO_OVERRIDE
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@4228bf58 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@20b9d5d5, testMethod = deleteProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImplTest.deleteProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4228bf58 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@20b9d5d5, testMethod = deleteProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.domain.service.impl.ProductServiceImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@1431267b transactionManagerName = '', defaultRollback = true] for test class [ro.estore.domain.service.impl.ProductServiceImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 97, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4228bf58 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@20b9d5d5, testMethod = deleteProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.ProductServiceImplTest.deleteProductTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@44cffc25] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3bd2af5b]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4228bf58 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@20b9d5d5, testMethod = deleteProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@44cffc25] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG spi.SqlStatementLogger - 
    select
        product0_.product_id as product_1_2_0_,
        product0_.brand as brand2_2_0_,
        product0_.description as descript3_2_0_,
        product0_.name as name4_2_0_,
        product0_.price as price5_2_0_,
        product0_.stock as stock6_2_0_ 
    from
        product product0_ 
    where
        product0_.product_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Product#0
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@44cffc25] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@44cffc25] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@44cffc25]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@44cffc25] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@4228bf58 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@20b9d5d5, testMethod = deleteProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4228bf58 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@20b9d5d5, testMethod = deleteProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4228bf58 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@16727bf0, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 98, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.ProductServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.service.impl.ProductServiceImplTest.productConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.ProductServiceImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.ProductServiceImplTest@16727bf0]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@4228bf58 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@16727bf0, testMethod = createProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImplTest.createProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4228bf58 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@16727bf0, testMethod = createProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 99, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4228bf58 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@16727bf0, testMethod = createProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.ProductServiceImplTest.createProductTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@2f84acf7] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@38ed139b]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4228bf58 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@16727bf0, testMethod = createProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@2f84acf7] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG criteria.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Product as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.brand=:param1 ) and ( generatedAlias0.description=:param2 ) and ( generatedAlias0.price=21.542D )
 [main] DEBUG spi.SqlStatementLogger - 
    select
        product0_.product_id as product_1_2_,
        product0_.brand as brand2_2_,
        product0_.description as descript3_2_,
        product0_.name as name4_2_,
        product0_.price as price5_2_,
        product0_.stock as stock6_2_ 
    from
        product product0_ 
    where
        product0_.name=? 
        and product0_.brand=? 
        and product0_.description=? 
        and product0_.price=21.542
 [main] ERROR impl.ProductRepositoryJpaImpl - No product was found (No entity found for query)
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 4, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@2f84acf7]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@2f84acf7] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@4228bf58 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@16727bf0, testMethod = createProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4228bf58 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@16727bf0, testMethod = createProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4228bf58 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@53cf9c99, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 100, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.ProductServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.service.impl.ProductServiceImplTest.productConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.ProductServiceImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.ProductServiceImplTest@53cf9c99]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@4228bf58 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@53cf9c99, testMethod = findProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImplTest.findProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4228bf58 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@53cf9c99, testMethod = findProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 101, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4228bf58 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@53cf9c99, testMethod = findProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.ProductServiceImplTest.findProductTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@7b306b9f] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5ea4300e]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4228bf58 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@53cf9c99, testMethod = findProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@7b306b9f] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG spi.SqlStatementLogger - 
    select
        product0_.product_id as product_1_2_0_,
        product0_.brand as brand2_2_0_,
        product0_.description as descript3_2_0_,
        product0_.name as name4_2_0_,
        product0_.price as price5_2_0_,
        product0_.stock as stock6_2_0_ 
    from
        product product0_ 
    where
        product0_.product_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Product#0
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@7b306b9f]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@7b306b9f] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@4228bf58 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@53cf9c99, testMethod = findProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4228bf58 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@53cf9c99, testMethod = findProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4228bf58 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@2938127d, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 102, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.ProductServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.service.impl.ProductServiceImplTest.productConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.ProductServiceImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.ProductServiceImplTest@2938127d]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@4228bf58 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@2938127d, testMethod = updateProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImplTest.updateProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4228bf58 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@2938127d, testMethod = updateProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 103, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4228bf58 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@2938127d, testMethod = updateProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.ProductServiceImplTest.updateProductTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@127a7272] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6ad16c5d]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4228bf58 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@2938127d, testMethod = updateProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@127a7272] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG spi.SqlStatementLogger - 
    select
        product0_.product_id as product_1_2_0_,
        product0_.brand as brand2_2_0_,
        product0_.description as descript3_2_0_,
        product0_.name as name4_2_0_,
        product0_.price as price5_2_0_,
        product0_.stock as stock6_2_0_ 
    from
        product product0_ 
    where
        product0_.product_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Product#0
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@127a7272] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@127a7272] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@127a7272]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@127a7272] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@4228bf58 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@2938127d, testMethod = updateProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4228bf58 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@2938127d, testMethod = updateProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@4228bf58 testClass = ProductServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@68b9834c testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@48b4a043 testClass = AddressServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@48b4a043 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@4821aa9f, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 104, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.AddressServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.AddressService ro.estore.domain.service.impl.AddressServiceImplTest.addressService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressServiceImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.AddressServiceImplTest' to bean named 'addressServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.AddressServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.AddressConverter ro.estore.domain.service.impl.AddressServiceImplTest.addressConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.AddressServiceImplTest' to bean named 'addressConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImplTest.findAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.AddressServiceImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.AddressServiceImplTest@4821aa9f]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.AddressServiceImplTest.findAddressTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImplTest.updateAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.AddressServiceImplTest.updateAddressTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImplTest.createAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.AddressServiceImplTest.createAddressTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImplTest.deleteAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.AddressServiceImplTest.deleteAddressTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found finalize() method - using NO_OVERRIDE
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@48b4a043 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@4821aa9f, testMethod = deleteAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImplTest.deleteAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@48b4a043 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@4821aa9f, testMethod = deleteAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.domain.service.impl.AddressServiceImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@1431267b transactionManagerName = '', defaultRollback = true] for test class [ro.estore.domain.service.impl.AddressServiceImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 105, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@48b4a043 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@4821aa9f, testMethod = deleteAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.AddressServiceImplTest.deleteAddressTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@41294371] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3a66e67e]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@48b4a043 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@4821aa9f, testMethod = deleteAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@41294371] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG spi.SqlStatementLogger - 
    select
        address0_.address_id as address_1_0_0_,
        address0_.address_line_1 as address_2_0_0_,
        address0_.address_line_2 as address_3_0_0_,
        address0_.address_name as address_4_0_0_,
        address0_.city as city5_0_0_,
        address0_.postcode as postcode6_0_0_,
        address0_.user_profile_id as user_pro7_0_0_,
        userprofil1_.user_profile_id as user_pro1_5_1_,
        userprofil1_.email_address as email_ad2_5_1_,
        userprofil1_.name as name3_5_1_,
        userprofil1_.phone_number as phone_nu4_5_1_,
        userprofil1_.surname as surname5_5_1_ 
    from
        address address0_ 
    left outer join
        user_profile userprofil1_ 
            on address0_.user_profile_id=userprofil1_.user_profile_id 
    where
        address0_.address_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Address#0
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@41294371] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@41294371] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@41294371]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@41294371] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@48b4a043 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@4821aa9f, testMethod = deleteAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@48b4a043 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@4821aa9f, testMethod = deleteAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@48b4a043 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@534180a2, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 106, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.AddressServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.AddressService ro.estore.domain.service.impl.AddressServiceImplTest.addressService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.AddressServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.AddressConverter ro.estore.domain.service.impl.AddressServiceImplTest.addressConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.AddressServiceImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.AddressServiceImplTest@534180a2]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@48b4a043 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@534180a2, testMethod = createAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImplTest.createAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@48b4a043 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@534180a2, testMethod = createAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 107, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@48b4a043 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@534180a2, testMethod = createAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.AddressServiceImplTest.createAddressTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@6cf0a747] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@31ddb930]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@48b4a043 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@534180a2, testMethod = createAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@6cf0a747] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG internal.AbstractSaveEventListener - Generated identifier: 10, using strategy: org.hibernate.id.IncrementGenerator
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@6cf0a747]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@6cf0a747] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@48b4a043 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@534180a2, testMethod = createAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@48b4a043 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@534180a2, testMethod = createAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@48b4a043 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@3c3c4a71, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 108, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.AddressServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.AddressService ro.estore.domain.service.impl.AddressServiceImplTest.addressService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.AddressServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.AddressConverter ro.estore.domain.service.impl.AddressServiceImplTest.addressConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.AddressServiceImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.AddressServiceImplTest@3c3c4a71]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@48b4a043 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@3c3c4a71, testMethod = findAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImplTest.findAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@48b4a043 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@3c3c4a71, testMethod = findAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 109, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@48b4a043 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@3c3c4a71, testMethod = findAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.AddressServiceImplTest.findAddressTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@1352434e] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@74170687]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@48b4a043 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@3c3c4a71, testMethod = findAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@1352434e] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG spi.SqlStatementLogger - 
    select
        address0_.address_id as address_1_0_0_,
        address0_.address_line_1 as address_2_0_0_,
        address0_.address_line_2 as address_3_0_0_,
        address0_.address_name as address_4_0_0_,
        address0_.city as city5_0_0_,
        address0_.postcode as postcode6_0_0_,
        address0_.user_profile_id as user_pro7_0_0_,
        userprofil1_.user_profile_id as user_pro1_5_1_,
        userprofil1_.email_address as email_ad2_5_1_,
        userprofil1_.name as name3_5_1_,
        userprofil1_.phone_number as phone_nu4_5_1_,
        userprofil1_.surname as surname5_5_1_ 
    from
        address address0_ 
    left outer join
        user_profile userprofil1_ 
            on address0_.user_profile_id=userprofil1_.user_profile_id 
    where
        address0_.address_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Address#0
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@1352434e]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@1352434e] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@48b4a043 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@3c3c4a71, testMethod = findAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@48b4a043 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@3c3c4a71, testMethod = findAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@48b4a043 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@12d5c30e, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 110, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.AddressServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.AddressService ro.estore.domain.service.impl.AddressServiceImplTest.addressService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.AddressServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.AddressConverter ro.estore.domain.service.impl.AddressServiceImplTest.addressConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.AddressServiceImplTest' with 0 common interceptors and 1 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.AddressServiceImplTest@12d5c30e]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@48b4a043 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@12d5c30e, testMethod = updateAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImplTest.updateAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@48b4a043 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@12d5c30e, testMethod = updateAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@70e889e9 size = 1, parentContextCount = 0, hitCount = 111, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@48b4a043 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@12d5c30e, testMethod = updateAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.AddressServiceImplTest.updateAddressTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@b887730] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_dev]
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@267dc982]
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@48b4a043 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@12d5c30e, testMethod = updateAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@499683c4]; rollback [true]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@b887730] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG spi.SqlStatementLogger - 
    select
        address0_.address_id as address_1_0_0_,
        address0_.address_line_1 as address_2_0_0_,
        address0_.address_line_2 as address_3_0_0_,
        address0_.address_name as address_4_0_0_,
        address0_.city as city5_0_0_,
        address0_.postcode as postcode6_0_0_,
        address0_.user_profile_id as user_pro7_0_0_,
        userprofil1_.user_profile_id as user_pro1_5_1_,
        userprofil1_.email_address as email_ad2_5_1_,
        userprofil1_.name as name3_5_1_,
        userprofil1_.phone_number as phone_nu4_5_1_,
        userprofil1_.surname as surname5_5_1_ 
    from
        address address0_ 
    left outer join
        user_profile userprofil1_ 
            on address0_.user_profile_id=userprofil1_.user_profile_id 
    where
        address0_.address_id=?
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#0]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#0]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Address#0
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@b887730] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@b887730] for JPA transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@b887730]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@b887730] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@48b4a043 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@12d5c30e, testMethod = updateAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@48b4a043 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@12d5c30e, testMethod = updateAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@48b4a043 testClass = AddressServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2f5b8250 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [Thread-1] INFO  support.AbstractApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@2b9627bc: startup date [Tue May 10 14:37:33 EEST 2016]; root of context hierarchy
 [Thread-1] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'lifecycleProcessor'
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5e25a92e: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,jpaHibernateTestConfig,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor,addressConverter,orderConverter,productConverter,purchaseConverter,userConverter,userProfileConverter,addressRepositoryJpaImpl,orderRepositoryJpaImpl,productRepositoryJpaImpl,purchaseRepositoryJpaImpl,userProfileRepositoryJpaImpl,userRepositoryJpaImpl,addressServiceImpl,orderServiceImpl,productServiceImpl,purchaseServiceImpl,userProfileServiceImpl,userServiceImpl,loggingAspect,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,org.springframework.transaction.config.internalTransactionalEventListenerFactory,ro.estore.model.config.RootJpaHibernateConfig,transactionManager,dataSource,entityManagerFactory,org.springframework.aop.config.internalAutoProxyCreator]; root of factory hierarchy
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'userServiceImpl': [ro.estore.domain.service.impl.UserServiceImplTest]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'userProfileServiceImpl': [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'purchaseServiceImpl': [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'productServiceImpl': [ro.estore.domain.service.impl.OrderServiceImplTest, ro.estore.domain.service.impl.ProductServiceImplTest]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'addressServiceImpl': [ro.estore.domain.service.impl.AddressServiceImplTest]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'userRepositoryJpaImpl': [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'userProfileRepositoryJpaImpl': [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'purchaseRepositoryJpaImpl': [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'productRepositoryJpaImpl': [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'orderRepositoryJpaImpl': [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'addressRepositoryJpaImpl': [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [Thread-1] DEBUG support.DisposableBeanAdapter - Invoking destroy() on bean with name 'entityManagerFactory'
 [Thread-1] INFO  jpa.AbstractEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
 [Thread-1] DEBUG internal.SessionFactoryImpl - HHH000031: Closing
 [Thread-1] DEBUG internal.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
 [Thread-1] DEBUG internal.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
 [Thread-1] DEBUG internal.EntityManagerFactoryRegistry - Remove: name=default
