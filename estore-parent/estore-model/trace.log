 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.domain.service.impl.UserServiceImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] TRACE support.ContextLoaderUtils - Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], classes=[class ro.estore.model.config.JpaHibernateTestConfig], loader=interface org.springframework.test.context.ContextLoader, initializers=[], inheritLocations=true, locations=[], inheritInitializers=true)] for declaring class [ro.estore.domain.service.impl.UserServiceImplTest].
 [main] TRACE support.ContextLoaderUtils - Resolved context configuration attributes: [ContextConfigurationAttributes@e580929 declaringClass = 'ro.estore.domain.service.impl.UserServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@e580929 declaringClass = 'ro.estore.domain.service.impl.UserServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] TRACE support.AbstractTestContextBootstrapper - Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@e580929 declaringClass = 'ro.estore.domain.service.impl.UserServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@e580929 declaringClass = 'ro.estore.domain.service.impl.UserServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] TRACE support.SpringFactoriesLoader - Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]
 [main] TRACE support.ApplicationContextInitializerUtils - Processing context initializers for context configuration attributes [ContextConfigurationAttributes@e580929 declaringClass = 'ro.estore.domain.service.impl.UserServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.domain.service.impl.UserServiceImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6d8a00e3, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@548b7f67, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7ac7a4e4, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6d78f375, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@50c87b21]
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6d8a00e3
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@548b7f67
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@7ac7a4e4
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@6d78f375
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@50c87b21
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] TRACE support.ContextLoaderUtils - Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], classes=[class ro.estore.model.config.JpaHibernateTestConfig], loader=interface org.springframework.test.context.ContextLoader, initializers=[], inheritLocations=true, locations=[], inheritInitializers=true)] for declaring class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest].
 [main] TRACE support.ContextLoaderUtils - Resolved context configuration attributes: [ContextConfigurationAttributes@396a51ab declaringClass = 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@396a51ab declaringClass = 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] TRACE support.AbstractTestContextBootstrapper - Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@396a51ab declaringClass = 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@396a51ab declaringClass = 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] TRACE support.SpringFactoriesLoader - Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]
 [main] TRACE support.ApplicationContextInitializerUtils - Processing context initializers for context configuration attributes [ContextConfigurationAttributes@396a51ab declaringClass = 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1753acfe, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7c16905e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2a2d45ba, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2a5ca609, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@20e2cbe0]
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1753acfe
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@7c16905e
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@2a2d45ba
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@2a5ca609
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@20e2cbe0
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.domain.service.impl.PurchaseServiceImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] TRACE support.ContextLoaderUtils - Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], classes=[class ro.estore.model.config.JpaHibernateTestConfig], loader=interface org.springframework.test.context.ContextLoader, initializers=[], inheritLocations=true, locations=[], inheritInitializers=true)] for declaring class [ro.estore.domain.service.impl.PurchaseServiceImplTest].
 [main] TRACE support.ContextLoaderUtils - Resolved context configuration attributes: [ContextConfigurationAttributes@51565ec2 declaringClass = 'ro.estore.domain.service.impl.PurchaseServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@51565ec2 declaringClass = 'ro.estore.domain.service.impl.PurchaseServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] TRACE support.AbstractTestContextBootstrapper - Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@51565ec2 declaringClass = 'ro.estore.domain.service.impl.PurchaseServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@51565ec2 declaringClass = 'ro.estore.domain.service.impl.PurchaseServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] TRACE support.SpringFactoriesLoader - Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]
 [main] TRACE support.ApplicationContextInitializerUtils - Processing context initializers for context configuration attributes [ContextConfigurationAttributes@51565ec2 declaringClass = 'ro.estore.domain.service.impl.PurchaseServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.domain.service.impl.PurchaseServiceImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@c038203, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@cc285f4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@55f3ddb1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@8bd1b6a, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@18be83e4]
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@c038203
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@cc285f4
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@55f3ddb1
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@8bd1b6a
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@18be83e4
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] TRACE support.ContextLoaderUtils - Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], classes=[class ro.estore.model.config.JpaHibernateTestConfig], loader=interface org.springframework.test.context.ContextLoader, initializers=[], inheritLocations=true, locations=[], inheritInitializers=true)] for declaring class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest].
 [main] TRACE support.ContextLoaderUtils - Resolved context configuration attributes: [ContextConfigurationAttributes@26be92ad declaringClass = 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@26be92ad declaringClass = 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] TRACE support.AbstractTestContextBootstrapper - Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@26be92ad declaringClass = 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@26be92ad declaringClass = 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] TRACE support.SpringFactoriesLoader - Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]
 [main] TRACE support.ApplicationContextInitializerUtils - Processing context initializers for context configuration attributes [ContextConfigurationAttributes@26be92ad declaringClass = 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3ffc5af1, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5e5792a0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@26653222, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3532ec19, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@68c4039c]
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3ffc5af1
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5e5792a0
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@26653222
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@3532ec19
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@68c4039c
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] TRACE support.ContextLoaderUtils - Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], classes=[class ro.estore.model.config.JpaHibernateTestConfig], loader=interface org.springframework.test.context.ContextLoader, initializers=[], inheritLocations=true, locations=[], inheritInitializers=true)] for declaring class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest].
 [main] TRACE support.ContextLoaderUtils - Resolved context configuration attributes: [ContextConfigurationAttributes@6f7fd0e6 declaringClass = 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@6f7fd0e6 declaringClass = 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] TRACE support.AbstractTestContextBootstrapper - Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@6f7fd0e6 declaringClass = 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@6f7fd0e6 declaringClass = 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] TRACE support.SpringFactoriesLoader - Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]
 [main] TRACE support.ApplicationContextInitializerUtils - Processing context initializers for context configuration attributes [ContextConfigurationAttributes@6f7fd0e6 declaringClass = 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6a4f787b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@685cb137, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6a41eaa2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7cd62f43, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6d4b1c02]
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6a4f787b
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@685cb137
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@6a41eaa2
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@7cd62f43
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6d4b1c02
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] TRACE support.ContextLoaderUtils - Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], classes=[class ro.estore.model.config.JpaHibernateTestConfig], loader=interface org.springframework.test.context.ContextLoader, initializers=[], inheritLocations=true, locations=[], inheritInitializers=true)] for declaring class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest].
 [main] TRACE support.ContextLoaderUtils - Resolved context configuration attributes: [ContextConfigurationAttributes@42e26948 declaringClass = 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@42e26948 declaringClass = 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] TRACE support.AbstractTestContextBootstrapper - Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@42e26948 declaringClass = 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@42e26948 declaringClass = 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] TRACE support.SpringFactoriesLoader - Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]
 [main] TRACE support.ApplicationContextInitializerUtils - Processing context initializers for context configuration attributes [ContextConfigurationAttributes@42e26948 declaringClass = 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4dfa3a9d, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6eebc39e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@464bee09, org.springframework.test.context.transaction.TransactionalTestExecutionListener@f6c48ac, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@13deb50e]
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4dfa3a9d
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6eebc39e
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@464bee09
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@f6c48ac
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@13deb50e
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] TRACE support.ContextLoaderUtils - Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], classes=[class ro.estore.model.config.JpaHibernateTestConfig], loader=interface org.springframework.test.context.ContextLoader, initializers=[], inheritLocations=true, locations=[], inheritInitializers=true)] for declaring class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest].
 [main] TRACE support.ContextLoaderUtils - Resolved context configuration attributes: [ContextConfigurationAttributes@31ef45e3 declaringClass = 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@31ef45e3 declaringClass = 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] TRACE support.AbstractTestContextBootstrapper - Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@31ef45e3 declaringClass = 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@31ef45e3 declaringClass = 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] TRACE support.SpringFactoriesLoader - Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]
 [main] TRACE support.ApplicationContextInitializerUtils - Processing context initializers for context configuration attributes [ContextConfigurationAttributes@31ef45e3 declaringClass = 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4cf777e8, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2f686d1f, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3fee9989, org.springframework.test.context.transaction.TransactionalTestExecutionListener@73ad2d6, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7085bdee]
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4cf777e8
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2f686d1f
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@3fee9989
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@73ad2d6
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7085bdee
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] TRACE support.ContextLoaderUtils - Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], classes=[class ro.estore.model.config.JpaHibernateTestConfig], loader=interface org.springframework.test.context.ContextLoader, initializers=[], inheritLocations=true, locations=[], inheritInitializers=true)] for declaring class [ro.estore.domain.service.impl.UserProfileServiceImplTest].
 [main] TRACE support.ContextLoaderUtils - Resolved context configuration attributes: [ContextConfigurationAttributes@6e06451e declaringClass = 'ro.estore.domain.service.impl.UserProfileServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@6e06451e declaringClass = 'ro.estore.domain.service.impl.UserProfileServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] TRACE support.AbstractTestContextBootstrapper - Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@6e06451e declaringClass = 'ro.estore.domain.service.impl.UserProfileServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@6e06451e declaringClass = 'ro.estore.domain.service.impl.UserProfileServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] TRACE support.SpringFactoriesLoader - Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]
 [main] TRACE support.ApplicationContextInitializerUtils - Processing context initializers for context configuration attributes [ContextConfigurationAttributes@6e06451e declaringClass = 'ro.estore.domain.service.impl.UserProfileServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.domain.service.impl.UserProfileServiceImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4b952a2d, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3159c4b8, org.springframework.test.context.support.DirtiesContextTestExecutionListener@73846619, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4bec1f0c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@29ca901e]
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4b952a2d
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3159c4b8
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@73846619
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@4bec1f0c
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@29ca901e
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] TRACE support.ContextLoaderUtils - Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], classes=[class ro.estore.model.config.JpaHibernateTestConfig], loader=interface org.springframework.test.context.ContextLoader, initializers=[], inheritLocations=true, locations=[], inheritInitializers=true)] for declaring class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest].
 [main] TRACE support.ContextLoaderUtils - Resolved context configuration attributes: [ContextConfigurationAttributes@49993335 declaringClass = 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@49993335 declaringClass = 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] TRACE support.AbstractTestContextBootstrapper - Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@49993335 declaringClass = 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@49993335 declaringClass = 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] TRACE support.SpringFactoriesLoader - Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]
 [main] TRACE support.ApplicationContextInitializerUtils - Processing context initializers for context configuration attributes [ContextConfigurationAttributes@49993335 declaringClass = 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@60c6f5b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3c0f93f1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@31dc339b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@544fe44c]
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@60c6f5b
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2038ae61
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@3c0f93f1
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@31dc339b
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@544fe44c
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.domain.service.impl.OrderServiceImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] TRACE support.ContextLoaderUtils - Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], classes=[class ro.estore.model.config.JpaHibernateTestConfig], loader=interface org.springframework.test.context.ContextLoader, initializers=[], inheritLocations=true, locations=[], inheritInitializers=true)] for declaring class [ro.estore.domain.service.impl.OrderServiceImplTest].
 [main] TRACE support.ContextLoaderUtils - Resolved context configuration attributes: [ContextConfigurationAttributes@4e1d422d declaringClass = 'ro.estore.domain.service.impl.OrderServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@4e1d422d declaringClass = 'ro.estore.domain.service.impl.OrderServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] TRACE support.AbstractTestContextBootstrapper - Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@4e1d422d declaringClass = 'ro.estore.domain.service.impl.OrderServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@4e1d422d declaringClass = 'ro.estore.domain.service.impl.OrderServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] TRACE support.SpringFactoriesLoader - Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]
 [main] TRACE support.ApplicationContextInitializerUtils - Processing context initializers for context configuration attributes [ContextConfigurationAttributes@4e1d422d declaringClass = 'ro.estore.domain.service.impl.OrderServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.domain.service.impl.OrderServiceImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3632be31, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5abca1e0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2286778, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4e9ba398, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6d7b4f4c]
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3632be31
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5abca1e0
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@2286778
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@4e9ba398
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6d7b4f4c
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.domain.service.impl.ProductServiceImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] TRACE support.ContextLoaderUtils - Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], classes=[class ro.estore.model.config.JpaHibernateTestConfig], loader=interface org.springframework.test.context.ContextLoader, initializers=[], inheritLocations=true, locations=[], inheritInitializers=true)] for declaring class [ro.estore.domain.service.impl.ProductServiceImplTest].
 [main] TRACE support.ContextLoaderUtils - Resolved context configuration attributes: [ContextConfigurationAttributes@63753b6d declaringClass = 'ro.estore.domain.service.impl.ProductServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@63753b6d declaringClass = 'ro.estore.domain.service.impl.ProductServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] TRACE support.AbstractTestContextBootstrapper - Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@63753b6d declaringClass = 'ro.estore.domain.service.impl.ProductServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@63753b6d declaringClass = 'ro.estore.domain.service.impl.ProductServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] TRACE support.SpringFactoriesLoader - Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]
 [main] TRACE support.ApplicationContextInitializerUtils - Processing context initializers for context configuration attributes [ContextConfigurationAttributes@63753b6d declaringClass = 'ro.estore.domain.service.impl.ProductServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.domain.service.impl.ProductServiceImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2b2948e2, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6ddf90b0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@57536d79, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3b0143d3, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5a8e6209]
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2b2948e2
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6ddf90b0
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@57536d79
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@3b0143d3
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5a8e6209
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.domain.service.impl.AddressServiceImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] TRACE support.ContextLoaderUtils - Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], classes=[class ro.estore.model.config.JpaHibernateTestConfig], loader=interface org.springframework.test.context.ContextLoader, initializers=[], inheritLocations=true, locations=[], inheritInitializers=true)] for declaring class [ro.estore.domain.service.impl.AddressServiceImplTest].
 [main] TRACE support.ContextLoaderUtils - Resolved context configuration attributes: [ContextConfigurationAttributes@1f28c152 declaringClass = 'ro.estore.domain.service.impl.AddressServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@1f28c152 declaringClass = 'ro.estore.domain.service.impl.AddressServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] TRACE support.AbstractTestContextBootstrapper - Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@1f28c152 declaringClass = 'ro.estore.domain.service.impl.AddressServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@1f28c152 declaringClass = 'ro.estore.domain.service.impl.AddressServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] TRACE support.SpringFactoriesLoader - Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]
 [main] TRACE support.ApplicationContextInitializerUtils - Processing context initializers for context configuration attributes [ContextConfigurationAttributes@1f28c152 declaringClass = 'ro.estore.domain.service.impl.AddressServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.domain.service.impl.AddressServiceImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7fac631b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5b87ed94, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6e0e048a, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5bc79255, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@47ef968d]
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7fac631b
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5b87ed94
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@6e0e048a
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@5bc79255
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@47ef968d
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] TRACE context.TestContextManager - beforeTestClass(): class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.UserServiceImplTest@4bbfb90a]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@4bbfb90a, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to load context from [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
 [main] DEBUG support.AbstractGenericContextLoader - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG env.MutablePropertySources - Adding [systemProperties] PropertySource with lowest search precedence
 [main] DEBUG env.MutablePropertySources - Adding [systemEnvironment] PropertySource with lowest search precedence
 [main] DEBUG env.AbstractEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
 [main] DEBUG support.AnnotationConfigContextLoader - Registering annotated classes: {class ro.estore.model.config.JpaHibernateTestConfig}
 [main] INFO  support.AbstractApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@2d8f65a4: startup date [Tue Jul 19 11:05:57 EEST 2016]; root of context hierarchy
 [main] DEBUG support.AbstractApplicationContext - Bean factory for org.springframework.context.support.GenericApplicationContext@2d8f65a4: org.springframework.beans.factory.support.DefaultListableBeanFactory@4d826d77: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,jpaHibernateTestConfig]; root of factory hierarchy
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 [main] DEBUG env.MutablePropertySources - Adding [class path resource [test.properties]] PropertySource with lowest search precedence
 [main] DEBUG env.MutablePropertySources - Adding [systemProperties] PropertySource with lowest search precedence
 [main] DEBUG env.MutablePropertySources - Adding [systemEnvironment] PropertySource with lowest search precedence
 [main] DEBUG env.AbstractEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved classpath location [ro/estore/domain/converter/] to resources [URL [file:/D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/domain/converter/]]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/domain/converter/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:ro/estore/domain/converter/**/*.class] to resources [file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\AddressConverter.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\GenericEntityConverter.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\OrderConverter.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\ProductConverter.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\PurchaseConverter.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\UserConverter.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\UserProfileConverter.class]]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\AddressConverter.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\AddressConverter.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\GenericEntityConverter.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\GenericEntityConverter.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\OrderConverter.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\OrderConverter.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\ProductConverter.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\ProductConverter.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\PurchaseConverter.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\PurchaseConverter.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\UserConverter.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\UserConverter.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\UserProfileConverter.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\UserProfileConverter.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved classpath location [ro/estore/model/repository/] to resources [URL [file:/D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/model/repository/], URL [file:/D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/model/repository/]]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/model/repository/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/model/repository/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/model/repository/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/model/repository/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:ro/estore/model/repository/**/*.class] to resources [file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\AddressRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\OrderRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\ProductRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\PurchaseRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\UserProfileRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\UserRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\AddressRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\GenericRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\AddressRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\GenericRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\OrderRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\ProductRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\PurchaseRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\UserProfileRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\UserRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\OrderRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\ProductRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\PurchaseRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\UserProfileRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\UserRepository.class]]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\AddressRepositoryJpaImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\AddressRepositoryJpaImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\OrderRepositoryJpaImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\OrderRepositoryJpaImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\ProductRepositoryJpaImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\ProductRepositoryJpaImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\PurchaseRepositoryJpaImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\PurchaseRepositoryJpaImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\UserProfileRepositoryJpaImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\UserProfileRepositoryJpaImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\UserRepositoryJpaImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\UserRepositoryJpaImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\AddressRepository.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\AddressRepository.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\GenericRepository.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\GenericRepository.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\AddressRepositoryJpaImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\AddressRepositoryJpaImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\GenericRepositoryJpaImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\GenericRepositoryJpaImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\OrderRepositoryJpaImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\OrderRepositoryJpaImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\ProductRepositoryJpaImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\ProductRepositoryJpaImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\PurchaseRepositoryJpaImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\PurchaseRepositoryJpaImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\UserProfileRepositoryJpaImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\UserProfileRepositoryJpaImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\UserRepositoryJpaImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\UserRepositoryJpaImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\OrderRepository.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\OrderRepository.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\ProductRepository.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\ProductRepository.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\PurchaseRepository.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\PurchaseRepository.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\UserProfileRepository.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\UserProfileRepository.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\UserRepository.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\UserRepository.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved classpath location [ro/estore/domain/service/] to resources [URL [file:/D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/domain/service/], URL [file:/D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/domain/service/]]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/domain/service/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/domain/service/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/domain/service/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/domain/service/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:ro/estore/domain/service/**/*.class] to resources [file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\AddressServiceImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\OrderServiceImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\ProductServiceImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\PurchaseServiceImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\UserProfileServiceImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\UserServiceImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\AddressService.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\GenericService.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\AddressServiceImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\GenericServiceImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\OrderServiceImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\ProductServiceImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\PurchaseServiceImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\UserProfileServiceImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\UserServiceImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\OrderService.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\ProductService.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\PurchaseService.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\UserProfileService.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\UserService.class]]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\AddressServiceImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\AddressServiceImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\OrderServiceImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\OrderServiceImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\ProductServiceImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\ProductServiceImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\PurchaseServiceImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\PurchaseServiceImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\UserProfileServiceImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\UserProfileServiceImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\UserServiceImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\UserServiceImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\AddressService.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\AddressService.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\GenericService.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\GenericService.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\AddressServiceImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\AddressServiceImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\GenericServiceImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\GenericServiceImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\OrderServiceImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\OrderServiceImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\ProductServiceImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\ProductServiceImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\PurchaseServiceImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\PurchaseServiceImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\UserProfileServiceImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\UserProfileServiceImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\UserServiceImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\UserServiceImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\OrderService.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\OrderService.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\ProductService.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\ProductService.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\PurchaseService.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\PurchaseService.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\UserProfileService.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\UserProfileService.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\UserService.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\UserService.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved classpath location [ro/estore/aspect/] to resources [URL [file:/D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/aspect/]]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\aspect]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\aspect] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/aspect/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:ro/estore/aspect/**/*.class] to resources [file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\aspect\LoggingAspect.class]]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\aspect\LoggingAspect.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\aspect\LoggingAspect.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved classpath location [ro/estore/util/] to resources [URL [file:/D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/util/]]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\util]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\util] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/util/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:ro/estore/util/**/*.class] to resources [file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\util\TestUtils.class]]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\util\TestUtils.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\util\TestUtils.class]
 [main] DEBUG annotation.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
 [main] DEBUG annotation.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration.org.springframework.transaction.config.internalTransactionAdvisor()
 [main] DEBUG annotation.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration.transactionAttributeSource()
 [main] DEBUG annotation.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration.transactionInterceptor()
 [main] DEBUG annotation.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration.org.springframework.transaction.config.internalTransactionalEventListenerFactory()
 [main] DEBUG annotation.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'ro.estore.model.config.RootJpaHibernateConfig'
 [main] DEBUG annotation.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method ro.estore.model.config.RootJpaHibernateConfig.transactionManager()
 [main] DEBUG annotation.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method ro.estore.model.config.RootJpaHibernateConfig.dataSource()
 [main] DEBUG annotation.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method ro.estore.model.config.RootJpaHibernateConfig.entityManagerFactory()
 [main] DEBUG annotation.ConfigurationClassEnhancer - Successfully enhanced ro.estore.model.config.JpaHibernateTestConfig; enhanced class name is: ro.estore.model.config.JpaHibernateTestConfig$$EnhancerBySpringCGLIB$$f8042b42
 [main] DEBUG annotation.ConfigurationClassPostProcessor - Replacing bean definition 'jpaHibernateTestConfig' existing class 'ro.estore.model.config.JpaHibernateTestConfig' with enhanced class 'ro.estore.model.config.JpaHibernateTestConfig$$EnhancerBySpringCGLIB$$f8042b42'
 [main] DEBUG annotation.ConfigurationClassEnhancer - Successfully enhanced org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; enhanced class name is: org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$408936ec
 [main] DEBUG annotation.ConfigurationClassPostProcessor - Replacing bean definition 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' existing class 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' with enhanced class 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$408936ec'
 [main] DEBUG annotation.ConfigurationClassEnhancer - Successfully enhanced ro.estore.model.config.RootJpaHibernateConfig; enhanced class name is: ro.estore.model.config.RootJpaHibernateConfig$$EnhancerBySpringCGLIB$$4d38e612
 [main] DEBUG annotation.ConfigurationClassPostProcessor - Replacing bean definition 'ro.estore.model.config.RootJpaHibernateConfig' existing class 'ro.estore.model.config.RootJpaHibernateConfig' with enhanced class 'ro.estore.model.config.RootJpaHibernateConfig$$EnhancerBySpringCGLIB$$4d38e612'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 [main] INFO  annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
 [main] TRACE support.SpringFactoriesLoader - Loaded [org.springframework.beans.BeanInfoFactory] names: [org.springframework.beans.ExtendedBeanInfoFactory]
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'advisorAdapterRegistry' of type [org.springframework.aop.framework.adapter.AdvisorAdapterRegistry]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'applyCommonInterceptorsFirst' of type [boolean]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'aspectJAdvisorFactory' of type [org.springframework.aop.aspectj.annotation.AspectJAdvisorFactory]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'beanClassLoader' of type [java.lang.ClassLoader]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'beanFactory' of type [org.springframework.beans.factory.BeanFactory]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'customTargetSourceCreators' of type [[Lorg.springframework.aop.framework.autoproxy.TargetSourceCreator;]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'exposeProxy' of type [boolean]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'frozen' of type [boolean]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'includePatterns' of type [java.util.List]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'interceptorNames' of type [[Ljava.lang.String;]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'opaque' of type [boolean]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'optimize' of type [boolean]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'order' of type [int]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'proxyClassLoader' of type [java.lang.ClassLoader]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'proxyTargetClass' of type [boolean]
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
 [main] DEBUG support.AbstractApplicationContext - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@759d26fb]
 [main] DEBUG support.AbstractApplicationContext - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@4a7f959b]
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'entityManagerFactory'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'entityManagerFactory'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] TRACE autoproxy.AbstractAutoProxyCreator - Did not attempt to auto-proxy infrastructure class [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
 [main] DEBUG autoproxy.BeanFactoryAdvisorRetrievalHelper - Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.ReflectiveAspectJAdvisorFactory - Found AspectJ method: public java.lang.Object ro.estore.aspect.LoggingAspect.logMethodExecutionTime(org.aspectj.lang.ProceedingJoinPoint)
 [main] DEBUG annotation.ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void ro.estore.aspect.LoggingAspect.logMethodCall(org.aspectj.lang.JoinPoint)
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$408936ec]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$408936ec]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'beanFactory' of type [org.springframework.beans.factory.BeanFactory]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'importMetadata' of type [org.springframework.core.type.AnnotationMetadata]
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$408936ec]: AutowiredMethodElement for void org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration.setConfigurers(java.util.Collection)
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' to allow for resolving potential circular references
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': AutowiredMethodElement for void org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration.setConfigurers(java.util.Collection)
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry'
 [main] DEBUG autoproxy.BeanFactoryAdvisorRetrievalHelper - Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.BeanFactoryAdvisorRetrievalHelper - Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'transactionAttributeSource'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'transactionAttributeSource'
 [main] DEBUG autoproxy.BeanFactoryAdvisorRetrievalHelper - Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'transactionAttributeSource' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG autoproxy.BeanFactoryAdvisorRetrievalHelper - Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.BeanFactoryAdvisorRetrievalHelper - Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'transactionAttributeSource'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'transactionInterceptor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'transactionInterceptor'
 [main] TRACE autoproxy.AbstractAutoProxyCreator - Did not attempt to auto-proxy infrastructure class [org.springframework.transaction.interceptor.TransactionInterceptor]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionAttributeSource'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'transactionInterceptor' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.transaction.interceptor.TransactionInterceptor]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.transaction.interceptor.TransactionInterceptor]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'beanFactory' of type [org.springframework.beans.factory.BeanFactory]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'transactionAttributeSource' of type [org.springframework.transaction.interceptor.TransactionAttributeSource]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'transactionAttributeSources' of type [[Lorg.springframework.transaction.interceptor.TransactionAttributeSource;]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'transactionAttributes' of type [java.util.Properties]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'transactionManager' of type [org.springframework.transaction.PlatformTransactionManager]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'transactionManagerBeanName' of type [java.lang.String]
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Invoking afterPropertiesSet() on bean with name 'transactionInterceptor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'transactionInterceptor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'advice' of type [org.aopalliance.aop.Advice]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'adviceBeanName' of type [java.lang.String]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'beanFactory' of type [org.springframework.beans.factory.BeanFactory]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'classFilter' of type [org.springframework.aop.ClassFilter]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'order' of type [int]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'perInstance' of type [boolean]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'pointcut' of type [org.springframework.aop.Pointcut]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'transactionAttributeSource' of type [org.springframework.transaction.interceptor.TransactionAttributeSource]
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'ro.estore.model.config.RootJpaHibernateConfig'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'ro.estore.model.config.RootJpaHibernateConfig'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.model.config.RootJpaHibernateConfig$$EnhancerBySpringCGLIB$$4d38e612]: AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.config.RootJpaHibernateConfig.env
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'ro.estore.model.config.RootJpaHibernateConfig' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.model.config.RootJpaHibernateConfig$$EnhancerBySpringCGLIB$$4d38e612]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.model.config.RootJpaHibernateConfig$$EnhancerBySpringCGLIB$$4d38e612]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'beanFactory' of type [org.springframework.beans.factory.BeanFactory]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.config.RootJpaHibernateConfig': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.config.RootJpaHibernateConfig.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.config.RootJpaHibernateConfig' to bean named 'environment'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.config.RootJpaHibernateConfig' with 0 common interceptors and 3 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.config.RootJpaHibernateConfig$$EnhancerBySpringCGLIB$$4d38e612@3f1d2e23]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.Properties ro.estore.model.config.RootJpaHibernateConfig.additionalProperties()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public org.springframework.transaction.PlatformTransactionManager ro.estore.model.config.RootJpaHibernateConfig.transactionManager(javax.persistence.EntityManagerFactory)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public javax.sql.DataSource ro.estore.model.config.RootJpaHibernateConfig.dataSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean ro.estore.model.config.RootJpaHibernateConfig.entityManagerFactory()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public abstract void org.springframework.beans.factory.BeanFactoryAware.setBeanFactory(org.springframework.beans.factory.BeanFactory) throws org.springframework.beans.BeansException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'ro.estore.model.config.RootJpaHibernateConfig'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'loggingAspect'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'loggingAspect'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'loggingAspect' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.aspect.LoggingAspect]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.aspect.LoggingAspect]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'loggingAspect'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: LocalContainerEntityManagerFactoryBean ro.estore.model.config.RootJpaHibernateConfig.entityManagerFactory()
	=====================================================================
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'dataSource'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'dataSource'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'ro.estore.model.config.RootJpaHibernateConfig'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DataSource ro.estore.model.config.RootJpaHibernateConfig.dataSource()
	=====================================================================
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'db.driver' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'db.driver' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'db.driver' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'db.driver' in [class path resource [test.properties]] with type [String] and value 'com.mysql.jdbc.Driver'
 [main] INFO  datasource.DriverManagerDataSource - Loaded JDBC driver: com.mysql.jdbc.Driver
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'db.url' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'db.url' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'db.url' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'db.url' in [class path resource [test.properties]] with type [String] and value 'jdbc:mysql://localhost:3306/estore_test'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'db.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'db.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'db.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'db.username' in [class path resource [test.properties]] with type [String] and value 'root'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'db.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'db.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'db.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'db.password' in [class path resource [test.properties]] with type [String] and value 'root'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DataSource ro.estore.model.config.RootJpaHibernateConfig.dataSource() took 17ms to execute.
	=====================================================================
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.jdbc.datasource.DriverManagerDataSource]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.jdbc.datasource.DriverManagerDataSource]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'connection' of type [java.sql.Connection]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'connectionProperties' of type [java.util.Properties]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'driverClassName' of type [java.lang.String]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'logWriter' of type [java.io.PrintWriter]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'loginTimeout' of type [int]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'parentLogger' of type [java.util.logging.Logger]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'password' of type [java.lang.String]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'url' of type [java.lang.String]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'username' of type [java.lang.String]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'dataSource'
 [main] DEBUG jpa.HibernatePersistenceProvider - Logging Provider: org.jboss.logging.Log4jLoggerProvider
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'hibernate.dialect' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'hibernate.dialect' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'hibernate.dialect' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'hibernate.dialect' in [class path resource [test.properties]] with type [String] and value 'org.hibernate.dialect.MySQL5Dialect'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'hibernate.hbm2ddl.auto' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'hibernate.hbm2ddl.auto' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'hibernate.hbm2ddl.auto' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'hibernate.hbm2ddl.auto' in [class path resource [test.properties]] with type [String] and value 'validate'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'hibernate.show_sql' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'hibernate.show_sql' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'hibernate.show_sql' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'hibernate.show_sql' in [class path resource [test.properties]] with type [String] and value 'false'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'hibernate.format_sql' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'hibernate.format_sql' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'hibernate.format_sql' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'hibernate.format_sql' in [class path resource [test.properties]] with type [String] and value 'true'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: LocalContainerEntityManagerFactoryBean ro.estore.model.config.RootJpaHibernateConfig.entityManagerFactory() took 116ms to execute.
	=====================================================================
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'beanClassLoader' of type [java.lang.ClassLoader]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'beanFactory' of type [org.springframework.beans.factory.BeanFactory]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'beanName' of type [java.lang.String]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'bootstrapExecutor' of type [org.springframework.core.task.AsyncTaskExecutor]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'dataSource' of type [javax.sql.DataSource]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'entityManagerFactoryInterface' of type [java.lang.Class]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'entityManagerInterface' of type [java.lang.Class]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'jpaDialect' of type [org.springframework.orm.jpa.JpaDialect]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'jpaProperties' of type [java.util.Properties]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'jpaPropertyMap' of type [java.util.Map]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'jpaVendorAdapter' of type [org.springframework.orm.jpa.JpaVendorAdapter]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'jtaDataSource' of type [javax.sql.DataSource]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'loadTimeWeaver' of type [org.springframework.instrument.classloading.LoadTimeWeaver]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'mappingResources' of type [[Ljava.lang.String;]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'nativeEntityManagerFactory' of type [javax.persistence.EntityManagerFactory]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'object' of type [javax.persistence.EntityManagerFactory]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'objectType' of type [java.lang.Class]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'packagesToScan' of type [[Ljava.lang.String;]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'persistenceProvider' of type [javax.persistence.spi.PersistenceProvider]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'persistenceProviderClass' of type [java.lang.Class]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'persistenceUnitInfo' of type [javax.persistence.spi.PersistenceUnitInfo]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'persistenceUnitManager' of type [org.springframework.orm.jpa.persistenceunit.PersistenceUnitManager]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'persistenceUnitName' of type [java.lang.String]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'persistenceUnitPostProcessors' of type [[Lorg.springframework.orm.jpa.persistenceunit.PersistenceUnitPostProcessor;]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'persistenceXmlLocation' of type [java.lang.String]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'resourceLoader' of type [org.springframework.core.io.ResourceLoader]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'sharedCacheMode' of type [javax.persistence.SharedCacheMode]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'singleton' of type [boolean]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'validationMode' of type [javax.persistence.ValidationMode]
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved classpath location [META-INF/persistence.xml] to resources []
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved classpath location [ro/estore/model/] to resources [URL [file:/D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/model/], URL [file:/D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/model/]]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/model/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\config] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/model/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/model/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/model/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/model/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\config] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/model/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\entitiy] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/model/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/model/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/model/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:ro/estore/model/**/*.class] to resources [file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\config\JpaHibernateTestConfig.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\AddressRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\OrderRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\ProductRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\PurchaseRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\UserProfileRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\UserRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\config\JpaHibernateConfig.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\config\RootJpaHibernateConfig.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\entitiy\Address.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\entitiy\ModelEntity.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\entitiy\Order.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\entitiy\Product.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\entitiy\Purchase.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\entitiy\User.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\entitiy\UserProfile.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\AddressRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\GenericRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\AddressRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\GenericRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\OrderRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\ProductRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\PurchaseRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\UserProfileRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\UserRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\OrderRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\ProductRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\PurchaseRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\UserProfileRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\UserRepository.class]]
 [main] INFO  jpa.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'
 [main] DEBUG util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@36baf30c
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ro.estore.model.entitiy.Address
		ro.estore.model.entitiy.Order
		ro.estore.model.entitiy.Product
		ro.estore.model.entitiy.Purchase
		ro.estore.model.entitiy.User
		ro.estore.model.entitiy.UserProfile]
	Mapping files names []
	Properties []
 [main] DEBUG internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
 [main] DEBUG internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
 [main] DEBUG internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
 [main] DEBUG internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Cache71] -> [org.hibernate.dialect.Cache71Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [CUBRID] -> [org.hibernate.dialect.CUBRIDDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2] -> [org.hibernate.dialect.DB2Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2390] -> [org.hibernate.dialect.DB2390Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2400] -> [org.hibernate.dialect.DB2400Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [DerbyTenFive] -> [org.hibernate.dialect.DerbyTenFiveDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [DerbyTenSix] -> [org.hibernate.dialect.DerbyTenSixDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [DerbyTenSeven] -> [org.hibernate.dialect.DerbyTenSevenDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Firebird] -> [org.hibernate.dialect.FirebirdDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [FrontBase] -> [org.hibernate.dialect.FrontBaseDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [H2] -> [org.hibernate.dialect.H2Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [HSQL] -> [org.hibernate.dialect.HSQLDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Informix] -> [org.hibernate.dialect.InformixDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Ingres] -> [org.hibernate.dialect.IngresDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Ingres9] -> [org.hibernate.dialect.Ingres9Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Ingres10] -> [org.hibernate.dialect.Ingres10Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Interbase] -> [org.hibernate.dialect.InterbaseDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [JDataStore] -> [org.hibernate.dialect.JDataStoreDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Mckoi] -> [org.hibernate.dialect.MckoiDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MimerSQL] -> [org.hibernate.dialect.MimerSQLDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL57InnoDB] -> [org.hibernate.dialect.MySQL57InnoDBDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Oracle8i] -> [org.hibernate.dialect.Oracle8iDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Oracle9i] -> [org.hibernate.dialect.Oracle9iDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Oracle10g] -> [org.hibernate.dialect.Oracle10gDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Pointbase] -> [org.hibernate.dialect.PointbaseDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgresPlus] -> [org.hibernate.dialect.PostgresPlusDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgreSQL81] -> [org.hibernate.dialect.PostgreSQL81Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgreSQL82] -> [org.hibernate.dialect.PostgreSQL82Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgreSQL9] -> [org.hibernate.dialect.PostgreSQL9Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Progress] -> [org.hibernate.dialect.ProgressDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [SAPDB] -> [org.hibernate.dialect.SAPDBDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [SQLServer] -> [org.hibernate.dialect.SQLServerDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [SQLServer2005] -> [org.hibernate.dialect.SQLServer2005Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [SQLServer2008] -> [org.hibernate.dialect.SQLServer2008Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Sybase11] -> [org.hibernate.dialect.Sybase11Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [SybaseAnywhere] -> [org.hibernate.dialect.SybaseAnywhereDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [SybaseASE15] -> [org.hibernate.dialect.SybaseASE15Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [SybaseASE157] -> [org.hibernate.dialect.SybaseASE157Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Teradata] -> [org.hibernate.dialect.TeradataDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [TimesTen] -> [org.hibernate.dialect.TimesTenDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Borland] -> [org.hibernate.engine.transaction.jta.platform.internal.BorlandEnterpriseServerJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.BorlandEnterpriseServerJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.BorlandEnterpriseServerJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Bitronix] -> [org.hibernate.engine.transaction.jta.platform.internal.BitronixJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.BitronixJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.BitronixJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JBossAS] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JBossAppServerJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JBossTS] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossStandAloneJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JBossStandAloneJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossStandAloneJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JOnAS] -> [org.hibernate.engine.transaction.jta.platform.internal.JOnASJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JOnASJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JOnASJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JOTM] -> [org.hibernate.engine.transaction.jta.platform.internal.JOTMJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JOTMJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JOTMJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JRun4] -> [org.hibernate.engine.transaction.jta.platform.internal.JRun4JtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JRun4JtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JRun4JtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [OC4J] -> [org.hibernate.engine.transaction.jta.platform.internal.OC4JJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.OC4JJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.OC4JJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Orion] -> [org.hibernate.engine.transaction.jta.platform.internal.OrionJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.OrionJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.OrionJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Resin] -> [org.hibernate.engine.transaction.jta.platform.internal.ResinJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.ResinJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.ResinJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [SunOne] -> [org.hibernate.engine.transaction.jta.platform.internal.SunOneJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.SunOneJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.SunOneJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Weblogic] -> [org.hibernate.engine.transaction.jta.platform.internal.WeblogicJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.WeblogicJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.WeblogicJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [WebSphere] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.WebSphereJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [WebSphereExtended] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.WebSphereExtendedJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [persistent] -> [org.hibernate.hql.spi.id.persistent.PersistentTableBulkIdStrategy]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [global_temporary] -> [org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [local_temporary] -> [org.hibernate.hql.spi.id.local.LocalTemporaryTableBulkIdStrategy]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.event.spi.EntityCopyObserver] : [disallow] -> [org.hibernate.event.internal.EntityCopyNotAllowedObserver]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.event.spi.EntityCopyObserver] : [allow] -> [org.hibernate.event.internal.EntityCopyAllowedObserver]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.event.spi.EntityCopyObserver] : [log] -> [org.hibernate.event.internal.EntityCopyAllowedLoggedObserver]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
 [main] INFO  hibernate.Version - HHH000412: Hibernate Core {5.2.1.Final}
 [main] INFO  cfg.Environment - HHH000206: hibernate.properties not found
 [main] INFO  cfg.Environment - HHH000021: Bytecode provider name : javassist
 [main] DEBUG spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.cache.spi.RegionFactory]
 [main] DEBUG internal.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
 [main] INFO  java.JavaReflectionManager - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
 [main] DEBUG type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7c209437
 [main] DEBUG type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7c209437
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7c209437
 [main] DEBUG type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4febb875
 [main] DEBUG type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@42e3ede4
 [main] DEBUG type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@183e8023
 [main] DEBUG type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@15cafec7
 [main] DEBUG type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@15cafec7
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@15cafec7
 [main] DEBUG type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@792bbc74
 [main] DEBUG type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@792bbc74
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@792bbc74
 [main] DEBUG type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@758c83d8
 [main] DEBUG type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@758c83d8
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@758c83d8
 [main] DEBUG type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@58359ebd
 [main] DEBUG type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@58359ebd
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@58359ebd
 [main] DEBUG type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@53812a9b
 [main] DEBUG type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@53812a9b
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@53812a9b
 [main] DEBUG type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@60d1a32f
 [main] DEBUG type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@60d1a32f
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@60d1a32f
 [main] DEBUG type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@ea9b7c6
 [main] DEBUG type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@ea9b7c6
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@ea9b7c6
 [main] DEBUG type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2e11485
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2e11485
 [main] DEBUG type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@27305e6
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@27305e6
 [main] DEBUG type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@7446d8d5
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@7446d8d5
 [main] DEBUG type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@306851c7
 [main] DEBUG type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@41813449
 [main] DEBUG type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@5b07730f
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5b07730f
 [main] DEBUG type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@f73dcd6
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@f73dcd6
 [main] DEBUG type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@efde75f
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@efde75f
 [main] DEBUG type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3dddefd8
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3dddefd8
 [main] DEBUG type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6c6c5427
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6c6c5427
 [main] DEBUG type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@36546a22
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@36546a22
 [main] DEBUG type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@64dafeed
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@64dafeed
 [main] DEBUG type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7894f09b
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7894f09b
 [main] DEBUG type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@630cb4a4
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@630cb4a4
 [main] DEBUG type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5b057c8c
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5b057c8c
 [main] DEBUG type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@650eab8
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@650eab8
 [main] DEBUG type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@53f48368
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@53f48368
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@53f48368
 [main] DEBUG type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4c37b5b
 [main] DEBUG type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@3c435123
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3c435123
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3c435123
 [main] DEBUG type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7a8fa663
 [main] DEBUG type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@1623134f
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1623134f
 [main] DEBUG type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4264b240
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4264b240
 [main] DEBUG type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@75e01201
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@75e01201
 [main] DEBUG type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3829ac1
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3829ac1
 [main] DEBUG type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@553f1d75
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@553f1d75
 [main] DEBUG type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@62fe6067
 [main] DEBUG type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@305f7627
 [main] DEBUG type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@305f7627
 [main] DEBUG type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@305f7627
 [main] DEBUG type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@339bf286
 [main] DEBUG type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@339bf286
 [main] DEBUG type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@339bf286
 [main] DEBUG type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@7bc10d84
 [main] DEBUG type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7e38a7fe
 [main] DEBUG type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@4b3c354a
 [main] DEBUG type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@4b3c354a
 [main] DEBUG type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@4b3c354a
 [main] DEBUG type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2f9a01c1
 [main] DEBUG type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2f9a01c1
 [main] DEBUG type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2f9a01c1
 [main] DEBUG type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3f446bef
 [main] DEBUG type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@72445aba
 [main] DEBUG type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@65a4798f
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@65a4798f
 [main] DEBUG type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@426b6a74
 [main] DEBUG type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5ddabb18
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5ddabb18
 [main] DEBUG type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@40258c2f
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@40258c2f
 [main] DEBUG type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@16f7b4af
 [main] DEBUG type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@58bf8650
 [main] DEBUG type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@4e517165
 [main] DEBUG type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@533377b
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@533377b
 [main] DEBUG type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@f27ea3
 [main] DEBUG type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1ce61929
 [main] DEBUG type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@346939bf
 [main] DEBUG type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4bf3798b
 [main] DEBUG type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@58670130
 [main] DEBUG type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@74e47444
 [main] DEBUG type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@9bd0fa6
 [main] DEBUG type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@59d2103b
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] DEBUG internal.JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.7.12-log
      major : 5
      minor : 7
 [main] DEBUG internal.JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.37 ( Revision: 09940f05b4c98150f352e787a2549f11a2e9da93 )
      major : 5
      minor : 1
 [main] DEBUG logging.DelegatingBasicLogger - JDBC version : 4.0
 [main] INFO  dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
 [main] DEBUG spi.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
 [main] DEBUG spi.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [null]
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.id.factory.spi.MutableIdentifierGeneratorFactory]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
 [main] DEBUG relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
 [main] DEBUG cfg.AnnotationBinder - Binding entity from annotated class: ro.estore.model.entitiy.Address
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [DTYPE]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 [main] DEBUG annotations.EntityBinder - Import with entity name Address
 [main] TRACE internal.InFlightMetadataCollectorImpl - Import: Address -> ro.estore.model.entitiy.Address
 [main] TRACE internal.InFlightMetadataCollectorImpl - Import: ro.estore.model.entitiy.Address -> ro.estore.model.entitiy.Address
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address]
 [main] DEBUG annotations.EntityBinder - Bind entity ro.estore.model.entitiy.Address on table address
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Address.id
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_id]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=address_id, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Address:id]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for id
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_id]
 [main] DEBUG annotations.PropertyBinder - Building property id
 [main] TRACE annotations.PropertyBinder - Cascading id with null
 [main] TRACE cfg.AnnotationBinder - Bind @Id on id
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Address.addressLine1
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_line_1]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_line_1]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=address_line_1, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property addressLine1 with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Address:addressLine1]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for addressLine1
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_line_1]
 [main] DEBUG annotations.PropertyBinder - Building property addressLine1
 [main] TRACE annotations.PropertyBinder - Cascading addressLine1 with null
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Address.addressLine2
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_line_2]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_line_2]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=address_line_2, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property addressLine2 with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Address:addressLine2]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for addressLine2
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_line_2]
 [main] DEBUG annotations.PropertyBinder - Building property addressLine2
 [main] TRACE annotations.PropertyBinder - Cascading addressLine2 with null
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Address.addressName
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_name]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_name]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=address_name, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property addressName with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Address:addressName]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for addressName
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_name]
 [main] DEBUG annotations.PropertyBinder - Building property addressName
 [main] TRACE annotations.PropertyBinder - Cascading addressName with null
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Address.city
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [city]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [city]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=city, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property city with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Address:city]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for city
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [city]
 [main] DEBUG annotations.PropertyBinder - Building property city
 [main] TRACE annotations.PropertyBinder - Cascading city with null
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Address.postcode
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [postcode]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [postcode]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property postcode with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Address:postcode]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for postcode
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [postcode]
 [main] DEBUG annotations.PropertyBinder - Building property postcode
 [main] TRACE annotations.PropertyBinder - Cascading postcode with null
 [main] DEBUG cfg.AnnotationBinder - Binding entity from annotated class: ro.estore.model.entitiy.Order
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [DTYPE]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 [main] DEBUG annotations.EntityBinder - Import with entity name Order
 [main] TRACE internal.InFlightMetadataCollectorImpl - Import: Order -> ro.estore.model.entitiy.Order
 [main] TRACE internal.InFlightMetadataCollectorImpl - Import: ro.estore.model.entitiy.Order -> ro.estore.model.entitiy.Order
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [`order`]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [`order`]
 [main] DEBUG annotations.EntityBinder - Bind entity ro.estore.model.entitiy.Order on table order
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Order.id
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [order_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [order_id]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(order), mappingColumn=order_id, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Order:id]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for id
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [order_id]
 [main] DEBUG annotations.PropertyBinder - Building property id
 [main] TRACE annotations.PropertyBinder - Cascading id with null
 [main] TRACE cfg.AnnotationBinder - Bind @Id on id
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Order.address
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_id]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='address_id', referencedColumn='', mappedBy=''}
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(order), mappingColumn=address, insertable=true, updatable=true, unique=false}
 [main] TRACE cfg.AnnotationBinder - Fetching address with JOIN
 [main] DEBUG annotations.PropertyBinder - Building property address
 [main] TRACE annotations.PropertyBinder - Cascading address with persist
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [order_id]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='order_id', referencedColumn='', mappedBy=''}
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [purchases]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [purchases]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(order), mappingColumn=purchases, insertable=true, updatable=true, unique=false}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(order), mappingColumn=null, insertable=true, updatable=true, unique=false}
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [element]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [element]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(order), mappingColumn=element, insertable=true, updatable=true, unique=false}
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [purchases_KEY]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(order), mappingColumn=purchases_KEY, insertable=true, updatable=true, unique=false}
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [purchases_KEY]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='purchases_KEY', referencedColumn='null', mappedBy='null'}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
 [main] DEBUG annotations.CollectionBinder - Collection role: ro.estore.model.entitiy.Order.purchases
 [main] DEBUG annotations.PropertyBinder - Building property purchases
 [main] TRACE annotations.PropertyBinder - Cascading purchases with all
 [main] DEBUG cfg.AnnotationBinder - Binding entity from annotated class: ro.estore.model.entitiy.Product
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [DTYPE]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 [main] DEBUG annotations.EntityBinder - Import with entity name Product
 [main] TRACE internal.InFlightMetadataCollectorImpl - Import: Product -> ro.estore.model.entitiy.Product
 [main] TRACE internal.InFlightMetadataCollectorImpl - Import: ro.estore.model.entitiy.Product -> ro.estore.model.entitiy.Product
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [product]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [product]
 [main] DEBUG annotations.EntityBinder - Bind entity ro.estore.model.entitiy.Product on table product
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Product.id
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [product_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [product_id]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=product_id, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Product:id]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for id
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [product_id]
 [main] DEBUG annotations.PropertyBinder - Building property id
 [main] TRACE annotations.PropertyBinder - Cascading id with null
 [main] TRACE cfg.AnnotationBinder - Bind @Id on id
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Product.brand
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [brand]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [brand]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=brand, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property brand with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Product:brand]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for brand
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [brand]
 [main] DEBUG annotations.PropertyBinder - Building property brand
 [main] TRACE annotations.PropertyBinder - Cascading brand with null
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Product.description
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [description]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [description]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=description, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property description with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Product:description]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for description
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [description]
 [main] DEBUG annotations.PropertyBinder - Building property description
 [main] TRACE annotations.PropertyBinder - Cascading description with null
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Product.name
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [name]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [name]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=name, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Product:name]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for name
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [name]
 [main] DEBUG annotations.PropertyBinder - Building property name
 [main] TRACE annotations.PropertyBinder - Cascading name with null
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Product.price
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [price]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [price]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=price, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property price with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Product:price]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for price
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [price]
 [main] DEBUG annotations.PropertyBinder - Building property price
 [main] TRACE annotations.PropertyBinder - Cascading price with null
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Product.stock
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [stock]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [stock]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=stock, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property stock with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Product:stock]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for stock
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [stock]
 [main] DEBUG annotations.PropertyBinder - Building property stock
 [main] TRACE annotations.PropertyBinder - Cascading stock with null
 [main] DEBUG cfg.AnnotationBinder - Binding entity from annotated class: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [DTYPE]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 [main] DEBUG annotations.EntityBinder - Import with entity name Purchase
 [main] TRACE internal.InFlightMetadataCollectorImpl - Import: Purchase -> ro.estore.model.entitiy.Purchase
 [main] TRACE internal.InFlightMetadataCollectorImpl - Import: ro.estore.model.entitiy.Purchase -> ro.estore.model.entitiy.Purchase
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [purchase]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [purchase]
 [main] DEBUG annotations.EntityBinder - Bind entity ro.estore.model.entitiy.Purchase on table purchase
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Purchase.id
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [purchase_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [purchase_id]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(purchase), mappingColumn=purchase_id, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Purchase:id]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for id
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [purchase_id]
 [main] DEBUG annotations.PropertyBinder - Building property id
 [main] TRACE annotations.PropertyBinder - Cascading id with null
 [main] TRACE cfg.AnnotationBinder - Bind @Id on id
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Purchase.product
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [product_id]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='product_id', referencedColumn='', mappedBy=''}
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [product]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [product]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(purchase), mappingColumn=product, insertable=true, updatable=true, unique=false}
 [main] TRACE cfg.AnnotationBinder - Fetching product with JOIN
 [main] DEBUG annotations.PropertyBinder - Building property product
 [main] TRACE annotations.PropertyBinder - Cascading product with none
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Purchase.quantity
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [quantity]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [quantity]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(purchase), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property quantity with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Purchase:quantity]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for quantity
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [quantity]
 [main] DEBUG annotations.PropertyBinder - Building property quantity
 [main] TRACE annotations.PropertyBinder - Cascading quantity with null
 [main] DEBUG cfg.AnnotationBinder - Binding entity from annotated class: ro.estore.model.entitiy.User
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [DTYPE]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 [main] DEBUG annotations.EntityBinder - Import with entity name User
 [main] TRACE internal.InFlightMetadataCollectorImpl - Import: User -> ro.estore.model.entitiy.User
 [main] TRACE internal.InFlightMetadataCollectorImpl - Import: ro.estore.model.entitiy.User -> ro.estore.model.entitiy.User
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user]
 [main] DEBUG annotations.EntityBinder - Bind entity ro.estore.model.entitiy.User on table user
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.User.id
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_id]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.User:id]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for id
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_id]
 [main] DEBUG annotations.PropertyBinder - Building property id
 [main] TRACE annotations.PropertyBinder - Cascading id with null
 [main] TRACE cfg.AnnotationBinder - Bind @Id on id
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.User.orders
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_id]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [orders]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [orders]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=orders, insertable=true, updatable=true, unique=false}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [element]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [element]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [orders_KEY]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=orders_KEY, insertable=true, updatable=true, unique=false}
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [orders_KEY]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='orders_KEY', referencedColumn='null', mappedBy='null'}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
 [main] DEBUG annotations.CollectionBinder - Collection role: ro.estore.model.entitiy.User.orders
 [main] DEBUG annotations.PropertyBinder - Building property orders
 [main] TRACE annotations.PropertyBinder - Cascading orders with all
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.User.password
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [password]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [password]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property password with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.User:password]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for password
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [password]
 [main] DEBUG annotations.PropertyBinder - Building property password
 [main] TRACE annotations.PropertyBinder - Cascading password with null
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.User.userProfile
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_profile_id', referencedColumn='', mappedBy=''}
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [userProfile]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [userProfile]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=userProfile, insertable=true, updatable=true, unique=false}
 [main] TRACE cfg.AnnotationBinder - Fetching userProfile with JOIN
 [main] DEBUG annotations.PropertyBinder - Building property userProfile
 [main] TRACE annotations.PropertyBinder - Cascading userProfile with all
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.User.username
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [username]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [username]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property username with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.User:username]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for username
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [username]
 [main] DEBUG annotations.PropertyBinder - Building property username
 [main] TRACE annotations.PropertyBinder - Cascading username with null
 [main] DEBUG cfg.AnnotationBinder - Binding entity from annotated class: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [DTYPE]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 [main] DEBUG annotations.EntityBinder - Import with entity name UserProfile
 [main] TRACE internal.InFlightMetadataCollectorImpl - Import: UserProfile -> ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.InFlightMetadataCollectorImpl - Import: ro.estore.model.entitiy.UserProfile -> ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile]
 [main] DEBUG annotations.EntityBinder - Bind entity ro.estore.model.entitiy.UserProfile on table user_profile
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.UserProfile.id
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=user_profile_id, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.UserProfile:id]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for id
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] DEBUG annotations.PropertyBinder - Building property id
 [main] TRACE annotations.PropertyBinder - Cascading id with null
 [main] TRACE cfg.AnnotationBinder - Bind @Id on id
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_profile_id', referencedColumn='user_profile_id', mappedBy=''}
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [addresses]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [addresses]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=addresses, insertable=true, updatable=true, unique=false}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=null, insertable=true, updatable=true, unique=false}
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [element]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [element]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=element, insertable=true, updatable=true, unique=false}
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [addresses_KEY]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=addresses_KEY, insertable=true, updatable=true, unique=false}
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [addresses_KEY]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='addresses_KEY', referencedColumn='null', mappedBy='null'}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
 [main] DEBUG annotations.CollectionBinder - Collection role: ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG annotations.PropertyBinder - Building property addresses
 [main] TRACE annotations.PropertyBinder - Cascading addresses with all,delete,delete-orphan
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.UserProfile.emailAddress
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [email_address]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [email_address]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=email_address, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property emailAddress with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.UserProfile:emailAddress]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for emailAddress
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [email_address]
 [main] DEBUG annotations.PropertyBinder - Building property emailAddress
 [main] TRACE annotations.PropertyBinder - Cascading emailAddress with null
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.UserProfile.name
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [name]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [name]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=name, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.UserProfile:name]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for name
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [name]
 [main] DEBUG annotations.PropertyBinder - Building property name
 [main] TRACE annotations.PropertyBinder - Cascading name with null
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.UserProfile.phoneNumber
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [phone_number]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [phone_number]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=phone_number, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property phoneNumber with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.UserProfile:phoneNumber]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for phoneNumber
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [phone_number]
 [main] DEBUG annotations.PropertyBinder - Building property phoneNumber
 [main] TRACE annotations.PropertyBinder - Cascading phoneNumber with null
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.UserProfile.surname
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [surname]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [surname]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=surname, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property surname with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.UserProfile:surname]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for surname
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [surname]
 [main] DEBUG annotations.PropertyBinder - Building property surname
 [main] TRACE annotations.PropertyBinder - Cascading surname with null
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for id
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for addressLine1
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for addressLine2
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for addressName
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for city
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for postcode
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for id
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for id
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for brand
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for description
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for name
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for price
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for stock
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for id
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for quantity
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for id
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for password
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for username
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for id
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for emailAddress
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for name
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for phoneNumber
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for surname
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [null]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [product_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [null]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [product_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [product_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [null]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] DEBUG mapping.PrimaryKey - Forcing column [address_id] to be non-null as it is part of the primary key for table [address]
 [main] DEBUG mapping.PrimaryKey - Forcing column [order_id] to be non-null as it is part of the primary key for table [order]
 [main] DEBUG mapping.PrimaryKey - Forcing column [product_id] to be non-null as it is part of the primary key for table [product]
 [main] DEBUG mapping.PrimaryKey - Forcing column [purchase_id] to be non-null as it is part of the primary key for table [purchase]
 [main] DEBUG mapping.PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
 [main] DEBUG mapping.PrimaryKey - Forcing column [user_profile_id] to be non-null as it is part of the primary key for table [user_profile]
 [main] DEBUG cfg.CollectionSecondPass - Second pass for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG annotations.CollectionBinder - Binding a OneToMany: ro.estore.model.entitiy.UserProfile.addresses through a foreign key
 [main] DEBUG annotations.CollectionBinder - Mapping collection: ro.estore.model.entitiy.UserProfile.addresses -> address
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] DEBUG cfg.CollectionSecondPass - Mapped collection key: user_profile_id, one-to-many: ro.estore.model.entitiy.Address
 [main] DEBUG cfg.CollectionSecondPass - Second pass for collection: ro.estore.model.entitiy.User.orders
 [main] DEBUG annotations.CollectionBinder - Binding a OneToMany: ro.estore.model.entitiy.User.orders through a foreign key
 [main] DEBUG annotations.CollectionBinder - Mapping collection: ro.estore.model.entitiy.User.orders -> order
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [null]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_id]
 [main] DEBUG cfg.CollectionSecondPass - Mapped collection key: user_id, one-to-many: ro.estore.model.entitiy.Order
 [main] DEBUG cfg.CollectionSecondPass - Second pass for collection: ro.estore.model.entitiy.Order.purchases
 [main] DEBUG annotations.CollectionBinder - Binding a OneToMany: ro.estore.model.entitiy.Order.purchases through a foreign key
 [main] DEBUG annotations.CollectionBinder - Mapping collection: ro.estore.model.entitiy.Order.purchases -> purchase
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [order_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [null]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [order_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [order_id]
 [main] DEBUG cfg.CollectionSecondPass - Mapped collection key: order_id, one-to-many: ro.estore.model.entitiy.Purchase
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [FK5olu7homdr9et1xbi9fq1ye3f]
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.Address
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [FK145gxdq9etc0fv3a0vutmkbye]
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.User
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [FKcpl0mjoeqhxvgeeeq5piwpd3i]
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.Product
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [product_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [FK3s4jktret4nl7m8yhfc8mfrn5]
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.Order
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [order_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [FKcm2ln4qoekhle9clw1njoa3q1]
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [FKjjes1f6tjhqns02054ou51m00]
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.Address
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.User
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.Product
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.Order
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.UserProfile
 [main] TRACE loader.BatchFetchStyle - Interpreting BatchFetchStyle from setting : null
 [main] DEBUG internal.SessionFactoryImpl - Building session factory
 [main] DEBUG cfg.Settings - SessionFactory name : null
 [main] DEBUG cfg.Settings - Automatic flush during beforeCompletion(): enabled
 [main] DEBUG cfg.Settings - Automatic session close at end of transaction: disabled
 [main] DEBUG cfg.Settings - Statistics: disabled
 [main] DEBUG cfg.Settings - Deleted entity synthetic identifier rollback: disabled
 [main] DEBUG cfg.Settings - Default entity-mode: pojo
 [main] DEBUG cfg.Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
 [main] DEBUG cfg.Settings - Allow initialization of lazy state outside session : disabled
 [main] DEBUG cfg.Settings - Using BatchFetchStyle : LEGACY
 [main] DEBUG cfg.Settings - Default batch fetch size: -1
 [main] DEBUG cfg.Settings - Maximum outer join fetch depth: 2
 [main] DEBUG cfg.Settings - Default null ordering: NONE
 [main] DEBUG cfg.Settings - Order SQL updates by primary key: disabled
 [main] DEBUG cfg.Settings - Order SQL inserts for batching: disabled
 [main] DEBUG cfg.Settings - multi-tenancy strategy : NONE
 [main] DEBUG cfg.Settings - JTA Track by Thread: enabled
 [main] DEBUG cfg.Settings - Query language substitutions: {}
 [main] DEBUG cfg.Settings - JPA query language strict compliance: disabled
 [main] DEBUG cfg.Settings - Named query checking : enabled
 [main] DEBUG cfg.Settings - Second-level cache: enabled
 [main] DEBUG cfg.Settings - Second-level query cache: disabled
 [main] DEBUG cfg.Settings - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@988246e
 [main] DEBUG cfg.Settings - Second-level cache region prefix: null
 [main] DEBUG cfg.Settings - Optimize second-level cache for minimal puts: disabled
 [main] DEBUG cfg.Settings - Structured second-level cache entries: disabled
 [main] DEBUG cfg.Settings - Second-level cache direct-reference entries: disabled
 [main] DEBUG cfg.Settings - Automatic eviction of collection cache: disabled
 [main] DEBUG cfg.Settings - JDBC batch size: 15
 [main] DEBUG cfg.Settings - JDBC batch updates for versioned data: enabled
 [main] DEBUG cfg.Settings - Scrollable result sets: enabled
 [main] DEBUG cfg.Settings - Wrap result sets: disabled
 [main] DEBUG cfg.Settings - JDBC3 getGeneratedKeys(): enabled
 [main] DEBUG cfg.Settings - JDBC result set fetch size: null
 [main] DEBUG cfg.Settings - Connection release mode: ON_CLOSE
 [main] DEBUG cfg.Settings - Generate SQL with comments: disabled
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.event.service.spi.EventListenerRegistry]
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.spi.CacheImplementor]
 [main] TRACE type.TypeFactory$TypeScopeImpl - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@34cf5a97
 [main] DEBUG internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
 [main] DEBUG internal.SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1250, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=D:\other\projects\eStore\estore-parent\estore-model\target\test-classes;D:\other\projects\eStore\estore-parent\estore-model\target\classes;C:\Users\IonutBa\.m2\repository\org\springframework\spring-orm\4.3.1.RELEASE\spring-orm-4.3.1.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-beans\4.3.1.RELEASE\spring-beans-4.3.1.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-core\4.3.1.RELEASE\spring-core-4.3.1.RELEASE.jar;C:\Users\IonutBa\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-jdbc\4.3.1.RELEASE\spring-jdbc-4.3.1.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-tx\4.3.1.RELEASE\spring-tx-4.3.1.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\hibernate\hibernate-core\5.2.1.Final\hibernate-core-5.2.1.Final.jar;C:\Users\IonutBa\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\IonutBa\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\IonutBa\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\IonutBa\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\IonutBa\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\IonutBa\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\IonutBa\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\IonutBa\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\IonutBa\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\IonutBa\.m2\repository\javax\enterprise\cdi-api\1.1-PFD\cdi-api-1.1-PFD.jar;C:\Users\IonutBa\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\IonutBa\.m2\repository\org\jboss\spec\javax\interceptor\jboss-interceptors-api_1.1_spec\1.0.0.Beta1\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;C:\Users\IonutBa\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\IonutBa\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\IonutBa\.m2\repository\org\hibernate\hibernate-entitymanager\5.2.1.Final\hibernate-entitymanager-5.2.1.Final.jar;C:\Users\IonutBa\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\IonutBa\.m2\repository\mysql\mysql-connector-java\5.1.37\mysql-connector-java-5.1.37.jar;C:\Users\IonutBa\.m2\repository\org\apache\commons\commons-lang3\3.4\commons-lang3-3.4.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-context\4.3.1.RELEASE\spring-context-4.3.1.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-aop\4.3.1.RELEASE\spring-aop-4.3.1.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-expression\4.3.1.RELEASE\spring-expression-4.3.1.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-test\4.3.1.RELEASE\spring-test-4.3.1.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-aspects\4.3.1.RELEASE\spring-aspects-4.3.1.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\IonutBa\.m2\repository\org\slf4j\slf4j-log4j12\1.7.21\slf4j-log4j12-1.7.21.jar;C:\Users\IonutBa\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\IonutBa\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\IonutBa\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\IonutBa\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;/D:/other/eclipse/eclipse/configuration/org.eclipse.osgi/383/0/.cp/;/D:/other/eclipse/eclipse/configuration/org.eclipse.osgi/382/0/.cp/, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Athens, user.country.format=RO, os.name=Windows 8.1, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=D:\software\Java\jdk1.8.0_91\jre\bin, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 58940 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -testNameFile C:\Users\IonutBa\AppData\Local\Temp\testNames8013190702382038785.txt, javax.persistence.sharedCache.mode=UNSPECIFIED, sun.cpu.endian=little, user.home=C:\Users\IonutBa, user.language=en, java.specification.vendor=Oracle Corporation, java.home=D:\software\Java\jdk1.8.0_91\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=D:\software\Java\jdk1.8.0_91\jre\lib\resources.jar;D:\software\Java\jdk1.8.0_91\jre\lib\rt.jar;D:\software\Java\jdk1.8.0_91\jre\lib\sunrsasign.jar;D:\software\Java\jdk1.8.0_91\jre\lib\jsse.jar;D:\software\Java\jdk1.8.0_91\jre\lib\jce.jar;D:\software\Java\jdk1.8.0_91\jre\lib\charsets.jar;D:\software\Java\jdk1.8.0_91\jre\lib\jfr.jar;D:\software\Java\jdk1.8.0_91\jre\classes, hibernate.hbm2ddl.auto=validate, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_91-b14, user.name=IonutBa, path.separator=;, os.version=6.3, java.endorsed.dirs=D:\software\Java\jdk1.8.0_91\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=Cp1250, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\IonutBa\AppData\Local\Temp\, java.version=1.8.0_91, user.dir=D:\other\projects\eStore\estore-parent\estore-model, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, user.language.format=ro, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@278f8425, java.library.path=D:\software\Java\jdk1.8.0_91\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/work/jdk1.7.0_51_x64/bin/../jre/bin/server;D:/work/jdk1.7.0_51_x64/bin/../jre/bin;D:/work/jdk1.7.0_51_x64/bin/../jre/lib/amd64;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Skype\Phone\;D:\work\jdk1.7.0_51_x64\bin;D:\software\PuTTY\;D:\software\TortoiseSVN\bin;D:\languages\NodeJs\;D:\software\sonar-scanner-2.6.1\bin;D:\software\sonarqube-5.6\bin\D:\software\sonarqube-5.6\bin\windows-x86-64;C:\ProgramData\IonutBa\atom\bin;C:\Users\IonutBa\AppData\Roaming\npm;C:\Windows\system32;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.91-b14, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591, java.ext.dirs=D:\software\Java\jdk1.8.0_91\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
 [main] DEBUG spi.JaccIntegrator - Skipping JACC integration as it was not enabled
 [main] TRACE spi.CascadeStyles - Registering external cascade style [persist : STYLE_PERSIST_SKIPLAZY]
 [main] DEBUG spi.CascadeStyles - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
 [main] DEBUG internal.SessionFactoryImpl - Instantiated session factory
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.property.access.spi.PropertyAccessStrategyResolver]
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.Product] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.Product
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.Product] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.Product
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [brand], existing type = [org.hibernate.type.StringType@7446d8d5], incoming type = [org.hibernate.type.StringType@7446d8d5]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [description], existing type = [org.hibernate.type.StringType@7446d8d5], incoming type = [org.hibernate.type.StringType@7446d8d5]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@7446d8d5], incoming type = [org.hibernate.type.StringType@7446d8d5]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [price], existing type = [org.hibernate.type.DoubleType@ea9b7c6], incoming type = [org.hibernate.type.DoubleType@ea9b7c6]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [stock], existing type = [org.hibernate.type.IntegerType@58359ebd], incoming type = [org.hibernate.type.IntegerType@58359ebd]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@53812a9b], incoming type = [org.hibernate.type.LongType@53812a9b]
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.UserProfile] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.UserProfile] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.UserProfile
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [addresses], existing type = [org.hibernate.type.BagType(ro.estore.model.entitiy.UserProfile.addresses)], incoming type = [org.hibernate.type.BagType(ro.estore.model.entitiy.UserProfile.addresses)]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [emailAddress], existing type = [org.hibernate.type.StringType@7446d8d5], incoming type = [org.hibernate.type.StringType@7446d8d5]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@7446d8d5], incoming type = [org.hibernate.type.StringType@7446d8d5]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [phoneNumber], existing type = [org.hibernate.type.StringType@7446d8d5], incoming type = [org.hibernate.type.StringType@7446d8d5]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [surname], existing type = [org.hibernate.type.StringType@7446d8d5], incoming type = [org.hibernate.type.StringType@7446d8d5]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@53812a9b], incoming type = [org.hibernate.type.LongType@53812a9b]
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.Purchase] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.Purchase
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.Purchase] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.Purchase
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [product.id], existing type = [org.hibernate.type.LongType@53812a9b], incoming type = [org.hibernate.type.LongType@53812a9b]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [product], existing type = [org.hibernate.type.ManyToOneType(ro.estore.model.entitiy.Product)], incoming type = [org.hibernate.type.ManyToOneType(ro.estore.model.entitiy.Product)]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [product.id], existing type = [org.hibernate.type.LongType@53812a9b], incoming type = [org.hibernate.type.LongType@53812a9b]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [product.id], existing type = [org.hibernate.type.LongType@53812a9b], incoming type = [org.hibernate.type.LongType@53812a9b]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [quantity], existing type = [org.hibernate.type.IntegerType@58359ebd], incoming type = [org.hibernate.type.IntegerType@58359ebd]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [_purchases_order_idBackref], existing type = [org.hibernate.type.LongType@53812a9b], incoming type = [org.hibernate.type.LongType@53812a9b]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@53812a9b], incoming type = [org.hibernate.type.LongType@53812a9b]
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.Order] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.Order
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.Order] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.Order
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@53812a9b], incoming type = [org.hibernate.type.LongType@53812a9b]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [address], existing type = [org.hibernate.type.ManyToOneType(ro.estore.model.entitiy.Address)], incoming type = [org.hibernate.type.ManyToOneType(ro.estore.model.entitiy.Address)]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@53812a9b], incoming type = [org.hibernate.type.LongType@53812a9b]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@53812a9b], incoming type = [org.hibernate.type.LongType@53812a9b]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [purchases], existing type = [org.hibernate.type.BagType(ro.estore.model.entitiy.Order.purchases)], incoming type = [org.hibernate.type.BagType(ro.estore.model.entitiy.Order.purchases)]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [_orders_user_idBackref], existing type = [org.hibernate.type.LongType@53812a9b], incoming type = [org.hibernate.type.LongType@53812a9b]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@53812a9b], incoming type = [org.hibernate.type.LongType@53812a9b]
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.User] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.User
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.User] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.User
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [userProfile.id], existing type = [org.hibernate.type.LongType@53812a9b], incoming type = [org.hibernate.type.LongType@53812a9b]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [orders], existing type = [org.hibernate.type.BagType(ro.estore.model.entitiy.User.orders)], incoming type = [org.hibernate.type.BagType(ro.estore.model.entitiy.User.orders)]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [password], existing type = [org.hibernate.type.StringType@7446d8d5], incoming type = [org.hibernate.type.StringType@7446d8d5]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [userProfile], existing type = [org.hibernate.type.ManyToOneType(ro.estore.model.entitiy.UserProfile)], incoming type = [org.hibernate.type.ManyToOneType(ro.estore.model.entitiy.UserProfile)]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [userProfile.id], existing type = [org.hibernate.type.LongType@53812a9b], incoming type = [org.hibernate.type.LongType@53812a9b]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [userProfile.id], existing type = [org.hibernate.type.LongType@53812a9b], incoming type = [org.hibernate.type.LongType@53812a9b]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [username], existing type = [org.hibernate.type.StringType@7446d8d5], incoming type = [org.hibernate.type.StringType@7446d8d5]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@53812a9b], incoming type = [org.hibernate.type.LongType@53812a9b]
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.Address] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.Address
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.Address] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.Address
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [addressLine1], existing type = [org.hibernate.type.StringType@7446d8d5], incoming type = [org.hibernate.type.StringType@7446d8d5]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [addressLine2], existing type = [org.hibernate.type.StringType@7446d8d5], incoming type = [org.hibernate.type.StringType@7446d8d5]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [addressName], existing type = [org.hibernate.type.StringType@7446d8d5], incoming type = [org.hibernate.type.StringType@7446d8d5]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [city], existing type = [org.hibernate.type.StringType@7446d8d5], incoming type = [org.hibernate.type.StringType@7446d8d5]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [postcode], existing type = [org.hibernate.type.StringType@7446d8d5], incoming type = [org.hibernate.type.StringType@7446d8d5]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@53812a9b], incoming type = [org.hibernate.type.LongType@53812a9b]
 [main] DEBUG collection.AbstractCollectionPersister - Static SQL for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG collection.AbstractCollectionPersister -  Row insert: update address set user_profile_id=? where address_id=?
 [main] DEBUG collection.AbstractCollectionPersister -  Row update: update address set  where address_id=?
 [main] DEBUG collection.AbstractCollectionPersister -  Row delete: update address set user_profile_id=null where user_profile_id=? and address_id=?
 [main] DEBUG collection.AbstractCollectionPersister -  One-shot delete: update address set user_profile_id=null where user_profile_id=?
 [main] DEBUG collection.AbstractCollectionPersister - Static SQL for collection: ro.estore.model.entitiy.User.orders
 [main] DEBUG collection.AbstractCollectionPersister -  Row insert: update `order` set user_id=? where order_id=?
 [main] DEBUG collection.AbstractCollectionPersister -  Row update: update `order` set  where order_id=?
 [main] DEBUG collection.AbstractCollectionPersister -  Row delete: update `order` set user_id=null where user_id=? and order_id=?
 [main] DEBUG collection.AbstractCollectionPersister -  One-shot delete: update `order` set user_id=null where user_id=?
 [main] DEBUG collection.AbstractCollectionPersister - Static SQL for collection: ro.estore.model.entitiy.Order.purchases
 [main] DEBUG collection.AbstractCollectionPersister -  Row insert: update purchase set order_id=? where purchase_id=?
 [main] DEBUG collection.AbstractCollectionPersister -  Row update: update purchase set  where purchase_id=?
 [main] DEBUG collection.AbstractCollectionPersister -  Row delete: update purchase set order_id=null where order_id=? and purchase_id=?
 [main] DEBUG collection.AbstractCollectionPersister -  One-shot delete: update purchase set order_id=null where order_id=?
 [main] DEBUG entity.AbstractEntityPersister - Static SQL for entity: ro.estore.model.entitiy.Product
 [main] DEBUG entity.AbstractEntityPersister -  Version select: select product_id from product where product_id =?
 [main] DEBUG entity.AbstractEntityPersister -  Snapshot select: select product_.product_id, product_.brand as brand2_2_, product_.description as descript3_2_, product_.name as name4_2_, product_.price as price5_2_, product_.stock as stock6_2_ from product product_ where product_.product_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Insert 0: insert into product (brand, description, name, price, stock, product_id) values (?, ?, ?, ?, ?, ?)
 [main] DEBUG logging.DelegatingBasicLogger -  Update 0: update product set brand=?, description=?, name=?, price=?, stock=? where product_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Delete 0: delete from product where product_id=?
 [main] DEBUG entity.AbstractEntityPersister -  Identity insert: insert into product (brand, description, name, price, stock) values (?, ?, ?, ?, ?)
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e106680]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5a8ba37c
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=product, columns={product_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5a8ba37c
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Product
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=brand, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=brand, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=description, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=price, type=double [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=price, type=double [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5a8ba37c
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Product
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [NONE]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ce4369b]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7f829c76
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=product, columns={product_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7f829c76
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Product
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=brand, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=brand, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=description, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=price, type=double [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=price, type=double [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7f829c76
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Product
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [READ]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cb19dba]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7c3ebc6b
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=product, columns={product_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7c3ebc6b
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Product
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=brand, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=brand, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=description, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=price, type=double [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=price, type=double [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7c3ebc6b
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Product
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [UPGRADE]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1931d99]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6a9950f1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=product, columns={product_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6a9950f1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Product
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=brand, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=brand, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=description, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=price, type=double [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=price, type=double [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6a9950f1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Product
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [UPGRADE_NOWAIT]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ad54c55]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@73017a80
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=product, columns={product_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@73017a80
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Product
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=brand, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=brand, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=description, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=price, type=double [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=price, type=double [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@73017a80
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Product
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [UPGRADE_SKIPLOCKED]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ae7deac]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4a5905d9
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=product, columns={product_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4a5905d9
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Product
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=brand, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=brand, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=description, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=price, type=double [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=price, type=double [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4a5905d9
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Product
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [FORCE]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a3e5f23]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6293e39e
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=product, columns={product_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6293e39e
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Product
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=brand, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=brand, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=description, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=price, type=double [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=price, type=double [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6293e39e
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Product
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [PESSIMISTIC_READ]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=? lock in share mode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@365553de]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@34a0ef00
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=product, columns={product_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@34a0ef00
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Product
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=brand, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=brand, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=description, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=price, type=double [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=price, type=double [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@34a0ef00
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Product
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [PESSIMISTIC_WRITE]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c0f79f0]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@21fdfefc
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=product, columns={product_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@21fdfefc
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Product
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=brand, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=brand, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=description, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=price, type=double [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=price, type=double [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@21fdfefc
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Product
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [PESSIMISTIC_FORCE_INCREMENT]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3daa82be]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@ec1b2e4
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=product, columns={product_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@ec1b2e4
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Product
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=brand, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=brand, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=description, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=price, type=double [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=price, type=double [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@ec1b2e4
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Product
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [OPTIMISTIC]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29a69a35]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@67e28be3
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=product, columns={product_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@67e28be3
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Product
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=brand, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=brand, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=description, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=price, type=double [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=price, type=double [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@67e28be3
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Product
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [OPTIMISTIC_FORCE_INCREMENT]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_MERGE on entity ro.estore.model.entitiy.Product: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_REFRESH on entity ro.estore.model.entitiy.Product: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=?
 [main] DEBUG entity.AbstractEntityPersister - Static SQL for entity: ro.estore.model.entitiy.UserProfile
 [main] DEBUG entity.AbstractEntityPersister -  Version select: select user_profile_id from user_profile where user_profile_id =?
 [main] DEBUG entity.AbstractEntityPersister -  Snapshot select: select userprofil_.user_profile_id, userprofil_.email_address as email_ad2_5_, userprofil_.name as name3_5_, userprofil_.phone_number as phone_nu4_5_, userprofil_.surname as surname5_5_ from user_profile userprofil_ where userprofil_.user_profile_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Insert 0: insert into user_profile (email_address, name, phone_number, surname, user_profile_id) values (?, ?, ?, ?, ?)
 [main] DEBUG logging.DelegatingBasicLogger -  Update 0: update user_profile set email_address=?, name=?, phone_number=?, surname=? where user_profile_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Delete 0: delete from user_profile where user_profile_id=?
 [main] DEBUG entity.AbstractEntityPersister -  Identity insert: insert into user_profile (email_address, name, phone_number, surname) values (?, ?, ?, ?)
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25b5c5e3]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5177e388
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user_profile, columns={user_profile_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5177e388
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66f659e6]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1abc9f14]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=emailAddress, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=emailAddress, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=phoneNumber, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=phoneNumber, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5177e388
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.UserProfile.addresses, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.UserProfile.addresses)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.UserProfile.addresses.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [NONE]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77cb9cd1]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@971e903
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user_profile, columns={user_profile_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@971e903
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35636217]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1549bba7]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=emailAddress, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=emailAddress, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=phoneNumber, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=phoneNumber, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@971e903
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.UserProfile.addresses, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.UserProfile.addresses)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.UserProfile.addresses.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [READ]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e4f80cb]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@38704ff0
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user_profile, columns={user_profile_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@38704ff0
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16ade133]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e61e4c2]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=emailAddress, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=emailAddress, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=phoneNumber, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=phoneNumber, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@38704ff0
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.UserProfile.addresses, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.UserProfile.addresses)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.UserProfile.addresses.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [UPGRADE]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c6a6c1d]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@36dfbdaf
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user_profile, columns={user_profile_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@36dfbdaf
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f82663e]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e04ccf8]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=emailAddress, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=emailAddress, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=phoneNumber, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=phoneNumber, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@36dfbdaf
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.UserProfile.addresses, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.UserProfile.addresses)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.UserProfile.addresses.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [UPGRADE_NOWAIT]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51d143a1]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1a28aef1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user_profile, columns={user_profile_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1a28aef1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4647881c]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e0cff20]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=emailAddress, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=emailAddress, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=phoneNumber, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=phoneNumber, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1a28aef1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.UserProfile.addresses, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.UserProfile.addresses)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.UserProfile.addresses.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [UPGRADE_SKIPLOCKED]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a9b0a6f]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@10667848
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user_profile, columns={user_profile_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@10667848
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@191a709b]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77c7ed8e]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=emailAddress, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=emailAddress, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=phoneNumber, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=phoneNumber, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@10667848
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.UserProfile.addresses, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.UserProfile.addresses)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.UserProfile.addresses.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [FORCE]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@453d496b]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@66bacdbc
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user_profile, columns={user_profile_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@66bacdbc
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c6ee758]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@640dc4c6]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=emailAddress, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=emailAddress, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=phoneNumber, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=phoneNumber, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@66bacdbc
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.UserProfile.addresses, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.UserProfile.addresses)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.UserProfile.addresses.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [PESSIMISTIC_READ]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? lock in share mode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b54af3d]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7bb35cc6
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user_profile, columns={user_profile_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7bb35cc6
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@203c20cf]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a1debfa]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=emailAddress, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=emailAddress, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=phoneNumber, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=phoneNumber, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7bb35cc6
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.UserProfile.addresses, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.UserProfile.addresses)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.UserProfile.addresses.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [PESSIMISTIC_WRITE]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44de94c3]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@256aa5f2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user_profile, columns={user_profile_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@256aa5f2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6411d3c8]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2116b68b]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=emailAddress, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=emailAddress, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=phoneNumber, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=phoneNumber, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@256aa5f2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.UserProfile.addresses, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.UserProfile.addresses)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.UserProfile.addresses.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [PESSIMISTIC_FORCE_INCREMENT]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11de56e6]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@616b241a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user_profile, columns={user_profile_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@616b241a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b8e246c]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f387978]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=emailAddress, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=emailAddress, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=phoneNumber, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=phoneNumber, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@616b241a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.UserProfile.addresses, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.UserProfile.addresses)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.UserProfile.addresses.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [OPTIMISTIC]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cb2651f]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4441d567
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user_profile, columns={user_profile_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4441d567
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3e1624c7]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62b969c4]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=emailAddress, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=emailAddress, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=phoneNumber, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=phoneNumber, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4441d567
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.UserProfile.addresses, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.UserProfile.addresses)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.UserProfile.addresses.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [OPTIMISTIC_FORCE_INCREMENT]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_MERGE on entity ro.estore.model.entitiy.UserProfile: select userprofil0_.user_profile_id as user_pro1_5_1_, userprofil0_.email_address as email_ad2_5_1_, userprofil0_.name as name3_5_1_, userprofil0_.phone_number as phone_nu4_5_1_, userprofil0_.surname as surname5_5_1_, addresses1_.user_profile_id as user_pro7_0_3_, addresses1_.address_id as address_1_0_3_, addresses1_.address_id as address_1_0_0_, addresses1_.address_line_1 as address_2_0_0_, addresses1_.address_line_2 as address_3_0_0_, addresses1_.address_name as address_4_0_0_, addresses1_.city as city5_0_0_, addresses1_.postcode as postcode6_0_0_ from user_profile userprofil0_ left outer join address addresses1_ on userprofil0_.user_profile_id=addresses1_.user_profile_id where userprofil0_.user_profile_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_REFRESH on entity ro.estore.model.entitiy.UserProfile: select userprofil0_.user_profile_id as user_pro1_5_1_, userprofil0_.email_address as email_ad2_5_1_, userprofil0_.name as name3_5_1_, userprofil0_.phone_number as phone_nu4_5_1_, userprofil0_.surname as surname5_5_1_, addresses1_.user_profile_id as user_pro7_0_3_, addresses1_.address_id as address_1_0_3_, addresses1_.address_id as address_1_0_0_, addresses1_.address_line_1 as address_2_0_0_, addresses1_.address_line_2 as address_3_0_0_, addresses1_.address_name as address_4_0_0_, addresses1_.city as city5_0_0_, addresses1_.postcode as postcode6_0_0_ from user_profile userprofil0_ left outer join address addresses1_ on userprofil0_.user_profile_id=addresses1_.user_profile_id where userprofil0_.user_profile_id=?
 [main] DEBUG entity.AbstractEntityPersister - Static SQL for entity: ro.estore.model.entitiy.Purchase
 [main] DEBUG entity.AbstractEntityPersister -  Version select: select purchase_id from purchase where purchase_id =?
 [main] DEBUG entity.AbstractEntityPersister -  Snapshot select: select purchase_.purchase_id, purchase_.product_id as product_3_3_, purchase_.quantity as quantity2_3_ from purchase purchase_ where purchase_.purchase_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Insert 0: insert into purchase (product_id, quantity, order_id, purchase_id) values (?, ?, ?, ?)
 [main] DEBUG logging.DelegatingBasicLogger -  Update 0: update purchase set product_id=?, quantity=? where purchase_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Delete 0: delete from purchase where purchase_id=?
 [main] DEBUG entity.AbstractEntityPersister -  Identity insert: insert into purchase (product_id, quantity, order_id) values (?, ?, ?)
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79d743e6]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@776802b0
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=purchase, columns={purchase_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@776802b0
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Purchase
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64c4c01]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@16073fa8
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .... Registering AssociationKey : AssociationKey(table=purchase, columns={product_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@16073fa8
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting entity identifier : ro.estore.model.entitiy.Product
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.brand
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=brand, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=brand, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.description
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=description, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=description, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.price
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=price, type=double [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=price, type=double [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.stock
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@16073fa8
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=quantity, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=quantity, type=integer [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _purchases_order_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@776802b0
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}
          - JOIN (JoinDefinedByMetadata(product)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ro.estore.model.entitiy.Product)
                - SQL table alias mapping - product1_
                - alias suffix - 1_
                - suffixed key columns - {product_1_2_1_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [NONE]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cc9cfb2]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@cfbc8e8
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=purchase, columns={purchase_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@cfbc8e8
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Purchase
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bead518]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@14bf57b2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .... Registering AssociationKey : AssociationKey(table=purchase, columns={product_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@14bf57b2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting entity identifier : ro.estore.model.entitiy.Product
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.brand
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=brand, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=brand, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.description
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=description, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=description, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.price
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=price, type=double [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=price, type=double [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.stock
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@14bf57b2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=quantity, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=quantity, type=integer [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _purchases_order_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@cfbc8e8
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}
          - JOIN (JoinDefinedByMetadata(product)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ro.estore.model.entitiy.Product)
                - SQL table alias mapping - product1_
                - alias suffix - 1_
                - suffixed key columns - {product_1_2_1_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [READ]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46d9aec8]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@14379273
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=purchase, columns={purchase_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@14379273
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Purchase
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7918c7f8]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=quantity, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=quantity, type=integer [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _purchases_order_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@14379273
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [UPGRADE]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_ from purchase purchase0_ where purchase0_.purchase_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17740dae]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1c504e66
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=purchase, columns={purchase_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1c504e66
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Purchase
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@345cf395]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=quantity, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=quantity, type=integer [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _purchases_order_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1c504e66
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [UPGRADE_NOWAIT]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_ from purchase purchase0_ where purchase0_.purchase_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bc4d5e1]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3c6aa04a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=purchase, columns={purchase_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3c6aa04a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Purchase
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2257fadf]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=quantity, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=quantity, type=integer [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _purchases_order_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3c6aa04a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [UPGRADE_SKIPLOCKED]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_ from purchase purchase0_ where purchase0_.purchase_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7144655b]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5c82cd4f
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=purchase, columns={purchase_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5c82cd4f
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Purchase
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35835e65]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=quantity, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=quantity, type=integer [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _purchases_order_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5c82cd4f
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [FORCE]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_ from purchase purchase0_ where purchase0_.purchase_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@289fdb08]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7a231dfd
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=purchase, columns={purchase_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7a231dfd
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Purchase
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30814f43]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=quantity, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=quantity, type=integer [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _purchases_order_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7a231dfd
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [PESSIMISTIC_READ]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_ from purchase purchase0_ where purchase0_.purchase_id=? lock in share mode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fde4f40]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@49cf9028
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=purchase, columns={purchase_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@49cf9028
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Purchase
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b61a019]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=quantity, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=quantity, type=integer [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _purchases_order_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@49cf9028
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [PESSIMISTIC_WRITE]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_ from purchase purchase0_ where purchase0_.purchase_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11a00961]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7ce9e05a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=purchase, columns={purchase_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7ce9e05a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Purchase
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4992613f]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=quantity, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=quantity, type=integer [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _purchases_order_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7ce9e05a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [PESSIMISTIC_FORCE_INCREMENT]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_ from purchase purchase0_ where purchase0_.purchase_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fd5717c]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7e2f86e6
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=purchase, columns={purchase_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7e2f86e6
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Purchase
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d774249]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=quantity, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=quantity, type=integer [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _purchases_order_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7e2f86e6
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [OPTIMISTIC]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_ from purchase purchase0_ where purchase0_.purchase_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17b64941]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@53ac845a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=purchase, columns={purchase_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@53ac845a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Purchase
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5136207f]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=quantity, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=quantity, type=integer [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _purchases_order_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@53ac845a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [OPTIMISTIC_FORCE_INCREMENT]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_ from purchase purchase0_ where purchase0_.purchase_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_MERGE on entity ro.estore.model.entitiy.Purchase: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_ from purchase purchase0_ where purchase0_.purchase_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_REFRESH on entity ro.estore.model.entitiy.Purchase: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_ from purchase purchase0_ where purchase0_.purchase_id=?
 [main] DEBUG entity.AbstractEntityPersister - Static SQL for entity: ro.estore.model.entitiy.Order
 [main] DEBUG entity.AbstractEntityPersister -  Version select: select order_id from `order` where order_id =?
 [main] DEBUG entity.AbstractEntityPersister -  Snapshot select: select order_.order_id, order_.address_id as address_2_1_ from `order` order_ where order_.order_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Insert 0: insert into `order` (address_id, user_id, order_id) values (?, ?, ?)
 [main] DEBUG logging.DelegatingBasicLogger -  Update 0: update `order` set address_id=? where order_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Delete 0: delete from `order` where order_id=?
 [main] DEBUG entity.AbstractEntityPersister -  Identity insert: insert into `order` (address_id, user_id) values (?, ?)
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26a4551a]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3fdecce
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=`order`, columns={order_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3fdecce
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Order
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@344426bf]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@5411dd90
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .... Registering AssociationKey : AssociationKey(table=`order`, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@5411dd90
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting entity identifier : ro.estore.model.entitiy.Address
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.addressLine1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=addressLine1, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=addressLine1, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.addressLine2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=addressLine2, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=addressLine2, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.addressName
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=addressName, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=addressName, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.city
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=city, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=city, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.postcode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@5411dd90
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@50194e8d]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cee53dc]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _orders_user_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3fdecce
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Order
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.Order.purchases, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.purchases)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Order.purchases.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(address)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ro.estore.model.entitiy.Address)
                - SQL table alias mapping - address1_
                - alias suffix - 1_
                - suffixed key columns - {address_1_0_1_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [NONE]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@290aeb20]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@73ad4ecc
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=`order`, columns={order_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@73ad4ecc
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Order
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69da0b12]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@2764c546
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .... Registering AssociationKey : AssociationKey(table=`order`, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@2764c546
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting entity identifier : ro.estore.model.entitiy.Address
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.addressLine1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=addressLine1, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=addressLine1, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.addressLine2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=addressLine2, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=addressLine2, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.addressName
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=addressName, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=addressName, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.city
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=city, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=city, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.postcode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@2764c546
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@59496961]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@408b87aa]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _orders_user_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@73ad4ecc
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Order
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.Order.purchases, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.purchases)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Order.purchases.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(address)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ro.estore.model.entitiy.Address)
                - SQL table alias mapping - address1_
                - alias suffix - 1_
                - suffixed key columns - {address_1_0_1_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [READ]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79b08632]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@787f32b7
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=`order`, columns={order_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@787f32b7
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Order
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6aef4eb8]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@76c52298]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bb9ab64]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _orders_user_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@787f32b7
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Order
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.Order.purchases, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.purchases)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Order.purchases.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [UPGRADE]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_ from `order` order0_ where order0_.order_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a52ca2e]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1ad8df52
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=`order`, columns={order_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1ad8df52
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Order
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45d6ef73]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3f29e26]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f6d27cc]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _orders_user_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1ad8df52
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Order
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.Order.purchases, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.purchases)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Order.purchases.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [UPGRADE_NOWAIT]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_ from `order` order0_ where order0_.order_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4393593c]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@314c8b4a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=`order`, columns={order_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@314c8b4a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Order
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26d820eb]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@507d20bb]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9fec931]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _orders_user_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@314c8b4a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Order
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.Order.purchases, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.purchases)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Order.purchases.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [UPGRADE_SKIPLOCKED]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_ from `order` order0_ where order0_.order_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cbd159f]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3b05a99b
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=`order`, columns={order_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3b05a99b
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Order
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c43eb8]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d0cc890]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49293b43]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _orders_user_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3b05a99b
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Order
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.Order.purchases, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.purchases)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Order.purchases.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [FORCE]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_ from `order` order0_ where order0_.order_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ff60a8c]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7ce4de34
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=`order`, columns={order_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7ce4de34
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Order
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67b7c170]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@67440de6]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@889d9e8]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _orders_user_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7ce4de34
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Order
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.Order.purchases, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.purchases)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Order.purchases.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [PESSIMISTIC_READ]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_ from `order` order0_ where order0_.order_id=? lock in share mode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5246a3b3]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@ba354ca
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=`order`, columns={order_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@ba354ca
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Order
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c4f4365]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@acf859d]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6df3e44c]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _orders_user_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@ba354ca
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Order
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.Order.purchases, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.purchases)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Order.purchases.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [PESSIMISTIC_WRITE]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_ from `order` order0_ where order0_.order_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ce7e83c]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4a05d8ae
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=`order`, columns={order_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4a05d8ae
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Order
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c904f1e]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4eb30d44]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d56aaa6]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _orders_user_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4a05d8ae
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Order
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.Order.purchases, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.purchases)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Order.purchases.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [PESSIMISTIC_FORCE_INCREMENT]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_ from `order` order0_ where order0_.order_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6972c30a]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@57a48985
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=`order`, columns={order_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@57a48985
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Order
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ab6718]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3910fe11]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@460510aa]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _orders_user_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@57a48985
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Order
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.Order.purchases, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.purchases)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Order.purchases.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [OPTIMISTIC]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_ from `order` order0_ where order0_.order_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@351e414e]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6fd77352
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=`order`, columns={order_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6fd77352
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Order
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5109e8cf]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3f672204]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78b41097]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _orders_user_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6fd77352
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Order
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.Order.purchases, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.purchases)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Order.purchases.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [OPTIMISTIC_FORCE_INCREMENT]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_ from `order` order0_ where order0_.order_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_MERGE on entity ro.estore.model.entitiy.Order: select order0_.order_id as order_id1_1_1_, order0_.address_id as address_2_1_1_, purchases1_.order_id as order_id4_3_3_, purchases1_.purchase_id as purchase1_3_3_, purchases1_.purchase_id as purchase1_3_0_, purchases1_.product_id as product_3_3_0_, purchases1_.quantity as quantity2_3_0_ from `order` order0_ left outer join purchase purchases1_ on order0_.order_id=purchases1_.order_id where order0_.order_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_REFRESH on entity ro.estore.model.entitiy.Order: select order0_.order_id as order_id1_1_1_, order0_.address_id as address_2_1_1_, purchases1_.order_id as order_id4_3_3_, purchases1_.purchase_id as purchase1_3_3_, purchases1_.purchase_id as purchase1_3_0_, purchases1_.product_id as product_3_3_0_, purchases1_.quantity as quantity2_3_0_ from `order` order0_ left outer join purchase purchases1_ on order0_.order_id=purchases1_.order_id where order0_.order_id=?
 [main] DEBUG entity.AbstractEntityPersister - Static SQL for entity: ro.estore.model.entitiy.User
 [main] DEBUG entity.AbstractEntityPersister -  Version select: select user_id from user where user_id =?
 [main] DEBUG entity.AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.password as password2_4_, user_.user_profile_id as user_pro4_4_, user_.username as username3_4_ from user user_ where user_.user_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Insert 0: insert into user (password, user_profile_id, username, user_id) values (?, ?, ?, ?)
 [main] DEBUG logging.DelegatingBasicLogger -  Update 0: update user set password=?, user_profile_id=?, username=? where user_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Delete 0: delete from user where user_id=?
 [main] DEBUG entity.AbstractEntityPersister -  Identity insert: insert into user (password, user_profile_id, username) values (?, ?, ?)
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.User
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c2db130]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@327c7bea
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user, columns={user_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@327c7bea
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.User
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@348d18a3]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c65860d]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=password, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=password, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d000e80]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@7cf283e1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .... Registering AssociationKey : AssociationKey(table=user, columns={user_profile_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@7cf283e1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting entity identifier : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.addresses
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20e6c4dc]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60737b23]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.emailAddress
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=emailAddress, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=emailAddress, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.phoneNumber
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=phoneNumber, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=phoneNumber, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.surname
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@7cf283e1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@327c7bea
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.User
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.User.orders, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.User.orders.<elements>)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.User.userProfile)
             - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.UserProfile.addresses, querySpaceUid=<gen:4>, path=ro.estore.model.entitiy.User.userProfile.addresses)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:5>, path=ro.estore.model.entitiy.User.userProfile.addresses.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}
          - JOIN (JoinDefinedByMetadata(userProfile)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=ro.estore.model.entitiy.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_5_1_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [NONE]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.User
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d2a1da3]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@252f626c
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user, columns={user_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@252f626c
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.User
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@33f98231]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48284d0e]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=password, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=password, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@557286ad]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@b10a26d
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .... Registering AssociationKey : AssociationKey(table=user, columns={user_profile_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@b10a26d
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting entity identifier : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.addresses
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@74075134]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e4d2287]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.emailAddress
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=emailAddress, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=emailAddress, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.phoneNumber
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=phoneNumber, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=phoneNumber, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.surname
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@b10a26d
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@252f626c
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.User
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.User.orders, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.User.orders.<elements>)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.User.userProfile)
             - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.UserProfile.addresses, querySpaceUid=<gen:4>, path=ro.estore.model.entitiy.User.userProfile.addresses)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:5>, path=ro.estore.model.entitiy.User.userProfile.addresses.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}
          - JOIN (JoinDefinedByMetadata(userProfile)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=ro.estore.model.entitiy.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_5_1_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [READ]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.User
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f4b840d]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@31464a43
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user, columns={user_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@31464a43
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.User
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f8633ae]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68c87fc3]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=password, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=password, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bc0f53b]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@31464a43
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.User
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.User.orders, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.User.orders.<elements>)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.User.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [UPGRADE]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_ from user user0_ where user0_.user_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.User
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8d7b252]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4682eba5
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user, columns={user_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4682eba5
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.User
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6d9fb2d1]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61fafb74]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=password, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=password, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@540a903b]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4682eba5
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.User
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.User.orders, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.User.orders.<elements>)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.User.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [UPGRADE_NOWAIT]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_ from user user0_ where user0_.user_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.User
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58496dc]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@151db587
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user, columns={user_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@151db587
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.User
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@238acd0b]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23811a09]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=password, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=password, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2125ad3]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@151db587
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.User
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.User.orders, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.User.orders.<elements>)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.User.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [UPGRADE_SKIPLOCKED]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_ from user user0_ where user0_.user_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.User
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a5b769b]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@f4c0e4e
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user, columns={user_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@f4c0e4e
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.User
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@24361cfc]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34e20e6b]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=password, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=password, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15ac59c2]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@f4c0e4e
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.User
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.User.orders, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.User.orders.<elements>)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.User.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [FORCE]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_ from user user0_ where user0_.user_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.User
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a7d1b47]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6eb82908
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user, columns={user_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6eb82908
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.User
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4a8df3e2]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d98d138]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=password, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=password, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f2d52ef]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6eb82908
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.User
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.User.orders, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.User.orders.<elements>)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.User.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [PESSIMISTIC_READ]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_ from user user0_ where user0_.user_id=? lock in share mode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.User
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f2ce6b]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@25c53f74
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user, columns={user_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@25c53f74
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.User
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e2f3be5]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bd0b0e5]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=password, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=password, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dc7b462]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@25c53f74
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.User
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.User.orders, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.User.orders.<elements>)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.User.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [PESSIMISTIC_WRITE]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_ from user user0_ where user0_.user_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.User
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f51431]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@26a2f7f9
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user, columns={user_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@26a2f7f9
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.User
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@38eb2c50]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8bffb8b]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=password, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=password, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21422231]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@26a2f7f9
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.User
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.User.orders, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.User.orders.<elements>)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.User.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_ from user user0_ where user0_.user_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.User
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10ee04df]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7186333e
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user, columns={user_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7186333e
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.User
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@692fd26]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36f1046f]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=password, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=password, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56d93692]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7186333e
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.User
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.User.orders, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.User.orders.<elements>)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.User.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [OPTIMISTIC]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_ from user user0_ where user0_.user_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.User
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1686f0b4]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@76c548f
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user, columns={user_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@76c548f
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.User
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3900fa71]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26722665]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=password, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=password, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d0614f]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@76c548f
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.User
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.User.orders, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.User.orders.<elements>)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.User.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_ from user user0_ where user0_.user_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_MERGE on entity ro.estore.model.entitiy.User: select user0_.user_id as user_id1_4_2_, user0_.password as password2_4_2_, user0_.user_profile_id as user_pro4_4_2_, user0_.username as username3_4_2_, orders1_.user_id as user_id3_1_4_, orders1_.order_id as order_id1_1_4_, orders1_.order_id as order_id1_1_0_, orders1_.address_id as address_2_1_0_, userprofil2_.user_profile_id as user_pro1_5_1_, userprofil2_.email_address as email_ad2_5_1_, userprofil2_.name as name3_5_1_, userprofil2_.phone_number as phone_nu4_5_1_, userprofil2_.surname as surname5_5_1_ from user user0_ left outer join `order` orders1_ on user0_.user_id=orders1_.user_id inner join user_profile userprofil2_ on user0_.user_profile_id=userprofil2_.user_profile_id where user0_.user_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_REFRESH on entity ro.estore.model.entitiy.User: select user0_.user_id as user_id1_4_2_, user0_.password as password2_4_2_, user0_.user_profile_id as user_pro4_4_2_, user0_.username as username3_4_2_, orders1_.user_id as user_id3_1_4_, orders1_.order_id as order_id1_1_4_, orders1_.order_id as order_id1_1_0_, orders1_.address_id as address_2_1_0_, userprofil2_.user_profile_id as user_pro1_5_1_, userprofil2_.email_address as email_ad2_5_1_, userprofil2_.name as name3_5_1_, userprofil2_.phone_number as phone_nu4_5_1_, userprofil2_.surname as surname5_5_1_ from user user0_ left outer join `order` orders1_ on user0_.user_id=orders1_.user_id inner join user_profile userprofil2_ on user0_.user_profile_id=userprofil2_.user_profile_id where user0_.user_id=?
 [main] DEBUG entity.AbstractEntityPersister - Static SQL for entity: ro.estore.model.entitiy.Address
 [main] DEBUG entity.AbstractEntityPersister -  Version select: select address_id from address where address_id =?
 [main] DEBUG entity.AbstractEntityPersister -  Snapshot select: select address_.address_id, address_.address_line_1 as address_2_0_, address_.address_line_2 as address_3_0_, address_.address_name as address_4_0_, address_.city as city5_0_, address_.postcode as postcode6_0_ from address address_ where address_.address_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Insert 0: insert into address (address_line_1, address_line_2, address_name, city, postcode, address_id) values (?, ?, ?, ?, ?, ?)
 [main] DEBUG logging.DelegatingBasicLogger -  Update 0: update address set address_line_1=?, address_line_2=?, address_name=?, city=?, postcode=? where address_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Delete 0: delete from address where address_id=?
 [main] DEBUG entity.AbstractEntityPersister -  Identity insert: insert into address (address_line_1, address_line_2, address_name, city, postcode) values (?, ?, ?, ?, ?)
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@627d8516]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5c10285a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=address, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5c10285a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Address
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine1, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine1, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine2, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine2, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressName, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressName, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=city, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5c10285a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Address
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [NONE]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b667cb3]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6f38a289
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=address, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6f38a289
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Address
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine1, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine1, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine2, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine2, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressName, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressName, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=city, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6f38a289
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Address
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [READ]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61e3cf4d]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3cec79d3
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=address, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3cec79d3
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Address
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine1, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine1, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine2, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine2, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressName, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressName, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=city, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3cec79d3
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Address
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [UPGRADE]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64b70919]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4e31c3ec
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=address, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4e31c3ec
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Address
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine1, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine1, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine2, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine2, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressName, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressName, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=city, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4e31c3ec
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Address
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [UPGRADE_NOWAIT]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3157e4c0]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6eaa21d8
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=address, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6eaa21d8
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Address
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine1, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine1, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine2, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine2, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressName, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressName, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=city, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6eaa21d8
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Address
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [UPGRADE_SKIPLOCKED]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@328902d5]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@72e789cb
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=address, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@72e789cb
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Address
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine1, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine1, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine2, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine2, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressName, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressName, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=city, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@72e789cb
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Address
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [FORCE]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c1812b3]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@43034809
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=address, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@43034809
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Address
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine1, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine1, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine2, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine2, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressName, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressName, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=city, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@43034809
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Address
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [PESSIMISTIC_READ]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=? lock in share mode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39e67516]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@77010a30
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=address, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@77010a30
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Address
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine1, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine1, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine2, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine2, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressName, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressName, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=city, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@77010a30
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Address
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [PESSIMISTIC_WRITE]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bb003e9]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@12aa4996
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=address, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@12aa4996
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Address
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine1, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine1, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine2, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine2, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressName, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressName, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=city, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@12aa4996
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Address
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [PESSIMISTIC_FORCE_INCREMENT]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18eec010]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@67c119b7
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=address, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@67c119b7
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Address
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine1, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine1, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine2, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine2, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressName, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressName, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=city, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@67c119b7
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Address
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [OPTIMISTIC]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ca5f1ed]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6c03fb16
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=address, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6c03fb16
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Address
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine1, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine1, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine2, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine2, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressName, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressName, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=city, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6c03fb16
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Address
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [OPTIMISTIC_FORCE_INCREMENT]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_MERGE on entity ro.estore.model.entitiy.Address: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_REFRESH on entity ro.estore.model.entitiy.Address: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root collection : ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e008f36]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50acf55d]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@3cae7b8b
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Registering AssociationKey : AssociationKey(table=address, columns={user_profile_id}) -> null
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting collection element graph : ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@f4cfd90
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Address
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine1, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine1, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine2, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine2, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressName, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressName, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=city, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@f4cfd90
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished collection element graph : ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@3cae7b8b
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root collection : ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(collection=ro.estore.model.entitiy.UserProfile.addresses)
    - Returns
       - CollectionReturnImpl(collection=ro.estore.model.entitiy.UserProfile.addresses, querySpaceUid=<gen:0>, path=[ro.estore.model.entitiy.UserProfile.addresses])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=[ro.estore.model.entitiy.UserProfile.addresses].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ro.estore.model.entitiy.UserProfile.addresses)
          - SQL table alias mapping - addresses0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro7_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - address_1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ro.estore.model.entitiy.Address)
                - SQL table alias mapping - addresses0_
                - alias suffix - 1_
                - suffixed key columns - {address_1_0_1_}

 [main] DEBUG plan.CollectionLoader - Static select for collection ro.estore.model.entitiy.UserProfile.addresses: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root collection : ro.estore.model.entitiy.User.orders
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@71dfcf21]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b965857]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@61f80d55
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Registering AssociationKey : AssociationKey(table=`order`, columns={user_id}) -> null
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting collection element graph : ro.estore.model.entitiy.User.orders
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@27a7ef08
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Order
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@280e8a1a]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@11e33bac
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .... Registering AssociationKey : AssociationKey(table=`order`, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@11e33bac
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting entity identifier : ro.estore.model.entitiy.Address
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.addressLine1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=addressLine1, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=addressLine1, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.addressLine2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=addressLine2, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=addressLine2, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.addressName
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=addressName, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=addressName, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.city
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=city, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=city, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.postcode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@11e33bac
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@30501e60]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@289778cd]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _orders_user_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@27a7ef08
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished collection element graph : ro.estore.model.entitiy.User.orders
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@61f80d55
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root collection : ro.estore.model.entitiy.User.orders
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(collection=ro.estore.model.entitiy.User.orders)
    - Returns
       - CollectionReturnImpl(collection=ro.estore.model.entitiy.User.orders, querySpaceUid=<gen:0>, path=[ro.estore.model.entitiy.User.orders])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:1>, path=[ro.estore.model.entitiy.User.orders].<elements>)
             - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:2>, path=[ro.estore.model.entitiy.User.orders].<elements>.address)
             - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.Order.purchases, querySpaceUid=<gen:3>, path=[ro.estore.model.entitiy.User.orders].<elements>.purchases)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:4>, path=[ro.estore.model.entitiy.User.orders].<elements>.purchases.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ro.estore.model.entitiy.User.orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - order_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ro.estore.model.entitiy.Order)
                - SQL table alias mapping - orders0_
                - alias suffix - 1_
                - suffixed key columns - {order_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(address)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ro.estore.model.entitiy.Address)
                      - SQL table alias mapping - address1_
                      - alias suffix - 2_
                      - suffixed key columns - {address_1_0_2_}

 [main] DEBUG plan.CollectionLoader - Static select for collection ro.estore.model.entitiy.User.orders: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root collection : ro.estore.model.entitiy.Order.purchases
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7495699f]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c2312fa]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@4cb0a000
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Registering AssociationKey : AssociationKey(table=purchase, columns={order_id}) -> null
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting collection element graph : ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@5ff2e84b
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Purchase
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74abbb]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@64a4dd8d
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .... Registering AssociationKey : AssociationKey(table=purchase, columns={product_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@64a4dd8d
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting entity identifier : ro.estore.model.entitiy.Product
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.brand
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=brand, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=brand, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.description
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=description, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=description, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.price
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=price, type=double [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=price, type=double [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.stock
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@64a4dd8d
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=quantity, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=quantity, type=integer [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _purchases_order_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@5ff2e84b
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished collection element graph : ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@4cb0a000
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root collection : ro.estore.model.entitiy.Order.purchases
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(collection=ro.estore.model.entitiy.Order.purchases)
    - Returns
       - CollectionReturnImpl(collection=ro.estore.model.entitiy.Order.purchases, querySpaceUid=<gen:0>, path=[ro.estore.model.entitiy.Order.purchases])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:1>, path=[ro.estore.model.entitiy.Order.purchases].<elements>)
             - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:2>, path=[ro.estore.model.entitiy.Order.purchases].<elements>.product)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ro.estore.model.entitiy.Order.purchases)
          - SQL table alias mapping - purchases0_
          - alias suffix - 0_
          - suffixed key columns - {order_id4_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - purchase1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ro.estore.model.entitiy.Purchase)
                - SQL table alias mapping - purchases0_
                - alias suffix - 1_
                - suffixed key columns - {purchase1_3_1_}
                - JOIN (JoinDefinedByMetadata(product)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ro.estore.model.entitiy.Product)
                      - SQL table alias mapping - product1_
                      - alias suffix - 2_
                      - suffixed key columns - {product_1_2_2_}

 [main] DEBUG plan.CollectionLoader - Static select for collection ro.estore.model.entitiy.Order.purchases: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=?
 [main] TRACE internal.MetadataContext - Wrapping up metadata context...
 [main] TRACE internal.MetadataContext - Starting entity [ro.estore.model.entitiy.Product]
 [main] TRACE internal.AttributeFactory - Building identifier attribute [ro.estore.model.entitiy.Product.id]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [id]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.Long ro.estore.model.entitiy.Product.id]
 [main] TRACE internal.AttributeFactory -     Determined type [name=long, class=org.hibernate.type.LongType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.Product.brand]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [brand]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.String ro.estore.model.entitiy.Product.brand]
 [main] TRACE internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.StringType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.Product.description]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [description]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.String ro.estore.model.entitiy.Product.description]
 [main] TRACE internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.StringType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.Product.name]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [name]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.String ro.estore.model.entitiy.Product.name]
 [main] TRACE internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.StringType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.Product.price]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [price]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.Double ro.estore.model.entitiy.Product.price]
 [main] TRACE internal.AttributeFactory -     Determined type [name=double, class=org.hibernate.type.DoubleType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.Product.stock]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [stock]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.Integer ro.estore.model.entitiy.Product.stock]
 [main] TRACE internal.AttributeFactory -     Determined type [name=integer, class=org.hibernate.type.IntegerType]
 [main] TRACE internal.MetadataContext - Completed entity [ro.estore.model.entitiy.Product]
 [main] TRACE internal.MetadataContext - Starting entity [ro.estore.model.entitiy.UserProfile]
 [main] TRACE internal.AttributeFactory - Building identifier attribute [ro.estore.model.entitiy.UserProfile.id]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [id]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.Long ro.estore.model.entitiy.UserProfile.id]
 [main] TRACE internal.AttributeFactory -     Determined type [name=long, class=org.hibernate.type.LongType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.UserProfile.addresses]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [addresses]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.util.List ro.estore.model.entitiy.UserProfile.addresses]
 [main] TRACE internal.AttributeFactory -     Determined type [name=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses), class=org.hibernate.type.BagType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.UserProfile.emailAddress]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [emailAddress]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.String ro.estore.model.entitiy.UserProfile.emailAddress]
 [main] TRACE internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.StringType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.UserProfile.name]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [name]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.String ro.estore.model.entitiy.UserProfile.name]
 [main] TRACE internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.StringType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.UserProfile.phoneNumber]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [phoneNumber]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.String ro.estore.model.entitiy.UserProfile.phoneNumber]
 [main] TRACE internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.StringType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.UserProfile.surname]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [surname]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.String ro.estore.model.entitiy.UserProfile.surname]
 [main] TRACE internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.StringType]
 [main] TRACE internal.MetadataContext - Completed entity [ro.estore.model.entitiy.UserProfile]
 [main] TRACE internal.MetadataContext - Starting entity [ro.estore.model.entitiy.Purchase]
 [main] TRACE internal.AttributeFactory - Building identifier attribute [ro.estore.model.entitiy.Purchase.id]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [id]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.Long ro.estore.model.entitiy.Purchase.id]
 [main] TRACE internal.AttributeFactory -     Determined type [name=long, class=org.hibernate.type.LongType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.Purchase.product]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [product]
 [main] TRACE internal.AttributeFactory -     Determined member [private ro.estore.model.entitiy.Product ro.estore.model.entitiy.Purchase.product]
 [main] TRACE internal.AttributeFactory -     Determined type [name=ro.estore.model.entitiy.Product, class=org.hibernate.type.ManyToOneType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.Purchase.quantity]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [quantity]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.Integer ro.estore.model.entitiy.Purchase.quantity]
 [main] TRACE internal.AttributeFactory -     Determined type [name=integer, class=org.hibernate.type.IntegerType]
 [main] TRACE internal.AttributeFactory - Skipping synthetic property ro.estore.model.entitiy.Purchase(_purchases_order_idBackref)
 [main] TRACE internal.MetadataContext - Completed entity [ro.estore.model.entitiy.Purchase]
 [main] TRACE internal.MetadataContext - Starting entity [ro.estore.model.entitiy.Order]
 [main] TRACE internal.AttributeFactory - Building identifier attribute [ro.estore.model.entitiy.Order.id]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [id]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.Long ro.estore.model.entitiy.Order.id]
 [main] TRACE internal.AttributeFactory -     Determined type [name=long, class=org.hibernate.type.LongType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.Order.address]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [address]
 [main] TRACE internal.AttributeFactory -     Determined member [private ro.estore.model.entitiy.Address ro.estore.model.entitiy.Order.address]
 [main] TRACE internal.AttributeFactory -     Determined type [name=ro.estore.model.entitiy.Address, class=org.hibernate.type.ManyToOneType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.Order.purchases]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [purchases]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.util.List ro.estore.model.entitiy.Order.purchases]
 [main] TRACE internal.AttributeFactory -     Determined type [name=java.util.Collection(ro.estore.model.entitiy.Order.purchases), class=org.hibernate.type.BagType]
 [main] TRACE internal.AttributeFactory - Skipping synthetic property ro.estore.model.entitiy.Order(_orders_user_idBackref)
 [main] TRACE internal.MetadataContext - Completed entity [ro.estore.model.entitiy.Order]
 [main] TRACE internal.MetadataContext - Starting entity [ro.estore.model.entitiy.User]
 [main] TRACE internal.AttributeFactory - Building identifier attribute [ro.estore.model.entitiy.User.id]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [id]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.Long ro.estore.model.entitiy.User.id]
 [main] TRACE internal.AttributeFactory -     Determined type [name=long, class=org.hibernate.type.LongType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.User.orders]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [orders]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.util.List ro.estore.model.entitiy.User.orders]
 [main] TRACE internal.AttributeFactory -     Determined type [name=java.util.Collection(ro.estore.model.entitiy.User.orders), class=org.hibernate.type.BagType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.User.password]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [password]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.String ro.estore.model.entitiy.User.password]
 [main] TRACE internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.StringType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.User.userProfile]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [userProfile]
 [main] TRACE internal.AttributeFactory -     Determined member [private ro.estore.model.entitiy.UserProfile ro.estore.model.entitiy.User.userProfile]
 [main] TRACE internal.AttributeFactory -     Determined type [name=ro.estore.model.entitiy.UserProfile, class=org.hibernate.type.ManyToOneType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.User.username]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [username]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.String ro.estore.model.entitiy.User.username]
 [main] TRACE internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.StringType]
 [main] TRACE internal.MetadataContext - Completed entity [ro.estore.model.entitiy.User]
 [main] TRACE internal.MetadataContext - Starting entity [ro.estore.model.entitiy.Address]
 [main] TRACE internal.AttributeFactory - Building identifier attribute [ro.estore.model.entitiy.Address.id]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [id]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.Long ro.estore.model.entitiy.Address.id]
 [main] TRACE internal.AttributeFactory -     Determined type [name=long, class=org.hibernate.type.LongType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.Address.addressLine1]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [addressLine1]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.String ro.estore.model.entitiy.Address.addressLine1]
 [main] TRACE internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.StringType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.Address.addressLine2]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [addressLine2]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.String ro.estore.model.entitiy.Address.addressLine2]
 [main] TRACE internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.StringType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.Address.addressName]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [addressName]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.String ro.estore.model.entitiy.Address.addressName]
 [main] TRACE internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.StringType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.Address.city]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [city]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.String ro.estore.model.entitiy.Address.city]
 [main] TRACE internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.StringType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.Address.postcode]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [postcode]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.String ro.estore.model.entitiy.Address.postcode]
 [main] TRACE internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.StringType]
 [main] TRACE internal.MetadataContext - Completed entity [ro.estore.model.entitiy.Address]
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.tool.schema.spi.SchemaManagementTool]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [address]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [address] in lower case for use in DatabaseMetaData
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [null]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [address]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [address] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [address_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [address_id] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [address]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [address] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [address_line_1]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [address_line_1] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_line_1]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [address]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [address] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [address_line_2]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [address_line_2] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_line_2]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [address]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [address] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [address_name]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [address_name] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_name]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [address]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [address] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [city]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [city] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [city]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [address]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [address] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [postcode]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [postcode] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [postcode]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [address]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [address] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user_profile_id] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [`order`]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering quoted identifier [`order`] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [`order`]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [null]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [`order`]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering quoted identifier [`order`] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [order_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [order_id] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [order_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [`order`]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering quoted identifier [`order`] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [address_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [address_id] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [`order`]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering quoted identifier [`order`] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user_id] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [product]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [product] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [product]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [null]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [product]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [product] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [product_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [product_id] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [product_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [product]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [product] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [brand]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [brand] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [brand]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [product]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [product] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [description]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [description] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [description]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [product]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [product] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [name]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [name] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [name]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [product]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [product] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [price]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [price] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [price]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [product]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [product] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [stock]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [stock] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [stock]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [purchase]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [purchase] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [purchase]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [null]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [purchase]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [purchase] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [purchase_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [purchase_id] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [purchase_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [purchase]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [purchase] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [quantity]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [quantity] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [quantity]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [purchase]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [purchase] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [product_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [product_id] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [product_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [purchase]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [purchase] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [order_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [order_id] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [order_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [null]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user_id] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [password]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [password] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [password]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [username]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [username] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [username]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user_profile_id] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user_profile]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user_profile] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [null]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user_profile]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user_profile] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user_profile_id] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user_profile]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user_profile] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [email_address]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [email_address] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [email_address]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user_profile]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user_profile] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [name]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [name] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [name]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user_profile]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user_profile] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [phone_number]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [phone_number] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [phone_number]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user_profile]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user_profile] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [surname]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [surname] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [surname]
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform]
 [main] DEBUG internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformResolver]
 [main] DEBUG internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
 [main] DEBUG internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
 [main] DEBUG spi.NamedQueryRepository - Checking 0 named HQL queries
 [main] DEBUG spi.NamedQueryRepository - Checking 0 named SQL queries
 [main] DEBUG internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@55e3d6c3
 [main] DEBUG internal.SessionFactoryRegistry - Registering SessionFactory: 1a1f60c9-67fb-4967-89fc-12090467af1d (<unnamed>)
 [main] DEBUG internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
 [main] INFO  jpa.AbstractEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'entityManagerFactory'
 [main] DEBUG support.DefaultListableBeanFactory - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4d826d77: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,jpaHibernateTestConfig,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor,addressConverter,orderConverter,productConverter,purchaseConverter,userConverter,userProfileConverter,addressRepositoryJpaImpl,orderRepositoryJpaImpl,productRepositoryJpaImpl,purchaseRepositoryJpaImpl,userProfileRepositoryJpaImpl,userRepositoryJpaImpl,addressServiceImpl,orderServiceImpl,productServiceImpl,purchaseServiceImpl,userProfileServiceImpl,userServiceImpl,loggingAspect,testUtils,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,org.springframework.transaction.config.internalTransactionalEventListenerFactory,ro.estore.model.config.RootJpaHibernateConfig,transactionManager,dataSource,entityManagerFactory,org.springframework.aop.config.internalAutoProxyCreator]; root of factory hierarchy
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.context.event.internalEventListenerProcessor' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.context.event.EventListenerMethodProcessor]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.context.event.EventListenerMethodProcessor]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'applicationContext' of type [org.springframework.context.ApplicationContext]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.context.event.internalEventListenerFactory' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.context.event.DefaultEventListenerFactory]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.context.event.DefaultEventListenerFactory]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'order' of type [int]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'jpaHibernateTestConfig'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'jpaHibernateTestConfig'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'jpaHibernateTestConfig' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.model.config.JpaHibernateTestConfig$$EnhancerBySpringCGLIB$$f8042b42]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.model.config.JpaHibernateTestConfig$$EnhancerBySpringCGLIB$$f8042b42]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'beanFactory' of type [org.springframework.beans.factory.BeanFactory]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'jpaHibernateTestConfig' with 0 common interceptors and 3 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.config.JpaHibernateTestConfig$$EnhancerBySpringCGLIB$$f8042b42@3effd4f3]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public abstract void org.springframework.beans.factory.BeanFactoryAware.setBeanFactory(org.springframework.beans.factory.BeanFactory) throws org.springframework.beans.BeansException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'jpaHibernateTestConfig'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'addressConverter'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'addressConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'addressConverter' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.converter.AddressConverter]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.converter.AddressConverter]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'addressConverter' with 0 common interceptors and 3 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.converter.AddressConverter@6f4ade6e]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.domain.converter.AddressConverter.toDto(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.AddressDTO ro.estore.domain.converter.AddressConverter.toDto(ro.estore.model.entitiy.Address)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.domain.converter.AddressConverter.toEntity(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Address ro.estore.domain.converter.AddressConverter.toEntity(ro.estore.domain.object.AddressDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'addressConverter'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'orderConverter'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'orderConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.converter.OrderConverter]: AutowiredFieldElement for private ro.estore.domain.converter.AddressConverter ro.estore.domain.converter.OrderConverter.addressConverter
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.converter.OrderConverter]: AutowiredFieldElement for private ro.estore.domain.converter.PurchaseConverter ro.estore.domain.converter.OrderConverter.purchaseConverter
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'orderConverter' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.converter.OrderConverter]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.converter.OrderConverter]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'orderConverter': AutowiredFieldElement for private ro.estore.domain.converter.AddressConverter ro.estore.domain.converter.OrderConverter.addressConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'orderConverter' to bean named 'addressConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'orderConverter': AutowiredFieldElement for private ro.estore.domain.converter.PurchaseConverter ro.estore.domain.converter.OrderConverter.purchaseConverter
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'purchaseConverter'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'purchaseConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.converter.PurchaseConverter]: AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.converter.PurchaseConverter.productConverter
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'purchaseConverter' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.converter.PurchaseConverter]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.converter.PurchaseConverter]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'purchaseConverter': AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.converter.PurchaseConverter.productConverter
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'productConverter'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'productConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'productConverter' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.converter.ProductConverter]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.converter.ProductConverter]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'productConverter' with 0 common interceptors and 3 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.converter.ProductConverter@624a24f6]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.domain.converter.ProductConverter.toDto(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.ProductDTO ro.estore.domain.converter.ProductConverter.toDto(ro.estore.model.entitiy.Product)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.domain.converter.ProductConverter.toEntity(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Product ro.estore.domain.converter.ProductConverter.toEntity(ro.estore.domain.object.ProductDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'productConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'purchaseConverter' to bean named 'productConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'purchaseConverter' with 0 common interceptors and 3 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.converter.PurchaseConverter@4f453e63]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.domain.converter.PurchaseConverter.toDto(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(ro.estore.model.entitiy.Purchase)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.domain.converter.PurchaseConverter.toEntity(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(ro.estore.domain.object.PurchaseDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'purchaseConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'orderConverter' to bean named 'purchaseConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'orderConverter' with 0 common interceptors and 3 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.converter.OrderConverter@2f98635e]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.domain.converter.OrderConverter.toDto(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.OrderDTO ro.estore.domain.converter.OrderConverter.toDto(ro.estore.model.entitiy.Order)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.domain.converter.OrderConverter.toEntity(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Order ro.estore.domain.converter.OrderConverter.toEntity(ro.estore.domain.object.OrderDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'orderConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseConverter'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'userConverter'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'userConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.converter.UserConverter]: AutowiredFieldElement for private ro.estore.domain.converter.OrderConverter ro.estore.domain.converter.UserConverter.orderConverter
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.converter.UserConverter]: AutowiredFieldElement for private ro.estore.domain.converter.UserProfileConverter ro.estore.domain.converter.UserConverter.userProfileConverter
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'userConverter' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.converter.UserConverter]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.converter.UserConverter]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userConverter': AutowiredFieldElement for private ro.estore.domain.converter.OrderConverter ro.estore.domain.converter.UserConverter.orderConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'userConverter' to bean named 'orderConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userConverter': AutowiredFieldElement for private ro.estore.domain.converter.UserProfileConverter ro.estore.domain.converter.UserConverter.userProfileConverter
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'userProfileConverter'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'userProfileConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.converter.UserProfileConverter]: AutowiredFieldElement for private ro.estore.domain.converter.AddressConverter ro.estore.domain.converter.UserProfileConverter.addressConverter
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'userProfileConverter' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.converter.UserProfileConverter]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.converter.UserProfileConverter]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userProfileConverter': AutowiredFieldElement for private ro.estore.domain.converter.AddressConverter ro.estore.domain.converter.UserProfileConverter.addressConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'userProfileConverter' to bean named 'addressConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'userProfileConverter' with 0 common interceptors and 3 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.converter.UserProfileConverter@6b2e0f78]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.domain.converter.UserProfileConverter.toDto(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(ro.estore.model.entitiy.UserProfile)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.domain.converter.UserProfileConverter.toEntity(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.UserProfile ro.estore.domain.converter.UserProfileConverter.toEntity(ro.estore.domain.object.UserProfileDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'userProfileConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'userConverter' to bean named 'userProfileConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'userConverter' with 0 common interceptors and 3 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.converter.UserConverter@2015b2cd]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.domain.converter.UserConverter.toDto(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.UserDTO ro.estore.domain.converter.UserConverter.toDto(ro.estore.model.entitiy.User)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.domain.converter.UserConverter.toEntity(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.User ro.estore.domain.converter.UserConverter.toEntity(ro.estore.domain.object.UserDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'userConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileConverter'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'addressRepositoryJpaImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'addressRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.model.repository.impl.AddressRepositoryJpaImpl]: PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'addressRepositoryJpaImpl' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.model.repository.impl.AddressRepositoryJpaImpl]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.model.repository.impl.AddressRepositoryJpaImpl]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'addressRepositoryJpaImpl': PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'addressRepositoryJpaImpl' with 0 common interceptors and 3 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.AddressRepositoryJpaImpl@47447ccf]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Address ro.estore.model.repository.impl.AddressRepositoryJpaImpl.findById(ro.estore.model.entitiy.Address)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.AddressRepositoryJpaImpl.findById(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Integer ro.estore.model.repository.impl.GenericRepositoryJpaImpl.count()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(java.io.Serializable)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findAll()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'addressRepositoryJpaImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'orderRepositoryJpaImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'orderRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.model.repository.impl.OrderRepositoryJpaImpl]: PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'orderRepositoryJpaImpl' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.model.repository.impl.OrderRepositoryJpaImpl]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.model.repository.impl.OrderRepositoryJpaImpl]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'orderRepositoryJpaImpl': PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'orderRepositoryJpaImpl' with 0 common interceptors and 3 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.OrderRepositoryJpaImpl@67d86804]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Order ro.estore.model.repository.impl.OrderRepositoryJpaImpl.findById(ro.estore.model.entitiy.Order)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.OrderRepositoryJpaImpl.findById(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Integer ro.estore.model.repository.impl.GenericRepositoryJpaImpl.count()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(java.io.Serializable)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findAll()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'orderRepositoryJpaImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'productRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.model.repository.impl.ProductRepositoryJpaImpl]: PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'productRepositoryJpaImpl' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.model.repository.impl.ProductRepositoryJpaImpl]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.model.repository.impl.ProductRepositoryJpaImpl]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'productRepositoryJpaImpl': PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'productRepositoryJpaImpl' with 0 common interceptors and 3 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.ProductRepositoryJpaImpl@6d469831]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.ProductRepositoryJpaImpl.findById(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Product ro.estore.model.repository.impl.ProductRepositoryJpaImpl.findById(ro.estore.model.entitiy.Product)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Product ro.estore.model.repository.impl.ProductRepositoryJpaImpl.findMatching(ro.estore.model.entitiy.Product)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.model.repository.impl.ProductRepositoryJpaImpl.findByFilter(ro.estore.domain.filter.SearchProductFilter)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Integer ro.estore.model.repository.impl.GenericRepositoryJpaImpl.count()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(java.io.Serializable)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findAll()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'productRepositoryJpaImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'purchaseRepositoryJpaImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'purchaseRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImpl]: PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'purchaseRepositoryJpaImpl' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImpl]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImpl]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'purchaseRepositoryJpaImpl': PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'purchaseRepositoryJpaImpl' with 0 common interceptors and 3 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.PurchaseRepositoryJpaImpl@b174a73]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Purchase ro.estore.model.repository.impl.PurchaseRepositoryJpaImpl.findById(ro.estore.model.entitiy.Purchase)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.PurchaseRepositoryJpaImpl.findById(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Integer ro.estore.model.repository.impl.GenericRepositoryJpaImpl.count()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(java.io.Serializable)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findAll()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'purchaseRepositoryJpaImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'userProfileRepositoryJpaImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'userProfileRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImpl]: PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'userProfileRepositoryJpaImpl' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImpl]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImpl]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userProfileRepositoryJpaImpl': PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'userProfileRepositoryJpaImpl' with 0 common interceptors and 3 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserProfileRepositoryJpaImpl@327ed9f5]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.UserProfile ro.estore.model.repository.impl.UserProfileRepositoryJpaImpl.findById(ro.estore.model.entitiy.UserProfile)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.UserProfileRepositoryJpaImpl.findById(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Integer ro.estore.model.repository.impl.GenericRepositoryJpaImpl.count()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(java.io.Serializable)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findAll()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'userProfileRepositoryJpaImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'userRepositoryJpaImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'userRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.model.repository.impl.UserRepositoryJpaImpl]: PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'userRepositoryJpaImpl' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.model.repository.impl.UserRepositoryJpaImpl]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.model.repository.impl.UserRepositoryJpaImpl]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userRepositoryJpaImpl': PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'userRepositoryJpaImpl' with 0 common interceptors and 3 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserRepositoryJpaImpl@68b58644]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.UserRepositoryJpaImpl.findById(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findById(ro.estore.model.entitiy.User)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsername(java.lang.String)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsernameAndPassword(java.lang.String,java.lang.String)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Integer ro.estore.model.repository.impl.GenericRepositoryJpaImpl.count()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(java.io.Serializable)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findAll()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'userRepositoryJpaImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'addressServiceImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'addressServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.AddressServiceImpl]: AutowiredFieldElement for private ro.estore.model.repository.AddressRepository ro.estore.domain.service.impl.AddressServiceImpl.addressRepository
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.AddressServiceImpl]: AutowiredFieldElement for private ro.estore.domain.converter.AddressConverter ro.estore.domain.service.impl.AddressServiceImpl.addressConverter
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'addressServiceImpl' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.service.impl.AddressServiceImpl]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.service.impl.AddressServiceImpl]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'addressServiceImpl': AutowiredFieldElement for private ro.estore.model.repository.AddressRepository ro.estore.domain.service.impl.AddressServiceImpl.addressRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'addressServiceImpl' to bean named 'addressRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'addressServiceImpl': AutowiredFieldElement for private ro.estore.domain.converter.AddressConverter ro.estore.domain.service.impl.AddressServiceImpl.addressConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'addressServiceImpl' to bean named 'addressConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'addressServiceImpl' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.AddressServiceImpl@61e7bf2f]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.GenericEntityConverter ro.estore.domain.service.impl.AddressServiceImpl.getEntityConverter()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.AddressConverter ro.estore.domain.service.impl.AddressServiceImpl.getEntityConverter()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.GenericRepository ro.estore.domain.service.impl.AddressServiceImpl.getRepository()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.AddressRepository ro.estore.domain.service.impl.AddressServiceImpl.getRepository()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.GenericServiceImpl.remove(ro.estore.domain.object.DomainDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Integer ro.estore.domain.service.impl.GenericServiceImpl.count()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImpl.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(ro.estore.domain.object.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.create(ro.estore.domain.object.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(java.io.Serializable)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.domain.service.impl.GenericServiceImpl.findAll()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'addressServiceImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'orderServiceImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'orderServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.OrderServiceImpl]: AutowiredFieldElement for private ro.estore.model.repository.OrderRepository ro.estore.domain.service.impl.OrderServiceImpl.orderRepository
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.OrderServiceImpl]: AutowiredFieldElement for private ro.estore.domain.converter.OrderConverter ro.estore.domain.service.impl.OrderServiceImpl.orderConverter
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'orderServiceImpl' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.service.impl.OrderServiceImpl]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.service.impl.OrderServiceImpl]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'orderServiceImpl': AutowiredFieldElement for private ro.estore.model.repository.OrderRepository ro.estore.domain.service.impl.OrderServiceImpl.orderRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'orderServiceImpl' to bean named 'orderRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'orderServiceImpl': AutowiredFieldElement for private ro.estore.domain.converter.OrderConverter ro.estore.domain.service.impl.OrderServiceImpl.orderConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'orderServiceImpl' to bean named 'orderConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'orderServiceImpl' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.OrderServiceImpl@7d5508e0]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.GenericEntityConverter ro.estore.domain.service.impl.OrderServiceImpl.getEntityConverter()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.OrderConverter ro.estore.domain.service.impl.OrderServiceImpl.getEntityConverter()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.GenericRepository ro.estore.domain.service.impl.OrderServiceImpl.getRepository()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.OrderRepository ro.estore.domain.service.impl.OrderServiceImpl.getRepository()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.GenericServiceImpl.remove(ro.estore.domain.object.DomainDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Integer ro.estore.domain.service.impl.GenericServiceImpl.count()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImpl.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(ro.estore.domain.object.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.create(ro.estore.domain.object.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(java.io.Serializable)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.domain.service.impl.GenericServiceImpl.findAll()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'orderServiceImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'productServiceImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'productServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.ProductServiceImpl]: AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.domain.service.impl.ProductServiceImpl.productRepository
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.ProductServiceImpl]: AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.service.impl.ProductServiceImpl.productConverter
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'productServiceImpl' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.service.impl.ProductServiceImpl]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.service.impl.ProductServiceImpl]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'productServiceImpl': AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.domain.service.impl.ProductServiceImpl.productRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'productServiceImpl' to bean named 'productRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'productServiceImpl': AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.service.impl.ProductServiceImpl.productConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'productServiceImpl' to bean named 'productConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'productServiceImpl' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.ProductServiceImpl@379ce046]
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.ProductDTO ro.estore.domain.service.impl.ProductServiceImpl.create(ro.estore.domain.object.ProductDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.ProductServiceImpl.create(ro.estore.domain.object.DomainDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.domain.service.impl.ProductServiceImpl.findByFilter(ro.estore.domain.filter.SearchProductFilter)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.GenericEntityConverter ro.estore.domain.service.impl.ProductServiceImpl.getEntityConverter()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.ProductConverter ro.estore.domain.service.impl.ProductServiceImpl.getEntityConverter()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.GenericRepository ro.estore.domain.service.impl.ProductServiceImpl.getRepository()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.ProductRepository ro.estore.domain.service.impl.ProductServiceImpl.getRepository()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.GenericServiceImpl.remove(ro.estore.domain.object.DomainDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Integer ro.estore.domain.service.impl.GenericServiceImpl.count()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImpl.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(ro.estore.domain.object.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(java.io.Serializable)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.domain.service.impl.GenericServiceImpl.findAll()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'productServiceImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'purchaseServiceImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'purchaseServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.PurchaseServiceImpl]: AutowiredFieldElement for private ro.estore.model.repository.PurchaseRepository ro.estore.domain.service.impl.PurchaseServiceImpl.purchaseRepository
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.PurchaseServiceImpl]: AutowiredFieldElement for private ro.estore.domain.converter.PurchaseConverter ro.estore.domain.service.impl.PurchaseServiceImpl.purchaseConverter
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'purchaseServiceImpl' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.service.impl.PurchaseServiceImpl]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.service.impl.PurchaseServiceImpl]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'purchaseServiceImpl': AutowiredFieldElement for private ro.estore.model.repository.PurchaseRepository ro.estore.domain.service.impl.PurchaseServiceImpl.purchaseRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'purchaseServiceImpl' to bean named 'purchaseRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'purchaseServiceImpl': AutowiredFieldElement for private ro.estore.domain.converter.PurchaseConverter ro.estore.domain.service.impl.PurchaseServiceImpl.purchaseConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'purchaseServiceImpl' to bean named 'purchaseConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'purchaseServiceImpl' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.PurchaseServiceImpl@244e619a]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.GenericEntityConverter ro.estore.domain.service.impl.PurchaseServiceImpl.getEntityConverter()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.PurchaseConverter ro.estore.domain.service.impl.PurchaseServiceImpl.getEntityConverter()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.GenericRepository ro.estore.domain.service.impl.PurchaseServiceImpl.getRepository()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.PurchaseRepository ro.estore.domain.service.impl.PurchaseServiceImpl.getRepository()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.GenericServiceImpl.remove(ro.estore.domain.object.DomainDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Integer ro.estore.domain.service.impl.GenericServiceImpl.count()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImpl.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(ro.estore.domain.object.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.create(ro.estore.domain.object.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(java.io.Serializable)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.domain.service.impl.GenericServiceImpl.findAll()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'purchaseServiceImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'userProfileServiceImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'userProfileServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.UserProfileServiceImpl]: AutowiredFieldElement for private ro.estore.model.repository.UserProfileRepository ro.estore.domain.service.impl.UserProfileServiceImpl.userProfileRepository
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.UserProfileServiceImpl]: AutowiredFieldElement for private ro.estore.domain.converter.UserProfileConverter ro.estore.domain.service.impl.UserProfileServiceImpl.userProfileConverter
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'userProfileServiceImpl' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.service.impl.UserProfileServiceImpl]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.service.impl.UserProfileServiceImpl]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userProfileServiceImpl': AutowiredFieldElement for private ro.estore.model.repository.UserProfileRepository ro.estore.domain.service.impl.UserProfileServiceImpl.userProfileRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'userProfileServiceImpl' to bean named 'userProfileRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userProfileServiceImpl': AutowiredFieldElement for private ro.estore.domain.converter.UserProfileConverter ro.estore.domain.service.impl.UserProfileServiceImpl.userProfileConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'userProfileServiceImpl' to bean named 'userProfileConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'userProfileServiceImpl' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserProfileServiceImpl@571a9686]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.GenericEntityConverter ro.estore.domain.service.impl.UserProfileServiceImpl.getEntityConverter()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.UserProfileConverter ro.estore.domain.service.impl.UserProfileServiceImpl.getEntityConverter()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.GenericRepository ro.estore.domain.service.impl.UserProfileServiceImpl.getRepository()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.UserProfileRepository ro.estore.domain.service.impl.UserProfileServiceImpl.getRepository()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.GenericServiceImpl.remove(ro.estore.domain.object.DomainDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Integer ro.estore.domain.service.impl.GenericServiceImpl.count()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImpl.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(ro.estore.domain.object.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.create(ro.estore.domain.object.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(java.io.Serializable)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.domain.service.impl.GenericServiceImpl.findAll()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'userProfileServiceImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'userServiceImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'userServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.UserServiceImpl]: AutowiredFieldElement for private ro.estore.model.repository.UserRepository ro.estore.domain.service.impl.UserServiceImpl.userRepository
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.UserServiceImpl]: AutowiredFieldElement for private ro.estore.domain.converter.UserConverter ro.estore.domain.service.impl.UserServiceImpl.userConverter
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.UserServiceImpl]: AutowiredFieldElement for private ro.estore.domain.service.AddressService ro.estore.domain.service.impl.UserServiceImpl.addressService
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.UserServiceImpl]: AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.UserServiceImpl.productService
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'userServiceImpl' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.service.impl.UserServiceImpl]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.service.impl.UserServiceImpl]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userServiceImpl': AutowiredFieldElement for private ro.estore.model.repository.UserRepository ro.estore.domain.service.impl.UserServiceImpl.userRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'userServiceImpl' to bean named 'userRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userServiceImpl': AutowiredFieldElement for private ro.estore.domain.converter.UserConverter ro.estore.domain.service.impl.UserServiceImpl.userConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'userServiceImpl' to bean named 'userConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userServiceImpl': AutowiredFieldElement for private ro.estore.domain.service.AddressService ro.estore.domain.service.impl.UserServiceImpl.addressService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressServiceImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'userServiceImpl' to bean named 'addressServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userServiceImpl': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.UserServiceImpl.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'userServiceImpl' to bean named 'productServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImpl.findByUsername' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'userServiceImpl' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserServiceImpl@188b6035]
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImpl.findByUsername' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.UserDTO ro.estore.domain.service.impl.UserServiceImpl.findByUsername(java.lang.String)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImpl.findByUsernameAndPassword' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.UserDTO ro.estore.domain.service.impl.UserServiceImpl.findByUsernameAndPassword(java.lang.String,java.lang.String)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImpl.addOrder' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.OrderDTO ro.estore.domain.service.impl.UserServiceImpl.addOrder(java.lang.Long,ro.estore.domain.object.OrderDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.GenericEntityConverter ro.estore.domain.service.impl.UserServiceImpl.getEntityConverter()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.UserConverter ro.estore.domain.service.impl.UserServiceImpl.getEntityConverter()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.GenericRepository ro.estore.domain.service.impl.UserServiceImpl.getRepository()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.UserRepository ro.estore.domain.service.impl.UserServiceImpl.getRepository()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.GenericServiceImpl.remove(ro.estore.domain.object.DomainDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Integer ro.estore.domain.service.impl.GenericServiceImpl.count()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImpl.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(ro.estore.domain.object.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.create(ro.estore.domain.object.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(java.io.Serializable)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.domain.service.impl.GenericServiceImpl.findAll()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'userServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'loggingAspect'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InitDestroyAnnotationBeanPostProcessor$1 - Found init method on class [ro.estore.util.TestUtils]: public void ro.estore.util.TestUtils.init()
 [main] DEBUG annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata - Registered init method on class [ro.estore.util.TestUtils]: org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement@316510
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.util.TestUtils]: AutowiredFieldElement for private ro.estore.domain.converter.UserConverter ro.estore.util.TestUtils.userConverter
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.util.TestUtils]: AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.util.TestUtils.env
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'testUtils' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.util.TestUtils]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.util.TestUtils]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'testUtils': AutowiredFieldElement for private ro.estore.domain.converter.UserConverter ro.estore.util.TestUtils.userConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'testUtils' to bean named 'userConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'testUtils': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.util.TestUtils.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'testUtils' to bean named 'environment'
 [main] DEBUG annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata - Invoking init method on bean 'testUtils': public void ro.estore.util.TestUtils.init()
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.username' in [class path resource [test.properties]] with type [String] and value 'username'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.username' in [class path resource [test.properties]] with type [String] and value 'username'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.name' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.name' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.name' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.name' in [class path resource [test.properties]] with type [String] and value 'name'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.surname' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.surname' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.surname' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.surname' in [class path resource [test.properties]] with type [String] and value 'surname'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.phone_number' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.phone_number' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.phone_number' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.phone_number' in [class path resource [test.properties]] with type [String] and value '0123456789'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.email_address' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.email_address' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.email_address' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.email_address' in [class path resource [test.properties]] with type [String] and value 'ceva@email.com'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.email_address' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.email_address' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.email_address' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.email_address' in [class path resource [test.properties]] with type [String] and value 'ceva@email.com'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.city' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.city' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.city' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.city' in [class path resource [test.properties]] with type [String] and value 'city'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.postcode' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.postcode' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.postcode' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.postcode' in [class path resource [test.properties]] with type [String] and value 'postcode'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.addr_line_1' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.addr_line_1' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.addr_line_1' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.addr_line_1' in [class path resource [test.properties]] with type [String] and value 'addr line 1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.addr_line_2' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.addr_line_2' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.addr_line_2' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.addr_line_2' in [class path resource [test.properties]] with type [String] and value 'addr line 2'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.quantity' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.quantity' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.quantity' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.quantity' in [class path resource [test.properties]] with type [String] and value '23'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.product_name' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.product_name' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.product_name' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.product_name' in [class path resource [test.properties]] with type [String] and value 'prod name'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.description' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.description' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.description' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.description' in [class path resource [test.properties]] with type [String] and value 'desc'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.price' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.price' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.price' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.price' in [class path resource [test.properties]] with type [String] and value '21.542'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.stock' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.stock' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.stock' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.stock' in [class path resource [test.properties]] with type [String] and value '543'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.brand' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.brand' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.brand' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.brand' in [class path resource [test.properties]] with type [String] and value 'brand'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'testUtils' with 0 common interceptors and 3 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.util.TestUtils@5496c165]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.util.TestUtils.init()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Product ro.estore.util.TestUtils.createProduct(java.lang.String)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.UserDTO ro.estore.util.TestUtils.createUserDTO(java.lang.String)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.User ro.estore.util.TestUtils.createUser(java.lang.String)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.UserProfile ro.estore.util.TestUtils.createUserProfile(java.lang.String)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Address ro.estore.util.TestUtils.createAddressWithNoRelation(java.lang.String)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Order ro.estore.util.TestUtils.createOrderWithoutUserAndAddress()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Purchase ro.estore.util.TestUtils.createPurchaseWithNoRelation()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.User ro.estore.util.TestUtils.createUserWithNoRelation(java.lang.String)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.UserProfile ro.estore.util.TestUtils.createUserProfileWithNoRelation(java.lang.String)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Address ro.estore.util.TestUtils.createAddress(java.lang.String)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Purchase ro.estore.util.TestUtils.createPurchase(java.lang.String)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Order ro.estore.util.TestUtils.createOrder(java.lang.String)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionAttributeSource'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionInterceptor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.transaction.event.TransactionalEventListenerFactory]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.transaction.event.TransactionalEventListenerFactory]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'order' of type [int]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'ro.estore.model.config.RootJpaHibernateConfig'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'transactionManager'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'transactionManager'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'ro.estore.model.config.RootJpaHibernateConfig'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
 [main] DEBUG support.ConstructorResolver - Autowiring by type from bean name 'transactionManager' via factory method to bean named 'entityManagerFactory'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PlatformTransactionManager ro.estore.model.config.RootJpaHibernateConfig.transactionManager(EntityManagerFactory)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PlatformTransactionManager ro.estore.model.config.RootJpaHibernateConfig.transactionManager(EntityManagerFactory) took 4ms to execute.
	=====================================================================
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.orm.jpa.JpaTransactionManager]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.orm.jpa.JpaTransactionManager]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'beanFactory' of type [org.springframework.beans.factory.BeanFactory]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'dataSource' of type [javax.sql.DataSource]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'defaultTimeout' of type [int]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'entityManagerFactory' of type [javax.persistence.EntityManagerFactory]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'failEarlyOnGlobalRollbackOnly' of type [boolean]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'globalRollbackOnParticipationFailure' of type [boolean]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'jpaDialect' of type [org.springframework.orm.jpa.JpaDialect]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'jpaProperties' of type [java.util.Properties]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'jpaPropertyMap' of type [java.util.Map]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'nestedTransactionAllowed' of type [boolean]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'persistenceUnitName' of type [java.lang.String]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'resourceFactory' of type [java.lang.Object]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'rollbackOnCommitFailure' of type [boolean]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'transactionSynchronization' of type [int]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'transactionSynchronizationName' of type [java.lang.String]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'validateExistingTransaction' of type [boolean]
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Invoking afterPropertiesSet() on bean with name 'transactionManager'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'transactionManager'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'dataSource'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.context.annotation.ConfigurationClassPostProcessor
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.context.annotation.CommonAnnotationBeanPostProcessor
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.context.event.EventListenerMethodProcessor
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.context.event.DefaultEventListenerFactory
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.model.config.JpaHibernateTestConfig$$EnhancerBySpringCGLIB$$f8042b42
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.context.annotation.ConfigurationClassPostProcessor$EnhancedConfigurationBeanPostProcessor
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.domain.converter.AddressConverter
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.domain.converter.OrderConverter
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.domain.converter.ProductConverter
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.domain.converter.PurchaseConverter
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.domain.converter.UserConverter
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.domain.converter.UserProfileConverter
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.model.repository.impl.AddressRepositoryJpaImpl
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.model.repository.impl.OrderRepositoryJpaImpl
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.model.repository.impl.ProductRepositoryJpaImpl
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.model.repository.impl.PurchaseRepositoryJpaImpl
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.model.repository.impl.UserProfileRepositoryJpaImpl
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.model.repository.impl.UserRepositoryJpaImpl
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.domain.service.impl.AddressServiceImpl
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.domain.service.impl.OrderServiceImpl
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.domain.service.impl.ProductServiceImpl
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.domain.service.impl.PurchaseServiceImpl
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.domain.service.impl.UserProfileServiceImpl
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.domain.service.impl.UserServiceImpl
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.aspect.LoggingAspect
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.util.TestUtils
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$408936ec
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.transaction.annotation.AnnotationTransactionAttributeSource
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.transaction.interceptor.TransactionInterceptor
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.transaction.event.TransactionalEventListenerFactory
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.model.config.RootJpaHibernateConfig$$EnhancerBySpringCGLIB$$4d38e612
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.orm.jpa.JpaTransactionManager
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.jdbc.datasource.DriverManagerDataSource
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class com.sun.proxy.$Proxy43
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.core.env.StandardEnvironment
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class java.util.Properties
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class java.util.Collections$UnmodifiableMap
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.context.annotation.ConfigurationClassParser$ImportStack
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.context.support.DelegatingMessageSource
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.context.event.SimpleApplicationEventMulticaster
 [main] DEBUG support.AbstractApplicationContext - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@31d6f3fe]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'lifecycleProcessor'
 [main] TRACE support.AbstractApplicationContext - Publishing event in org.springframework.context.support.GenericApplicationContext@2d8f65a4: org.springframework.context.event.ContextRefreshedEvent[source=org.springframework.context.support.GenericApplicationContext@2d8f65a4: startup date [Tue Jul 19 11:05:57 EEST 2016]; root of context hierarchy]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Storing ApplicationContext in cache under key [[MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 0, missCount = 1]
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.UserServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.UserServiceImplTest' to bean named 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserService ro.estore.domain.service.impl.UserServiceImplTest.userService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userServiceImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.UserServiceImplTest' to bean named 'userServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.UserServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.UserServiceImplTest' to bean named 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.UserServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.UserServiceImplTest' to bean named 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.findUserByUsernameAndPasswordFailTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserServiceImplTest@4bbfb90a]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameAndPasswordFailTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.saveAndFindUserByUsernameAndPasswordTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserServiceImplTest.saveAndFindUserByUsernameAndPasswordTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserServiceImplTest.setUp()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.createUser' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserServiceImplTest.createUser()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.findUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserServiceImplTest.findUserTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.deleteUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserServiceImplTest.deleteUserTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.updateUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserServiceImplTest.updateUserTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.findUserByUsernameTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.findUserByUsernameFailTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameFailTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@4bbfb90a], method [public void ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameAndPasswordFailTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@4bbfb90a, testMethod = findUserByUsernameAndPasswordFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.findUserByUsernameAndPasswordFailTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@4bbfb90a, testMethod = findUserByUsernameAndPasswordFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@21e20ad5 transactionManagerName = '', defaultRollback = true] for test class [ro.estore.domain.service.impl.UserServiceImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 1, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@4bbfb90a, testMethod = findUserByUsernameAndPasswordFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameAndPasswordFailTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder]
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
 [main] DEBUG internal.StatisticsInitiator - Statistics initialized [enabled=false]
 [main] TRACE internal.SessionImpl - Opened Session [08f419c0-3bc5-43ab-92f5-0dcfb4b91956] at timestamp: 14689155629
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5c534b5b]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@396639b] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@62573c86] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@4bbfb90a, testMethod = findUserByUsernameAndPasswordFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@62573c86] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@396639b] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserServiceImpl.findByUsernameAndPassword]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.service.impl.UserServiceImpl.findByUsernameAndPassword(String,String)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsernameAndPassword(String,String)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@62573c86] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG internal.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 )
 [main] TRACE spi.QueryPlanCache - Unable to locate HQL query plan in cache; generating (select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 ))
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.hql.spi.QueryTranslatorFactory]
 [main] DEBUG internal.QueryTranslatorFactoryInitiator - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3db972d2
 [main] INFO  internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
 [main] DEBUG ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from ro.estore.model.entitiy.User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 )
 [main] DEBUG ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'ro'
    |  |     |  |  |  |  \-[IDENT] Node: 'estore'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'entitiy'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'username'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'password'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

 [main] DEBUG ast.ErrorCounter - throwQueryException() : no errors
 [main] DEBUG antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
 [main] DEBUG tree.FromElement - FromClause{level=1} : ro.estore.model.entitiy.User (generatedAlias0) -> user0_
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
 [main] TRACE tree.FromElement - Handling property dereference [ro.estore.model.entitiy.User (generatedAlias0) -> username (class)]
 [main] DEBUG tree.DotNode - getDataType() : username -> org.hibernate.type.StringType@7446d8d5
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0.username -> user0_.username
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
 [main] TRACE tree.FromElement - Handling property dereference [ro.estore.model.entitiy.User (generatedAlias0) -> password (class)]
 [main] DEBUG tree.DotNode - getDataType() : password -> org.hibernate.type.StringType@7446d8d5
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0.password -> user0_.password
 [main] DEBUG antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
 [main] DEBUG ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} user user0_ ) ( where ( and ( = ( user0_.username user0_.user_id username ) ? ) ( = ( user0_.password user0_.user_id password ) ? ) ) ) )
 [main] DEBUG util.JoinProcessor - Using FROM fragment [user user0_]
 [main] DEBUG antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
 [main] DEBUG ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_4_' {alias=generatedAlias0, className=ro.estore.model.entitiy.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=ro.estore.model.entitiy.User}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=generatedAlias0.username,tableAlias=user0_,className=ro.estore.model.entitiy.User,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=generatedAlias0, className=ro.estore.model.entitiy.User, tableAlias=user0_}
          |  |  \-[IDENT] IdentNode: 'username' {originalText=username}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7446d8d5}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path=generatedAlias0.password,tableAlias=user0_,className=ro.estore.model.entitiy.User,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=generatedAlias0, className=ro.estore.model.entitiy.User, tableAlias=user0_}
             |  \-[IDENT] IdentNode: 'password' {originalText=password}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7446d8d5}

 [main] DEBUG ast.ErrorCounter - throwQueryException() : no errors
 [main] DEBUG ast.QueryTranslatorImpl - HQL: select generatedAlias0 from ro.estore.model.entitiy.User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 )
 [main] DEBUG ast.QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=? and user0_.password=?
 [main] DEBUG ast.ErrorCounter - throwQueryException() : no errors
 [main] TRACE spi.HQLQueryPlan - HQL param location recognition took 3.245.894 nanoseconds (select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 ))
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 ))
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@62573c86] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 ))
 [main] TRACE spi.HQLQueryPlan - Find: select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 )
 [main] TRACE spi.QueryParameters - Named parameters: {param0=user0_0, param1=pass0_0}
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_,
        user0_.password as password2_4_,
        user0_.user_profile_id as user_pro4_4_,
        user0_.username as username3_4_ 
    from
        user user0_ 
    where
        user0_.username=? 
        and user0_.password=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@6b2e46af: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED ** and user0_.password=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@6b2e46af: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED ** and user0_.password=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [user0_0]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [pass0_0]
 [main] TRACE loader.Loader - Bound [3] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@7a0ef219]
 [main] TRACE loader.Loader - Processing result set
 [main] TRACE loader.Loader - Done processing result set (0 rows)
 [main] TRACE loader.Loader - Total objects hydrated: 0
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@6b2e46af: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0_0' and user0_.password='pass0_0']
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@7a0ef219]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@6b2e46af: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0_0' and user0_.password='pass0_0']
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] ERROR impl.UserRepositoryJpaImpl - No user was found (Index: 0, Size: 0)
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsernameAndPassword(String,String) took 316ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User) took 14ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.service.impl.UserServiceImpl.findByUsernameAndPassword(String,String) took 343ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserServiceImpl.findByUsernameAndPassword]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@4bbfb90a], method [public void ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameAndPasswordFailTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@4bbfb90a, testMethod = findUserByUsernameAndPasswordFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@3d904e9c]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@62573c86] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@396639b] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [08f419c0-3bc5-43ab-92f5-0dcfb4b91956]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@5d43409a]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@4bbfb90a, testMethod = findUserByUsernameAndPasswordFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@4bbfb90a, testMethod = findUserByUsernameAndPasswordFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.UserServiceImplTest@1effd53c]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@1effd53c, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 2, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.UserServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserService ro.estore.domain.service.impl.UserServiceImplTest.userService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.UserServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.UserServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserServiceImplTest@1effd53c]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@1effd53c], method [public void ro.estore.domain.service.impl.UserServiceImplTest.findUserTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@1effd53c, testMethod = findUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.findUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@1effd53c, testMethod = findUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 3, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@1effd53c, testMethod = findUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserServiceImplTest.findUserTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [610ac5a0-2e9c-4a8c-8f9d-76571aa40bbf] at timestamp: 14689155634
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5fa23c]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@558756be] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@433348bc] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@1effd53c, testMethod = findUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@433348bc] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@558756be] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@433348bc] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.User#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.password as password2_4_0_,
        user0_.user_profile_id as user_pro4_4_0_,
        user0_.username as username3_4_0_,
        userprofil1_.user_profile_id as user_pro1_5_1_,
        userprofil1_.email_address as email_ad2_5_1_,
        userprofil1_.name as name3_5_1_,
        userprofil1_.phone_number as phone_nu4_5_1_,
        userprofil1_.surname as surname5_5_1_ 
    from
        user user0_ 
    inner join
        user_profile userprofil1_ 
            on user0_.user_profile_id=userprofil1_.user_profile_id 
    where
        user0_.user_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@767a014e: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@767a014e: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@9596ce8]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro1_5_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE sql.BasicExtractor - extracted value ([password2_4_0_] : [VARCHAR]) - [pass0]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro4_4_0_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([username3_4_0_] : [VARCHAR]) - [user0]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_1_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_1_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_1_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_1_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@9596ce8]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@9596ce8]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@767a014e: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@767a014e: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.User#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 72ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User)
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.User.orders#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        orders0_.user_id as user_id3_1_0_,
        orders0_.order_id as order_id1_1_0_,
        orders0_.order_id as order_id1_1_1_,
        orders0_.address_id as address_2_1_1_,
        address1_.address_id as address_1_0_2_,
        address1_.address_line_1 as address_2_0_2_,
        address1_.address_line_2 as address_3_0_2_,
        address1_.address_name as address_4_0_2_,
        address1_.city as city5_0_2_,
        address1_.postcode as postcode6_0_2_ 
    from
        `
    order` orders0_ inner join
        address address1_ 
            on orders0_.address_id=address1_.address_id 
    where
        orders0_.user_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@5679e96b: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@5679e96b: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@3ed7821]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@3ed7821]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.User.orders#1]]
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([order_id1_1_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_1_1_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_2_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_2_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_2_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_2_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_2_] : [VARCHAR]) - [00000]
 [main] TRACE sql.BasicExtractor - extracted value ([user_id3_1_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.User.orders#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.User.orders#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.User.orders#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([order_id1_1_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] not located in load context
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.User.orders#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.User.orders#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@3ed7821, coll=[ro.estore.model.entitiy.User.orders#1]>@77bbadc]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@3ed7821, coll=[ro.estore.model.entitiy.User.orders#1]>@77bbadc]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.User.orders#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@3ed7821]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@3ed7821]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@5679e96b: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@5679e96b: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 10ms to execute.
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchases0_.order_id as order_id4_3_0_,
        purchases0_.purchase_id as purchase1_3_0_,
        purchases0_.purchase_id as purchase1_3_1_,
        purchases0_.product_id as product_3_3_1_,
        purchases0_.quantity as quantity2_3_1_,
        product1_.product_id as product_1_2_2_,
        product1_.brand as brand2_2_2_,
        product1_.description as descript3_2_2_,
        product1_.name as name4_2_2_,
        product1_.price as price5_2_2_,
        product1_.stock as stock6_2_2_ 
    from
        purchase purchases0_ 
    inner join
        product product1_ 
            on purchases0_.product_id=product1_.product_id 
    where
        purchases0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@7fdab70c: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@7fdab70c: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@25ad4f71]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@25ad4f71]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] not located in load context
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_1_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_2_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_2_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_2_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_2_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_2_] : [INTEGER]) - [14]
 [main] TRACE sql.BasicExtractor - extracted value ([order_id4_3_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@25ad4f71, coll=[ro.estore.model.entitiy.Order.purchases#1]>@7bc44ce8]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@25ad4f71, coll=[ro.estore.model.entitiy.Order.purchases#1]>@7bc44ce8]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@25ad4f71]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@25ad4f71]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@7fdab70c: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@7fdab70c: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 8ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 19ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 91ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        addresses0_.user_profile_id as user_pro7_0_0_,
        addresses0_.address_id as address_1_0_0_,
        addresses0_.address_id as address_1_0_1_,
        addresses0_.address_line_1 as address_2_0_1_,
        addresses0_.address_line_2 as address_3_0_1_,
        addresses0_.address_name as address_4_0_1_,
        addresses0_.city as city5_0_1_,
        addresses0_.postcode as postcode6_0_1_ 
    from
        address addresses0_ 
    where
        addresses0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@59072e9d: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@59072e9d: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@58472096]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@58472096]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] not located in load context
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro7_0_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 0
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@58472096, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@a92be4f]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@58472096, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@a92be4f]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@58472096]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@58472096]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@59072e9d: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@59072e9d: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 48ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User) took 194ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 272ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@1effd53c], method [public void ro.estore.domain.service.impl.UserServiceImplTest.findUserTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@1effd53c, testMethod = findUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@53e800f9]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.User#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1], CollectionKey[ro.estore.model.entitiy.User.orders#1], CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@433348bc] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@558756be] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [610ac5a0-2e9c-4a8c-8f9d-76571aa40bbf]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@30b131b2]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@1effd53c, testMethod = findUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@1effd53c, testMethod = findUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.UserServiceImplTest@2924f1d8]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@2924f1d8, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 4, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.UserServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserService ro.estore.domain.service.impl.UserServiceImplTest.userService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.UserServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.UserServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserServiceImplTest@2924f1d8]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@2924f1d8], method [public void ro.estore.domain.service.impl.UserServiceImplTest.saveAndFindUserByUsernameAndPasswordTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@2924f1d8, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.saveAndFindUserByUsernameAndPasswordTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@2924f1d8, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 5, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@2924f1d8, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserServiceImplTest.saveAndFindUserByUsernameAndPasswordTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [d0e777ef-911c-4e85-85b8-d132c2e4d19d] at timestamp: 14689155637
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6e0c6a7a]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@467b684d] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@7baf1f5a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@2924f1d8, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@7baf1f5a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@467b684d] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserServiceImpl.findByUsernameAndPassword]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.service.impl.UserServiceImpl.findByUsernameAndPassword(String,String)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsernameAndPassword(String,String)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@7baf1f5a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG internal.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 )
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 ))
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 ))
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@7baf1f5a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 ))
 [main] TRACE spi.HQLQueryPlan - Find: select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 )
 [main] TRACE spi.QueryParameters - Named parameters: {param0=user0, param1=pass0}
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_,
        user0_.password as password2_4_,
        user0_.user_profile_id as user_pro4_4_,
        user0_.username as username3_4_ 
    from
        user user0_ 
    where
        user0_.username=? 
        and user0_.password=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@7fe82967: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED ** and user0_.password=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@7fe82967: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED ** and user0_.password=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [user0]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [pass0]
 [main] TRACE loader.Loader - Bound [3] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@50850539]
 [main] TRACE loader.Loader - Processing result set
 [main] DEBUG logging.DelegatingBasicLogger - Result set row: 0
 [main] TRACE sql.BasicExtractor - extracted value ([user_id1_4_] : [BIGINT]) - [1]
 [main] DEBUG loader.Loader - Result row: EntityKey[ro.estore.model.entitiy.User#1]
 [main] TRACE loader.Loader - Initializing object from ResultSet: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE sql.BasicExtractor - extracted value ([password2_4_] : [VARCHAR]) - [pass0]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro4_4_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([username3_4_] : [VARCHAR]) - [user0]
 [main] TRACE loader.Loader - Done processing result set (1 rows)
 [main] TRACE loader.Loader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        userprofil0_.user_profile_id as user_pro1_5_0_,
        userprofil0_.email_address as email_ad2_5_0_,
        userprofil0_.name as name3_5_0_,
        userprofil0_.phone_number as phone_nu4_5_0_,
        userprofil0_.surname as surname5_5_0_ 
    from
        user_profile userprofil0_ 
    where
        userprofil0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@522bf64e: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@522bf64e: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@2aff9dff]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_0_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_0_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_0_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_0_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@2aff9dff]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@2aff9dff]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@522bf64e: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@522bf64e: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.UserProfile#1
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@7fe82967: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0' and user0_.password='pass0']
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@50850539]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@7fe82967: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0' and user0_.password='pass0']
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsernameAndPassword(String,String) took 101ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User)
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.User.orders#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        orders0_.user_id as user_id3_1_0_,
        orders0_.order_id as order_id1_1_0_,
        orders0_.order_id as order_id1_1_1_,
        orders0_.address_id as address_2_1_1_,
        address1_.address_id as address_1_0_2_,
        address1_.address_line_1 as address_2_0_2_,
        address1_.address_line_2 as address_3_0_2_,
        address1_.address_name as address_4_0_2_,
        address1_.city as city5_0_2_,
        address1_.postcode as postcode6_0_2_ 
    from
        `
    order` orders0_ inner join
        address address1_ 
            on orders0_.address_id=address1_.address_id 
    where
        orders0_.user_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@c3edf4c: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@c3edf4c: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@799ed4e8]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@799ed4e8]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.User.orders#1]]
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([order_id1_1_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_1_1_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_2_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_2_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_2_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_2_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_2_] : [VARCHAR]) - [00000]
 [main] TRACE sql.BasicExtractor - extracted value ([user_id3_1_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.User.orders#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.User.orders#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.User.orders#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([order_id1_1_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] not located in load context
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.User.orders#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.User.orders#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@799ed4e8, coll=[ro.estore.model.entitiy.User.orders#1]>@44536de4]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@799ed4e8, coll=[ro.estore.model.entitiy.User.orders#1]>@44536de4]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.User.orders#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@799ed4e8]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@799ed4e8]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@c3edf4c: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@c3edf4c: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 1ms to execute.
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchases0_.order_id as order_id4_3_0_,
        purchases0_.purchase_id as purchase1_3_0_,
        purchases0_.purchase_id as purchase1_3_1_,
        purchases0_.product_id as product_3_3_1_,
        purchases0_.quantity as quantity2_3_1_,
        product1_.product_id as product_1_2_2_,
        product1_.brand as brand2_2_2_,
        product1_.description as descript3_2_2_,
        product1_.name as name4_2_2_,
        product1_.price as price5_2_2_,
        product1_.stock as stock6_2_2_ 
    from
        purchase purchases0_ 
    inner join
        product product1_ 
            on purchases0_.product_id=product1_.product_id 
    where
        purchases0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@5fcfde70: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@5fcfde70: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@4d95a72e]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@4d95a72e]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] not located in load context
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_1_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_2_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_2_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_2_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_2_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_2_] : [INTEGER]) - [14]
 [main] TRACE sql.BasicExtractor - extracted value ([order_id4_3_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@4d95a72e, coll=[ro.estore.model.entitiy.Order.purchases#1]>@5624657a]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@4d95a72e, coll=[ro.estore.model.entitiy.Order.purchases#1]>@5624657a]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@4d95a72e]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@4d95a72e]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@5fcfde70: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@5fcfde70: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 49ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        addresses0_.user_profile_id as user_pro7_0_0_,
        addresses0_.address_id as address_1_0_0_,
        addresses0_.address_id as address_1_0_1_,
        addresses0_.address_line_1 as address_2_0_1_,
        addresses0_.address_line_2 as address_3_0_1_,
        addresses0_.address_name as address_4_0_1_,
        addresses0_.city as city5_0_1_,
        addresses0_.postcode as postcode6_0_1_ 
    from
        address addresses0_ 
    where
        addresses0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@36681447: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@36681447: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@4d21c56e]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@4d21c56e]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] not located in load context
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro7_0_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 0
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@4d21c56e, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@726aa968]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@4d21c56e, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@726aa968]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@4d21c56e]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@4d21c56e]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@36681447: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@36681447: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 32ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User) took 161ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.service.impl.UserServiceImpl.findByUsernameAndPassword(String,String) took 265ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserServiceImpl.findByUsernameAndPassword]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@2924f1d8], method [public void ro.estore.domain.service.impl.UserServiceImplTest.saveAndFindUserByUsernameAndPasswordTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@2924f1d8, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@7100dea]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.User#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1], CollectionKey[ro.estore.model.entitiy.User.orders#1], CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@7baf1f5a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@467b684d] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [d0e777ef-911c-4e85-85b8-d132c2e4d19d]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@712cfb63]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@2924f1d8, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@2924f1d8, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.UserServiceImplTest@32e54a9d]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@32e54a9d, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 6, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.UserServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserService ro.estore.domain.service.impl.UserServiceImplTest.userService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.UserServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.UserServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserServiceImplTest@32e54a9d]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@32e54a9d], method [public void ro.estore.domain.service.impl.UserServiceImplTest.updateUserTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@32e54a9d, testMethod = updateUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.updateUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@32e54a9d, testMethod = updateUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 7, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@32e54a9d, testMethod = updateUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserServiceImplTest.updateUserTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [3cac20e8-8606-4a72-af87-7be1294e7e6f] at timestamp: 14689155640
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1cd3b138]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@151bf776] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@5a6d30e2] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@32e54a9d, testMethod = updateUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5a6d30e2] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@151bf776] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5a6d30e2] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.User#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.password as password2_4_0_,
        user0_.user_profile_id as user_pro4_4_0_,
        user0_.username as username3_4_0_,
        userprofil1_.user_profile_id as user_pro1_5_1_,
        userprofil1_.email_address as email_ad2_5_1_,
        userprofil1_.name as name3_5_1_,
        userprofil1_.phone_number as phone_nu4_5_1_,
        userprofil1_.surname as surname5_5_1_ 
    from
        user user0_ 
    inner join
        user_profile userprofil1_ 
            on user0_.user_profile_id=userprofil1_.user_profile_id 
    where
        user0_.user_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@a098d76: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@a098d76: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@40e37b06]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro1_5_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE sql.BasicExtractor - extracted value ([password2_4_0_] : [VARCHAR]) - [pass0]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro4_4_0_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([username3_4_0_] : [VARCHAR]) - [user0]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_1_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_1_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_1_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_1_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@40e37b06]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@40e37b06]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@a098d76: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@a098d76: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.User#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 27ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User)
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.User.orders#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        orders0_.user_id as user_id3_1_0_,
        orders0_.order_id as order_id1_1_0_,
        orders0_.order_id as order_id1_1_1_,
        orders0_.address_id as address_2_1_1_,
        address1_.address_id as address_1_0_2_,
        address1_.address_line_1 as address_2_0_2_,
        address1_.address_line_2 as address_3_0_2_,
        address1_.address_name as address_4_0_2_,
        address1_.city as city5_0_2_,
        address1_.postcode as postcode6_0_2_ 
    from
        `
    order` orders0_ inner join
        address address1_ 
            on orders0_.address_id=address1_.address_id 
    where
        orders0_.user_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@56da7487: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@56da7487: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@599e4d41]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@599e4d41]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.User.orders#1]]
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([order_id1_1_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_1_1_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_2_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_2_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_2_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_2_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_2_] : [VARCHAR]) - [00000]
 [main] TRACE sql.BasicExtractor - extracted value ([user_id3_1_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.User.orders#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.User.orders#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.User.orders#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([order_id1_1_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] not located in load context
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.User.orders#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.User.orders#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@599e4d41, coll=[ro.estore.model.entitiy.User.orders#1]>@2f2bff16]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@599e4d41, coll=[ro.estore.model.entitiy.User.orders#1]>@2f2bff16]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.User.orders#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@599e4d41]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@599e4d41]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@56da7487: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@56da7487: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchases0_.order_id as order_id4_3_0_,
        purchases0_.purchase_id as purchase1_3_0_,
        purchases0_.purchase_id as purchase1_3_1_,
        purchases0_.product_id as product_3_3_1_,
        purchases0_.quantity as quantity2_3_1_,
        product1_.product_id as product_1_2_2_,
        product1_.brand as brand2_2_2_,
        product1_.description as descript3_2_2_,
        product1_.name as name4_2_2_,
        product1_.price as price5_2_2_,
        product1_.stock as stock6_2_2_ 
    from
        purchase purchases0_ 
    inner join
        product product1_ 
            on purchases0_.product_id=product1_.product_id 
    where
        purchases0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@75de29c0: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@75de29c0: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@fc807c1]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@fc807c1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] not located in load context
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_1_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_2_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_2_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_2_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_2_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_2_] : [INTEGER]) - [14]
 [main] TRACE sql.BasicExtractor - extracted value ([order_id4_3_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@fc807c1, coll=[ro.estore.model.entitiy.Order.purchases#1]>@5dd903be]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@fc807c1, coll=[ro.estore.model.entitiy.Order.purchases#1]>@5dd903be]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@fc807c1]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@fc807c1]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@75de29c0: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@75de29c0: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 43ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        addresses0_.user_profile_id as user_pro7_0_0_,
        addresses0_.address_id as address_1_0_0_,
        addresses0_.address_id as address_1_0_1_,
        addresses0_.address_line_1 as address_2_0_1_,
        addresses0_.address_line_2 as address_3_0_1_,
        addresses0_.address_name as address_4_0_1_,
        addresses0_.city as city5_0_1_,
        addresses0_.postcode as postcode6_0_1_ 
    from
        address addresses0_ 
    where
        addresses0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@12e0f1cb: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@12e0f1cb: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@4a163575]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@4a163575]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] not located in load context
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro7_0_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 0
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@4a163575, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@7e642b88]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@4a163575, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@7e642b88]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@4a163575]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@4a163575]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@12e0f1cb: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@12e0f1cb: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 40ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User) took 125ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 153ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserServiceImpl.findById]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5a6d30e2] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.User#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1], CollectionKey[ro.estore.model.entitiy.User.orders#1], CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@151bf776] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserServiceImpl.update]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(DomainDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5a6d30e2] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.User#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: User ro.estore.domain.converter.UserConverter.toEntity(UserDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Order ro.estore.domain.converter.OrderConverter.toEntity(OrderDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Order ro.estore.domain.converter.OrderConverter.toEntity(OrderDTO) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfile ro.estore.domain.converter.UserProfileConverter.toEntity(UserProfileDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfile ro.estore.domain.converter.UserProfileConverter.toEntity(UserProfileDTO) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: User ro.estore.domain.converter.UserConverter.toEntity(UserDTO) took 7ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5a6d30e2] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG internal.DefaultMergeEventListener - EntityCopyObserver strategy: disallow
 [main] TRACE internal.DefaultMergeEventListener - Merging detached instance
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.Cascade - Processing cascade ACTION_MERGE for: ro.estore.model.entitiy.User
 [main] TRACE internal.Cascade - Cascade ACTION_MERGE for collection: ro.estore.model.entitiy.User.orders
 [main] TRACE spi.CascadingActions$6 - Cascading to merge: ro.estore.model.entitiy.Order
 [main] TRACE internal.DefaultMergeEventListener - Merging detached instance
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.Cascade - Processing cascade ACTION_MERGE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Cascade ACTION_MERGE for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE spi.CascadingActions$6 - Cascading to merge: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultMergeEventListener - Merging detached instance
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.Cascade - Done cascade ACTION_MERGE for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.Cascade - Done processing cascade ACTION_MERGE for: ro.estore.model.entitiy.Order
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.Cascade - Done cascade ACTION_MERGE for collection: ro.estore.model.entitiy.User.orders
 [main] TRACE spi.CascadingActions$6 - Cascading to merge: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.DefaultMergeEventListener - Merging detached instance
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.Cascade - Processing cascade ACTION_MERGE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Cascade ACTION_MERGE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE spi.CascadingActions$6 - Cascading to merge: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultMergeEventListener - Merging detached instance
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.Cascade - Done cascade ACTION_MERGE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done processing cascade ACTION_MERGE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Done processing cascade ACTION_MERGE for: ro.estore.model.entitiy.User
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object) took 41ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User) took 5ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(DomainDTO) took 60ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserServiceImpl.update]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5a6d30e2] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.User#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1], CollectionKey[ro.estore.model.entitiy.User.orders#1], CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@151bf776] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5a6d30e2] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.User#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User) took 4ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 6ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@32e54a9d], method [public void ro.estore.domain.service.impl.UserServiceImplTest.updateUserTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@32e54a9d, testMethod = updateUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@3cd9aa64]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.User#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1], CollectionKey[ro.estore.model.entitiy.User.orders#1], CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@5a6d30e2] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@151bf776] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [3cac20e8-8606-4a72-af87-7be1294e7e6f]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@42b84286]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@32e54a9d, testMethod = updateUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@32e54a9d, testMethod = updateUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.UserServiceImplTest@443effcb]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@443effcb, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 8, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.UserServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserService ro.estore.domain.service.impl.UserServiceImplTest.userService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.UserServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.UserServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserServiceImplTest@443effcb]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@443effcb], method [public void ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameFailTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@443effcb, testMethod = findUserByUsernameFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.findUserByUsernameFailTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@443effcb, testMethod = findUserByUsernameFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 9, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@443effcb, testMethod = findUserByUsernameFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameFailTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [7ce771e6-1e11-4a33-b8ad-884decde1169] at timestamp: 14689155642
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@36480b2d]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@27d33393] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@1f6917fb] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@443effcb, testMethod = findUserByUsernameFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1f6917fb] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@27d33393] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserServiceImpl.findByUsername]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.service.impl.UserServiceImpl.findByUsername(String)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsername(String)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1f6917fb] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG internal.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0
 [main] TRACE spi.QueryPlanCache - Unable to locate HQL query plan in cache; generating (select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0)
 [main] DEBUG ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from ro.estore.model.entitiy.User as generatedAlias0 where generatedAlias0.username=:param0
 [main] DEBUG ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'ro'
    |  |     |  |  |  |  \-[IDENT] Node: 'estore'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'entitiy'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

 [main] DEBUG ast.ErrorCounter - throwQueryException() : no errors
 [main] DEBUG antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
 [main] DEBUG tree.FromElement - FromClause{level=1} : ro.estore.model.entitiy.User (generatedAlias0) -> user0_
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
 [main] TRACE tree.FromElement - Handling property dereference [ro.estore.model.entitiy.User (generatedAlias0) -> username (class)]
 [main] DEBUG tree.DotNode - getDataType() : username -> org.hibernate.type.StringType@7446d8d5
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0.username -> user0_.username
 [main] DEBUG antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
 [main] DEBUG ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
 [main] DEBUG util.JoinProcessor - Using FROM fragment [user user0_]
 [main] DEBUG antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
 [main] DEBUG ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_4_' {alias=generatedAlias0, className=ro.estore.model.entitiy.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=ro.estore.model.entitiy.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=generatedAlias0.username,tableAlias=user0_,className=ro.estore.model.entitiy.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=generatedAlias0, className=ro.estore.model.entitiy.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7446d8d5}

 [main] DEBUG ast.ErrorCounter - throwQueryException() : no errors
 [main] DEBUG ast.QueryTranslatorImpl - HQL: select generatedAlias0 from ro.estore.model.entitiy.User as generatedAlias0 where generatedAlias0.username=:param0
 [main] DEBUG ast.QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=?
 [main] DEBUG ast.ErrorCounter - throwQueryException() : no errors
 [main] TRACE spi.HQLQueryPlan - HQL param location recognition took 35.068 nanoseconds (select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0)
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0)
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1f6917fb] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0)
 [main] TRACE spi.HQLQueryPlan - Find: select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0
 [main] TRACE spi.QueryParameters - Named parameters: {param0=user0_0}
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_,
        user0_.password as password2_4_,
        user0_.user_profile_id as user_pro4_4_,
        user0_.username as username3_4_ 
    from
        user user0_ 
    where
        user0_.username=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@5e7c141d: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@5e7c141d: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [user0_0]
 [main] TRACE loader.Loader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@43af351a]
 [main] TRACE loader.Loader - Processing result set
 [main] TRACE loader.Loader - Done processing result set (0 rows)
 [main] TRACE loader.Loader - Total objects hydrated: 0
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@5e7c141d: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0_0']
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@43af351a]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@5e7c141d: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0_0']
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] ERROR impl.UserRepositoryJpaImpl - No user was found (No entity found for query)
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsername(String) took 41ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.service.impl.UserServiceImpl.findByUsername(String) took 42ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserServiceImpl.findByUsername]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@443effcb], method [public void ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameFailTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@443effcb, testMethod = findUserByUsernameFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@1305c126]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@1f6917fb] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@27d33393] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [7ce771e6-1e11-4a33-b8ad-884decde1169]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@72f9f27c]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@443effcb, testMethod = findUserByUsernameFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@443effcb, testMethod = findUserByUsernameFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.UserServiceImplTest@4c1bdcc2]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@4c1bdcc2, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 10, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.UserServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserService ro.estore.domain.service.impl.UserServiceImplTest.userService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.UserServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.UserServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserServiceImplTest@4c1bdcc2]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@4c1bdcc2], method [public void ro.estore.domain.service.impl.UserServiceImplTest.createUser()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@4c1bdcc2, testMethod = createUser@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.createUser' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@4c1bdcc2, testMethod = createUser@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 11, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@4c1bdcc2, testMethod = createUser@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserServiceImplTest.createUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [5b082bee-5a09-4792-a9dd-f3872b076833] at timestamp: 14689155643
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@23f3da8b]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@5634d0f4] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@252a8aae] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@4c1bdcc2, testMethod = createUser@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.util.TestUtils.createUserDTO(String)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 4ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 6ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User) took 14ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.util.TestUtils.createUserDTO(String) took 26ms to execute.
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@252a8aae] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@5634d0f4] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@252a8aae] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        product0_.product_id as product_1_2_0_,
        product0_.brand as brand2_2_0_,
        product0_.description as descript3_2_0_,
        product0_.name as name4_2_0_,
        product0_.price as price5_2_0_,
        product0_.stock as stock6_2_0_ 
    from
        product product0_ 
    where
        product0_.product_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@54e2fe: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@54e2fe: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@70972170]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_0_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_0_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_0_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_0_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_0_] : [INTEGER]) - [14]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@70972170]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@70972170]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@54e2fe: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@54e2fe: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Product#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 31ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 40ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@252a8aae] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@5634d0f4] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@252a8aae] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 3ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@252a8aae] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@5634d0f4] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@252a8aae] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 4ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@252a8aae] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@5634d0f4] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@252a8aae] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 4ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@252a8aae] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@5634d0f4] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserServiceImpl.create]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.create(DomainDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: User ro.estore.domain.converter.UserConverter.toEntity(UserDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Order ro.estore.domain.converter.OrderConverter.toEntity(OrderDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Order ro.estore.domain.converter.OrderConverter.toEntity(OrderDTO) took 4ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Order ro.estore.domain.converter.OrderConverter.toEntity(OrderDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Order ro.estore.domain.converter.OrderConverter.toEntity(OrderDTO) took 5ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfile ro.estore.domain.converter.UserProfileConverter.toEntity(UserProfileDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfile ro.estore.domain.converter.UserProfileConverter.toEntity(UserProfileDTO) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: User ro.estore.domain.converter.UserConverter.toEntity(UserDTO) took 13ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@252a8aae] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.User
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.User#<null>]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.User
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.UserProfile#<null>]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.WrapVisitor - Wrapped collection in role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.UserProfile] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.UserProfile#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.UserProfile#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.UserProfile (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        user_profile
        (email_address, name, phone_number, surname) 
    values
        (?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@d5d5353: insert into user_profile (email_address, name, phone_number, surname) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.UserProfile#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [ceva@email.com_1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [name_1]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [0123456789_1]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [VARCHAR] - [surname_1]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 38
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@45acdd11]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@45acdd11]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@d5d5353: insert into user_profile (email_address, name, phone_number, surname) values ('ceva@email.com_1', 'name_1', '0123456789_1', 'surname_1')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@d5d5353: insert into user_profile (email_address, name, phone_number, surname) values ('ceva@email.com_1', 'name_1', '0123456789_1', 'surname_1')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Address
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Address] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Address (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        address
        (address_line_1, address_line_2, address_name, city, postcode) 
    values
        (?, ?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@2f4c2cd4: insert into address (address_line_1, address_line_2, address_name, city, postcode) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [addr line 1_1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [addr line 2_1]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [ceva@email.com_1]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [VARCHAR] - [city_1]
 [main] TRACE sql.BasicBinder - binding parameter [5] as [VARCHAR] - [postcode_1]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 92
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@77a074b4]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@77a074b4]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@2f4c2cd4: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1', 'addr line 2_1', 'ceva@email.com_1', 'city_1', 'postcode_1')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@2f4c2cd4: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1', 'addr line 2_1', 'ceva@email.com_1', 'city_1', 'postcode_1')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Address
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Address] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Address (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        address
        (address_line_1, address_line_2, address_name, city, postcode) 
    values
        (?, ?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@1cc680e: insert into address (address_line_1, address_line_2, address_name, city, postcode) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [addr line 1_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [addr line 2_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [ceva@email.com_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [VARCHAR] - [city_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [5] as [VARCHAR] - [postcode_1_2]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 93
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@1dc3502b]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@1dc3502b]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@1cc680e: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1_2', 'addr line 2_1_2', 'ceva@email.com_1_2', 'city_1_2', 'postcode_1_2')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@1cc680e: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1_2', 'addr line 2_1_2', 'ceva@email.com_1_2', 'city_1_2', 'postcode_1_2')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Done cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.User
 [main] TRACE internal.WrapVisitor - Wrapped collection in role: ro.estore.model.entitiy.User.orders
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.User] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.User#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.User#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.User (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        user
        (password, user_profile_id, username) 
    values
        (?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@50fb33a: insert into user (password, user_profile_id, username) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.User#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [username_1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [BIGINT] - [38]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [username_1]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 20
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@2cae9b8]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@2cae9b8]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@50fb33a: insert into user (password, user_profile_id, username) values ('username_1', 38, 'username_1')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@50fb33a: insert into user (password, user_profile_id, username) values ('username_1', 38, 'username_1')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.User
 [main] TRACE internal.Cascade - Cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.User.orders
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Order
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Order
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Order#<null>]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Address
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Address] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Address (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        address
        (address_line_1, address_line_2, address_name, city, postcode) 
    values
        (?, ?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@4228bf58: insert into address (address_line_1, address_line_2, address_name, city, postcode) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [addr line 1_1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [addr line 2_1]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [ceva@email.com_1]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [VARCHAR] - [city_1]
 [main] TRACE sql.BasicBinder - binding parameter [5] as [VARCHAR] - [postcode_1]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 94
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@68b9834c]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@68b9834c]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@4228bf58: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1', 'addr line 2_1', 'ceva@email.com_1', 'city_1', 'postcode_1')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@4228bf58: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1', 'addr line 2_1', 'ceva@email.com_1', 'city_1', 'postcode_1')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE internal.WrapVisitor - Wrapped collection in role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Order] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Order#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Order#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Order (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        `
        
    order` (
        address_id, user_id
    ) 
values
    (?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@60c8a093: insert into `order` (address_id, user_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Order#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [94]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [BIGINT] - [20]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 32
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@44cffc25]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@44cffc25]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@60c8a093: insert into `order` (address_id, user_id) values (94, 20)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@60c8a093: insert into `order` (address_id, user_id) values (94, 20)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Purchase
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Purchase] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Purchase (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        purchase
        (product_id, quantity, order_id) 
    values
        (?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@3bd2af5b: insert into purchase (product_id, quantity, order_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [INTEGER] - [23]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [BIGINT] - [32]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 59
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@4f89331f]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@4f89331f]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@3bd2af5b: insert into purchase (product_id, quantity, order_id) values (1, 23, 32)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@3bd2af5b: insert into purchase (product_id, quantity, order_id) values (1, 23, 32)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Purchase
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Purchase] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Purchase (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        purchase
        (product_id, quantity, order_id) 
    values
        (?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@291373d3: insert into purchase (product_id, quantity, order_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [INTEGER] - [23]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [BIGINT] - [32]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 60
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@372ca2d6]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@372ca2d6]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@291373d3: insert into purchase (product_id, quantity, order_id) values (1, 23, 32)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@291373d3: insert into purchase (product_id, quantity, order_id) values (1, 23, 32)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Done cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Order
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Order
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Order#<null>]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Address
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Address] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Address (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        address
        (address_line_1, address_line_2, address_name, city, postcode) 
    values
        (?, ?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@58ba5b30: insert into address (address_line_1, address_line_2, address_name, city, postcode) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [addr line 1_1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [addr line 2_1]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [ceva@email.com_1]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [VARCHAR] - [city_1]
 [main] TRACE sql.BasicBinder - binding parameter [5] as [VARCHAR] - [postcode_1]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 95
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@4dba773d]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@4dba773d]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@58ba5b30: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1', 'addr line 2_1', 'ceva@email.com_1', 'city_1', 'postcode_1')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@58ba5b30: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1', 'addr line 2_1', 'ceva@email.com_1', 'city_1', 'postcode_1')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE internal.WrapVisitor - Wrapped collection in role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Order] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Order#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Order#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Order (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        `
        
    order` (
        address_id, user_id
    ) 
values
    (?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@eac3a26: insert into `order` (address_id, user_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Order#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [95]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [BIGINT] - [20]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 33
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@10b1a751]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@10b1a751]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@eac3a26: insert into `order` (address_id, user_id) values (95, 20)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@eac3a26: insert into `order` (address_id, user_id) values (95, 20)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Purchase
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Purchase] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Purchase (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        purchase
        (product_id, quantity, order_id) 
    values
        (?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@934b52f: insert into purchase (product_id, quantity, order_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [INTEGER] - [23]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [BIGINT] - [33]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 61
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@2630dbc4]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@2630dbc4]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@934b52f: insert into purchase (product_id, quantity, order_id) values (1, 23, 33)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@934b52f: insert into purchase (product_id, quantity, order_id) values (1, 23, 33)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Purchase
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Purchase] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Purchase (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        purchase
        (product_id, quantity, order_id) 
    values
        (?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@56637cff: insert into purchase (product_id, quantity, order_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [INTEGER] - [23]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [BIGINT] - [33]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 62
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@2938127d]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@2938127d]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@56637cff: insert into purchase (product_id, quantity, order_id) values (1, 23, 33)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@56637cff: insert into purchase (product_id, quantity, order_id) values (1, 23, 33)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Done cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Done cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.User
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object) took 153ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User) took 9ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.create(DomainDTO) took 177ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserServiceImpl.create]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@4c1bdcc2], method [public void ro.estore.domain.service.impl.UserServiceImplTest.createUser()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@4c1bdcc2, testMethod = createUser@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@ff23ae7]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Order#32], EntityKey[ro.estore.model.entitiy.Order#33], EntityKey[ro.estore.model.entitiy.Purchase#59], EntityKey[ro.estore.model.entitiy.Purchase#60], EntityKey[ro.estore.model.entitiy.Purchase#61], EntityKey[ro.estore.model.entitiy.Purchase#62], EntityKey[ro.estore.model.entitiy.UserProfile#38], EntityKey[ro.estore.model.entitiy.User#20], EntityKey[ro.estore.model.entitiy.Address#95], EntityKey[ro.estore.model.entitiy.Address#93], EntityKey[ro.estore.model.entitiy.Address#94], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Address#92]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@252a8aae] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@5634d0f4] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [5b082bee-5a09-4792-a9dd-f3872b076833]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@423b2b62]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@4c1bdcc2, testMethod = createUser@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@4c1bdcc2, testMethod = createUser@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.UserServiceImplTest@2b7962a2]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@2b7962a2, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 12, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.UserServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserService ro.estore.domain.service.impl.UserServiceImplTest.userService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.UserServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.UserServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserServiceImplTest@2b7962a2]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@2b7962a2], method [public void ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@2b7962a2, testMethod = findUserByUsernameTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.findUserByUsernameTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@2b7962a2, testMethod = findUserByUsernameTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 13, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@2b7962a2, testMethod = findUserByUsernameTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [c5b1d72a-5877-453c-83f1-3351906de617] at timestamp: 14689155646
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@f1d0004]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@6e4f263e] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@48b4a043] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@2b7962a2, testMethod = findUserByUsernameTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@48b4a043] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@6e4f263e] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserServiceImpl.findByUsername]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.service.impl.UserServiceImpl.findByUsername(String)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsername(String)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@48b4a043] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG internal.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0)
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0)
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@48b4a043] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0)
 [main] TRACE spi.HQLQueryPlan - Find: select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0
 [main] TRACE spi.QueryParameters - Named parameters: {param0=user0}
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_,
        user0_.password as password2_4_,
        user0_.user_profile_id as user_pro4_4_,
        user0_.username as username3_4_ 
    from
        user user0_ 
    where
        user0_.username=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@4821aa9f: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@4821aa9f: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [user0]
 [main] TRACE loader.Loader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@5f481b73]
 [main] TRACE loader.Loader - Processing result set
 [main] DEBUG logging.DelegatingBasicLogger - Result set row: 0
 [main] TRACE sql.BasicExtractor - extracted value ([user_id1_4_] : [BIGINT]) - [1]
 [main] DEBUG loader.Loader - Result row: EntityKey[ro.estore.model.entitiy.User#1]
 [main] TRACE loader.Loader - Initializing object from ResultSet: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE sql.BasicExtractor - extracted value ([password2_4_] : [VARCHAR]) - [pass0]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro4_4_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([username3_4_] : [VARCHAR]) - [user0]
 [main] TRACE loader.Loader - Done processing result set (1 rows)
 [main] TRACE loader.Loader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        userprofil0_.user_profile_id as user_pro1_5_0_,
        userprofil0_.email_address as email_ad2_5_0_,
        userprofil0_.name as name3_5_0_,
        userprofil0_.phone_number as phone_nu4_5_0_,
        userprofil0_.surname as surname5_5_0_ 
    from
        user_profile userprofil0_ 
    where
        userprofil0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@4996c99: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@4996c99: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@1b956cfa]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_0_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_0_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_0_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_0_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@1b956cfa]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@1b956cfa]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@4996c99: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@4996c99: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.UserProfile#1
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@4821aa9f: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0']
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@5f481b73]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@4821aa9f: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0']
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsername(String) took 27ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User)
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.User.orders#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        orders0_.user_id as user_id3_1_0_,
        orders0_.order_id as order_id1_1_0_,
        orders0_.order_id as order_id1_1_1_,
        orders0_.address_id as address_2_1_1_,
        address1_.address_id as address_1_0_2_,
        address1_.address_line_1 as address_2_0_2_,
        address1_.address_line_2 as address_3_0_2_,
        address1_.address_name as address_4_0_2_,
        address1_.city as city5_0_2_,
        address1_.postcode as postcode6_0_2_ 
    from
        `
    order` orders0_ inner join
        address address1_ 
            on orders0_.address_id=address1_.address_id 
    where
        orders0_.user_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@75d4a80f: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@75d4a80f: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@4596f8f3]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@4596f8f3]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.User.orders#1]]
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([order_id1_1_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_1_1_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_2_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_2_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_2_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_2_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_2_] : [VARCHAR]) - [00000]
 [main] TRACE sql.BasicExtractor - extracted value ([user_id3_1_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.User.orders#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.User.orders#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.User.orders#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([order_id1_1_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] not located in load context
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.User.orders#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.User.orders#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@4596f8f3, coll=[ro.estore.model.entitiy.User.orders#1]>@2370ac7a]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@4596f8f3, coll=[ro.estore.model.entitiy.User.orders#1]>@2370ac7a]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.User.orders#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@4596f8f3]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@4596f8f3]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@75d4a80f: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@75d4a80f: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchases0_.order_id as order_id4_3_0_,
        purchases0_.purchase_id as purchase1_3_0_,
        purchases0_.purchase_id as purchase1_3_1_,
        purchases0_.product_id as product_3_3_1_,
        purchases0_.quantity as quantity2_3_1_,
        product1_.product_id as product_1_2_2_,
        product1_.brand as brand2_2_2_,
        product1_.description as descript3_2_2_,
        product1_.name as name4_2_2_,
        product1_.price as price5_2_2_,
        product1_.stock as stock6_2_2_ 
    from
        purchase purchases0_ 
    inner join
        product product1_ 
            on purchases0_.product_id=product1_.product_id 
    where
        purchases0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@534180a2: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@534180a2: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@6cf0a747]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@6cf0a747]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] not located in load context
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_1_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_2_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_2_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_2_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_2_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_2_] : [INTEGER]) - [14]
 [main] TRACE sql.BasicExtractor - extracted value ([order_id4_3_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@6cf0a747, coll=[ro.estore.model.entitiy.Order.purchases#1]>@58fef7f7]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@6cf0a747, coll=[ro.estore.model.entitiy.Order.purchases#1]>@58fef7f7]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@6cf0a747]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@6cf0a747]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@534180a2: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@534180a2: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 26ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        addresses0_.user_profile_id as user_pro7_0_0_,
        addresses0_.address_id as address_1_0_0_,
        addresses0_.address_id as address_1_0_1_,
        addresses0_.address_line_1 as address_2_0_1_,
        addresses0_.address_line_2 as address_3_0_1_,
        addresses0_.address_name as address_4_0_1_,
        addresses0_.city as city5_0_1_,
        addresses0_.postcode as postcode6_0_1_ 
    from
        address addresses0_ 
    where
        addresses0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@31ddb930: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@31ddb930: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@12eedfee]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@12eedfee]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] not located in load context
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro7_0_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 0
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@12eedfee, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@3c3c4a71]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@12eedfee, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@3c3c4a71]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@12eedfee]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@12eedfee]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@31ddb930: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@31ddb930: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 19ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User) took 68ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.service.impl.UserServiceImpl.findByUsername(String) took 97ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserServiceImpl.findByUsername]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@2b7962a2], method [public void ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@2b7962a2, testMethod = findUserByUsernameTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@1352434e]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.User#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1], CollectionKey[ro.estore.model.entitiy.User.orders#1], CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@48b4a043] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@6e4f263e] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [c5b1d72a-5877-453c-83f1-3351906de617]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@4f9a6c2d]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@2b7962a2, testMethod = findUserByUsernameTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@2b7962a2, testMethod = findUserByUsernameTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.UserServiceImplTest@2b6fcb9f]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@2b6fcb9f, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 14, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.UserServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserService ro.estore.domain.service.impl.UserServiceImplTest.userService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.UserServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.UserServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserServiceImplTest@2b6fcb9f]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@2b6fcb9f], method [public void ro.estore.domain.service.impl.UserServiceImplTest.deleteUserTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@2b6fcb9f, testMethod = deleteUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.deleteUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@2b6fcb9f, testMethod = deleteUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 15, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@2b6fcb9f, testMethod = deleteUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserServiceImplTest.deleteUserTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [4ad409d2-a90a-4481-81c5-d145f6c4db94] at timestamp: 14689155647
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3d96fa9e]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@3b545206] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@77bb48d5] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@2b6fcb9f, testMethod = deleteUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@77bb48d5] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@3b545206] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@77bb48d5] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.User#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.password as password2_4_0_,
        user0_.user_profile_id as user_pro4_4_0_,
        user0_.username as username3_4_0_,
        userprofil1_.user_profile_id as user_pro1_5_1_,
        userprofil1_.email_address as email_ad2_5_1_,
        userprofil1_.name as name3_5_1_,
        userprofil1_.phone_number as phone_nu4_5_1_,
        userprofil1_.surname as surname5_5_1_ 
    from
        user user0_ 
    inner join
        user_profile userprofil1_ 
            on user0_.user_profile_id=userprofil1_.user_profile_id 
    where
        user0_.user_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@181d8899: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@181d8899: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@12d5c30e]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro1_5_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE sql.BasicExtractor - extracted value ([password2_4_0_] : [VARCHAR]) - [pass0]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro4_4_0_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([username3_4_0_] : [VARCHAR]) - [user0]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_1_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_1_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_1_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_1_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@12d5c30e]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@12d5c30e]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@181d8899: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@181d8899: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.User#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 28ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User)
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.User.orders#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        orders0_.user_id as user_id3_1_0_,
        orders0_.order_id as order_id1_1_0_,
        orders0_.order_id as order_id1_1_1_,
        orders0_.address_id as address_2_1_1_,
        address1_.address_id as address_1_0_2_,
        address1_.address_line_1 as address_2_0_2_,
        address1_.address_line_2 as address_3_0_2_,
        address1_.address_name as address_4_0_2_,
        address1_.city as city5_0_2_,
        address1_.postcode as postcode6_0_2_ 
    from
        `
    order` orders0_ inner join
        address address1_ 
            on orders0_.address_id=address1_.address_id 
    where
        orders0_.user_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@267dc982: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@267dc982: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@439b15f2]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@439b15f2]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.User.orders#1]]
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([order_id1_1_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_1_1_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_2_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_2_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_2_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_2_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_2_] : [VARCHAR]) - [00000]
 [main] TRACE sql.BasicExtractor - extracted value ([user_id3_1_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.User.orders#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.User.orders#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.User.orders#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([order_id1_1_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] not located in load context
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.User.orders#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.User.orders#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@439b15f2, coll=[ro.estore.model.entitiy.User.orders#1]>@272ce069]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@439b15f2, coll=[ro.estore.model.entitiy.User.orders#1]>@272ce069]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.User.orders#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@439b15f2]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@439b15f2]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@267dc982: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@267dc982: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchases0_.order_id as order_id4_3_0_,
        purchases0_.purchase_id as purchase1_3_0_,
        purchases0_.purchase_id as purchase1_3_1_,
        purchases0_.product_id as product_3_3_1_,
        purchases0_.quantity as quantity2_3_1_,
        product1_.product_id as product_1_2_2_,
        product1_.brand as brand2_2_2_,
        product1_.description as descript3_2_2_,
        product1_.name as name4_2_2_,
        product1_.price as price5_2_2_,
        product1_.stock as stock6_2_2_ 
    from
        purchase purchases0_ 
    inner join
        product product1_ 
            on purchases0_.product_id=product1_.product_id 
    where
        purchases0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@3d7fb838: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@3d7fb838: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@1c26273d]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@1c26273d]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] not located in load context
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_1_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_2_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_2_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_2_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_2_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_2_] : [INTEGER]) - [14]
 [main] TRACE sql.BasicExtractor - extracted value ([order_id4_3_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@1c26273d, coll=[ro.estore.model.entitiy.Order.purchases#1]>@3a26ec8d]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@1c26273d, coll=[ro.estore.model.entitiy.Order.purchases#1]>@3a26ec8d]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@1c26273d]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@1c26273d]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@3d7fb838: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@3d7fb838: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 27ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        addresses0_.user_profile_id as user_pro7_0_0_,
        addresses0_.address_id as address_1_0_0_,
        addresses0_.address_id as address_1_0_1_,
        addresses0_.address_line_1 as address_2_0_1_,
        addresses0_.address_line_2 as address_3_0_1_,
        addresses0_.address_name as address_4_0_1_,
        addresses0_.city as city5_0_1_,
        addresses0_.postcode as postcode6_0_1_ 
    from
        address addresses0_ 
    where
        addresses0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@17143b3b: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@17143b3b: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@100c8b75]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@100c8b75]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] not located in load context
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro7_0_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 0
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@100c8b75, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@2bc378f7]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@100c8b75, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@2bc378f7]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@100c8b75]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@100c8b75]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@17143b3b: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@17143b3b: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 23ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User) took 84ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 114ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserServiceImpl.findById]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@77bb48d5] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.User#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1], CollectionKey[ro.estore.model.entitiy.User.orders#1], CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@3b545206] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserServiceImpl.remove]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.domain.service.impl.GenericServiceImpl.remove(DomainDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: User ro.estore.domain.converter.UserConverter.toEntity(UserDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Order ro.estore.domain.converter.OrderConverter.toEntity(OrderDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Order ro.estore.domain.converter.OrderConverter.toEntity(OrderDTO) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfile ro.estore.domain.converter.UserProfileConverter.toEntity(UserProfileDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfile ro.estore.domain.converter.UserProfileConverter.toEntity(UserProfileDTO) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: User ro.estore.domain.converter.UserConverter.toEntity(UserDTO) took 4ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@77bb48d5] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@77bb48d5] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.User#1]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@77bb48d5] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.User
 [main] TRACE internal.Cascade - Cascade ACTION_DELETE for collection: ro.estore.model.entitiy.User.orders
 [main] TRACE spi.CascadingActions$1 - Cascading to delete: ro.estore.model.entitiy.Order
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Cascade ACTION_DELETE for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE spi.CascadingActions$1 - Cascading to delete: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.Cascade - Done cascade ACTION_DELETE for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Done cascade ACTION_DELETE for collection: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.User
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.User
 [main] TRACE spi.CascadingActions$1 - Cascading to delete: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Cascade ACTION_DELETE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE spi.CascadingActions$1 - Cascading to delete: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.Cascade - Done cascade ACTION_DELETE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Deleting orphans for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done deleting orphans for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.User
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object) took 16ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.domain.service.impl.GenericServiceImpl.remove(DomainDTO) took 22ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserServiceImpl.remove]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@77bb48d5] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.User#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1], CollectionKey[ro.estore.model.entitiy.User.orders#1], CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=5} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@3b545206] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@77bb48d5] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.User#1]
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 2ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@2b6fcb9f], method [public void ro.estore.domain.service.impl.UserServiceImplTest.deleteUserTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@2b6fcb9f, testMethod = deleteUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@1f346ad2]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.User#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1], CollectionKey[ro.estore.model.entitiy.User.orders#1], CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=5} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@77bb48d5] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@3b545206] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [4ad409d2-a90a-4481-81c5-d145f6c4db94]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@46a145ba]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@2b6fcb9f, testMethod = deleteUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@2b6fcb9f, testMethod = deleteUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] TRACE context.TestContextManager - afterTestClass(): class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@57855c9a testClass = UserServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b084709 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - beforeTestClass(): class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@363c4251 testClass = PurchaseRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@1a1f5f71]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@363c4251 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@1a1f5f71, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 16, missCount = 1]
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest' to bean named 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.PurchaseRepository ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.purchaseRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest' to bean named 'purchaseRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseRepositoryJpaImplTest.findPurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@1a1f5f71]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.findPurchaseTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseRepositoryJpaImplTest.setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.setUp()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseRepositoryJpaImplTest.updatePurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.updatePurchaseTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseRepositoryJpaImplTest.deletePurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.deletePurchaseTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@1a1f5f71], method [public void ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.findPurchaseTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@363c4251 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@1a1f5f71, testMethod = findPurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseRepositoryJpaImplTest.findPurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@363c4251 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@1a1f5f71, testMethod = findPurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@21e20ad5 transactionManagerName = '', defaultRollback = true] for test class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 17, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@363c4251 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@1a1f5f71, testMethod = findPurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.findPurchaseTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [c0c3f07a-3f1f-4ebb-8fdf-379c4f6ce942] at timestamp: 14689155649
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@68868328]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@173a6728] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@1a22e0ef] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@363c4251 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@1a1f5f71, testMethod = findPurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1a22e0ef] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchase0_.purchase_id as purchase1_3_0_,
        purchase0_.product_id as product_3_3_0_,
        purchase0_.quantity as quantity2_3_0_,
        product1_.product_id as product_1_2_1_,
        product1_.brand as brand2_2_1_,
        product1_.description as descript3_2_1_,
        product1_.name as name4_2_1_,
        product1_.price as price5_2_1_,
        product1_.stock as stock6_2_1_ 
    from
        purchase purchase0_ 
    inner join
        product product1_ 
            on purchase0_.product_id=product1_.product_id 
    where
        purchase0_.purchase_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@67514bdd: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@67514bdd: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@3b920bdc]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_0_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_0_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_1_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_1_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_1_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_1_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_1_] : [INTEGER]) - [14]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@3b920bdc]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@3b920bdc]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@67514bdd: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@67514bdd: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Purchase#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 36ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@1a1f5f71], method [public void ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.findPurchaseTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@363c4251 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@1a1f5f71, testMethod = findPurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@1f9f381d]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@1a22e0ef] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@173a6728] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [c0c3f07a-3f1f-4ebb-8fdf-379c4f6ce942]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@34780cd9]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@363c4251 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@1a1f5f71, testMethod = findPurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@363c4251 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@1a1f5f71, testMethod = findPurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@623ebac7]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@363c4251 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@623ebac7, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 18, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.PurchaseRepository ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.purchaseRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@623ebac7]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@623ebac7], method [public void ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.deletePurchaseTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@363c4251 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@623ebac7, testMethod = deletePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseRepositoryJpaImplTest.deletePurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@363c4251 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@623ebac7, testMethod = deletePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 19, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@363c4251 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@623ebac7, testMethod = deletePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.deletePurchaseTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [68556164-2639-4c89-9f21-1109afb5a918] at timestamp: 14689155650
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@79a04e5f]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@66b59b7d] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@53311681] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@363c4251 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@623ebac7, testMethod = deletePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@53311681] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchase0_.purchase_id as purchase1_3_0_,
        purchase0_.product_id as product_3_3_0_,
        purchase0_.quantity as quantity2_3_0_,
        product1_.product_id as product_1_2_1_,
        product1_.brand as brand2_2_1_,
        product1_.description as descript3_2_1_,
        product1_.name as name4_2_1_,
        product1_.price as price5_2_1_,
        product1_.stock as stock6_2_1_ 
    from
        purchase purchase0_ 
    inner join
        product product1_ 
            on purchase0_.product_id=product1_.product_id 
    where
        purchase0_.purchase_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@4437ac07: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@4437ac07: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@3f1ed068]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_0_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_0_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_1_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_1_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_1_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_1_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_1_] : [INTEGER]) - [14]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@3f1ed068]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@3f1ed068]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@4437ac07: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@4437ac07: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Purchase#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 21ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@53311681] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@53311681] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Purchase#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@53311681] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@623ebac7], method [public void ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.deletePurchaseTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@363c4251 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@623ebac7, testMethod = deletePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@574a89e2]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=1} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@53311681] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@66b59b7d] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [68556164-2639-4c89-9f21-1109afb5a918]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@1e1e9ef3]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@363c4251 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@623ebac7, testMethod = deletePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@363c4251 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@623ebac7, testMethod = deletePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@3dd31157]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@363c4251 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@3dd31157, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 20, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.PurchaseRepository ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.purchaseRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@3dd31157]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@3dd31157], method [public void ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.updatePurchaseTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@363c4251 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@3dd31157, testMethod = updatePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseRepositoryJpaImplTest.updatePurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@363c4251 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@3dd31157, testMethod = updatePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 21, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@363c4251 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@3dd31157, testMethod = updatePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.updatePurchaseTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [b679e55f-b67d-4fe5-8615-c8bea9e9ed00] at timestamp: 14689155651
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7dbe2ebf]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@4adc663e] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@885e7ff] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@363c4251 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@3dd31157, testMethod = updatePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@885e7ff] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchase0_.purchase_id as purchase1_3_0_,
        purchase0_.product_id as product_3_3_0_,
        purchase0_.quantity as quantity2_3_0_,
        product1_.product_id as product_1_2_1_,
        product1_.brand as brand2_2_1_,
        product1_.description as descript3_2_1_,
        product1_.name as name4_2_1_,
        product1_.price as price5_2_1_,
        product1_.stock as stock6_2_1_ 
    from
        purchase purchase0_ 
    inner join
        product product1_ 
            on purchase0_.product_id=product1_.product_id 
    where
        purchase0_.purchase_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@8bd86c8: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@8bd86c8: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@4fa9ab6]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_0_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_0_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_1_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_1_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_1_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_1_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_1_] : [INTEGER]) - [14]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@4fa9ab6]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@4fa9ab6]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@8bd86c8: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@8bd86c8: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Purchase#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 22ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@885e7ff] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.AbstractSaveEventListener - Persistent instance of: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultMergeEventListener - Ignoring persistent instance
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object) took 4ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@885e7ff] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 2ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@3dd31157], method [public void ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.updatePurchaseTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@363c4251 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@3dd31157, testMethod = updatePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@3e3315d9]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@885e7ff] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@4adc663e] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [b679e55f-b67d-4fe5-8615-c8bea9e9ed00]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@64db4967]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@363c4251 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@3dd31157, testMethod = updatePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@363c4251 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@3dd31157, testMethod = updatePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] TRACE context.TestContextManager - afterTestClass(): class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@363c4251 testClass = PurchaseRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7afc4db9 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] TRACE context.TestContextManager - beforeTestClass(): class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@74e6094b testClass = PurchaseServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.PurchaseServiceImplTest@5cf3157b]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@74e6094b testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@5cf3157b, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 22, missCount = 1]
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.PurchaseServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.PurchaseServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.PurchaseServiceImplTest' to bean named 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.PurchaseServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.PurchaseService ro.estore.domain.service.impl.PurchaseServiceImplTest.purchaseService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseServiceImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.PurchaseServiceImplTest' to bean named 'purchaseServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImplTest.findPurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.PurchaseServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.PurchaseServiceImplTest@5cf3157b]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.PurchaseServiceImplTest.findPurchaseTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImplTest.setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.PurchaseServiceImplTest.setUp()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImplTest.updatePurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.PurchaseServiceImplTest.updatePurchaseTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImplTest.deletePurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.PurchaseServiceImplTest.deletePurchaseTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.PurchaseServiceImplTest@5cf3157b], method [public void ro.estore.domain.service.impl.PurchaseServiceImplTest.findPurchaseTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@74e6094b testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@5cf3157b, testMethod = findPurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImplTest.findPurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@74e6094b testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@5cf3157b, testMethod = findPurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.domain.service.impl.PurchaseServiceImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@21e20ad5 transactionManagerName = '', defaultRollback = true] for test class [ro.estore.domain.service.impl.PurchaseServiceImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 23, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@74e6094b testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@5cf3157b, testMethod = findPurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.PurchaseServiceImplTest.findPurchaseTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [89d72119-a158-4141-85ab-1a323a7bc16e] at timestamp: 14689155651
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@79e66b2f]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@17273273] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@5f69e2b] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@74e6094b testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@5cf3157b, testMethod = findPurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5f69e2b] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@17273273] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.PurchaseServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5f69e2b] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchase0_.purchase_id as purchase1_3_0_,
        purchase0_.product_id as product_3_3_0_,
        purchase0_.quantity as quantity2_3_0_,
        product1_.product_id as product_1_2_1_,
        product1_.brand as brand2_2_1_,
        product1_.description as descript3_2_1_,
        product1_.name as name4_2_1_,
        product1_.price as price5_2_1_,
        product1_.stock as stock6_2_1_ 
    from
        purchase purchase0_ 
    inner join
        product product1_ 
            on purchase0_.product_id=product1_.product_id 
    where
        purchase0_.purchase_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@984169e: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@984169e: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@43f1bb92]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_0_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_0_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_1_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_1_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_1_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_1_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_1_] : [INTEGER]) - [14]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@43f1bb92]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@43f1bb92]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@984169e: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@984169e: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Purchase#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 28ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 38ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.PurchaseServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.PurchaseServiceImplTest@5cf3157b], method [public void ro.estore.domain.service.impl.PurchaseServiceImplTest.findPurchaseTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@74e6094b testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@5cf3157b, testMethod = findPurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@7544ac86]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@5f69e2b] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@17273273] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [89d72119-a158-4141-85ab-1a323a7bc16e]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@3b27b497]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@74e6094b testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@5cf3157b, testMethod = findPurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@74e6094b testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@5cf3157b, testMethod = findPurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.PurchaseServiceImplTest@b1534d3]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@74e6094b testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@b1534d3, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 24, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.PurchaseServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.PurchaseServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.PurchaseServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.PurchaseService ro.estore.domain.service.impl.PurchaseServiceImplTest.purchaseService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.PurchaseServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.PurchaseServiceImplTest@b1534d3]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.PurchaseServiceImplTest@b1534d3], method [public void ro.estore.domain.service.impl.PurchaseServiceImplTest.deletePurchaseTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@74e6094b testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@b1534d3, testMethod = deletePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImplTest.deletePurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@74e6094b testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@b1534d3, testMethod = deletePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 25, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@74e6094b testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@b1534d3, testMethod = deletePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.PurchaseServiceImplTest.deletePurchaseTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [aa2911df-7f10-4263-86e1-bf13e2617c97] at timestamp: 14689155652
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@489091bd]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@512d6e60] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@1de9b505] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@74e6094b testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@b1534d3, testMethod = deletePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1de9b505] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@512d6e60] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.PurchaseServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1de9b505] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchase0_.purchase_id as purchase1_3_0_,
        purchase0_.product_id as product_3_3_0_,
        purchase0_.quantity as quantity2_3_0_,
        product1_.product_id as product_1_2_1_,
        product1_.brand as brand2_2_1_,
        product1_.description as descript3_2_1_,
        product1_.name as name4_2_1_,
        product1_.price as price5_2_1_,
        product1_.stock as stock6_2_1_ 
    from
        purchase purchase0_ 
    inner join
        product product1_ 
            on purchase0_.product_id=product1_.product_id 
    where
        purchase0_.purchase_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@7b122839: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@7b122839: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@3743539f]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_0_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_0_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_1_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_1_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_1_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_1_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_1_] : [INTEGER]) - [14]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@3743539f]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@3743539f]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@7b122839: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@7b122839: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Purchase#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 22ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 24ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.PurchaseServiceImpl.findById]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1de9b505] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@512d6e60] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.PurchaseServiceImpl.remove]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.domain.service.impl.GenericServiceImpl.remove(DomainDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1de9b505] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1de9b505] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1de9b505] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Purchase#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.domain.service.impl.GenericServiceImpl.remove(DomainDTO) took 4ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.PurchaseServiceImpl.remove]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1de9b505] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=1} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@512d6e60] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.PurchaseServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1de9b505] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 2ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.PurchaseServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.PurchaseServiceImplTest@b1534d3], method [public void ro.estore.domain.service.impl.PurchaseServiceImplTest.deletePurchaseTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@74e6094b testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@b1534d3, testMethod = deletePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@1afd72ef]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=1} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@1de9b505] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@512d6e60] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [aa2911df-7f10-4263-86e1-bf13e2617c97]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@2cc75074]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@74e6094b testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@b1534d3, testMethod = deletePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@74e6094b testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@b1534d3, testMethod = deletePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.PurchaseServiceImplTest@445bb139]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@74e6094b testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@445bb139, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 26, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.PurchaseServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.PurchaseServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.PurchaseServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.PurchaseService ro.estore.domain.service.impl.PurchaseServiceImplTest.purchaseService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.PurchaseServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.PurchaseServiceImplTest@445bb139]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.PurchaseServiceImplTest@445bb139], method [public void ro.estore.domain.service.impl.PurchaseServiceImplTest.updatePurchaseTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@74e6094b testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@445bb139, testMethod = updatePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImplTest.updatePurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@74e6094b testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@445bb139, testMethod = updatePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 27, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@74e6094b testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@445bb139, testMethod = updatePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.PurchaseServiceImplTest.updatePurchaseTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [17c979ab-f57a-4ac6-8f15-fa659cad6172] at timestamp: 14689155653
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5f254608]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@2eeb0f9b] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@1b1c538d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@74e6094b testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@445bb139, testMethod = updatePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1b1c538d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@2eeb0f9b] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.PurchaseServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1b1c538d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchase0_.purchase_id as purchase1_3_0_,
        purchase0_.product_id as product_3_3_0_,
        purchase0_.quantity as quantity2_3_0_,
        product1_.product_id as product_1_2_1_,
        product1_.brand as brand2_2_1_,
        product1_.description as descript3_2_1_,
        product1_.name as name4_2_1_,
        product1_.price as price5_2_1_,
        product1_.stock as stock6_2_1_ 
    from
        purchase purchase0_ 
    inner join
        product product1_ 
            on purchase0_.product_id=product1_.product_id 
    where
        purchase0_.purchase_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@1645f294: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@1645f294: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@6325f352]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_0_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_0_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_1_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_1_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_1_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_1_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_1_] : [INTEGER]) - [14]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@6325f352]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@6325f352]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@1645f294: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@1645f294: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Purchase#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 19ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 21ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.PurchaseServiceImpl.findById]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1b1c538d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@2eeb0f9b] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.PurchaseServiceImpl.update]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(DomainDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1b1c538d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1b1c538d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultMergeEventListener - Merging detached instance
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(DomainDTO) took 8ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.PurchaseServiceImpl.update]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1b1c538d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@2eeb0f9b] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.PurchaseServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1b1c538d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 3ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.PurchaseServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.PurchaseServiceImplTest@445bb139], method [public void ro.estore.domain.service.impl.PurchaseServiceImplTest.updatePurchaseTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@74e6094b testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@445bb139, testMethod = updatePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@29a98d9f]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@1b1c538d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@2eeb0f9b] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [17c979ab-f57a-4ac6-8f15-fa659cad6172]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@2da3b078]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@74e6094b testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@445bb139, testMethod = updatePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@74e6094b testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@445bb139, testMethod = updatePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] TRACE context.TestContextManager - afterTestClass(): class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@74e6094b testClass = PurchaseServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a485a36 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - beforeTestClass(): class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@1a96d94c]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@1a96d94c, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 28, missCount = 1]
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest' to bean named 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserProfileRepository ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.userProfileRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest' to bean named 'userProfileRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest' to bean named 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileRepositoryJpaImplTest.setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@1a96d94c]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.setUp()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileRepositoryJpaImplTest.findUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.findUserProfileTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileRepositoryJpaImplTest.updateUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.updateUserProfileTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileRepositoryJpaImplTest.createUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.createUserProfileTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileRepositoryJpaImplTest.deleteUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.deleteUserProfileTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@1a96d94c], method [public void ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.findUserProfileTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@1a96d94c, testMethod = findUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileRepositoryJpaImplTest.findUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@1a96d94c, testMethod = findUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@21e20ad5 transactionManagerName = '', defaultRollback = true] for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 29, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@1a96d94c, testMethod = findUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.findUserProfileTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [5d66b181-82ac-433c-bf77-61540620c0e5] at timestamp: 14689155654
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@26d41711]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@298f0a0b] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@2b960a7] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@1a96d94c, testMethod = findUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@2b960a7] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        userprofil0_.user_profile_id as user_pro1_5_0_,
        userprofil0_.email_address as email_ad2_5_0_,
        userprofil0_.name as name3_5_0_,
        userprofil0_.phone_number as phone_nu4_5_0_,
        userprofil0_.surname as surname5_5_0_ 
    from
        user_profile userprofil0_ 
    where
        userprofil0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@31dfc6f5: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@31dfc6f5: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@37b52340]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_0_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_0_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_0_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_0_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@37b52340]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@37b52340]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@31dfc6f5: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@31dfc6f5: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.UserProfile#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 21ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@1a96d94c], method [public void ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.findUserProfileTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@1a96d94c, testMethod = findUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@60e9c3a5]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@2b960a7] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@298f0a0b] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [5d66b181-82ac-433c-bf77-61540620c0e5]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@7e5843db]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@1a96d94c, testMethod = findUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@1a96d94c, testMethod = findUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@459f703f]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@459f703f, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 30, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserProfileRepository ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.userProfileRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@459f703f]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@459f703f], method [public void ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.updateUserProfileTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@459f703f, testMethod = updateUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileRepositoryJpaImplTest.updateUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@459f703f, testMethod = updateUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 31, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@459f703f, testMethod = updateUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.updateUserProfileTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [e2483308-a467-4457-906f-725203f81836] at timestamp: 14689155654
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@10c72a6f]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@70e94ecb] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@56cfe111] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@459f703f, testMethod = updateUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@56cfe111] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        userprofil0_.user_profile_id as user_pro1_5_0_,
        userprofil0_.email_address as email_ad2_5_0_,
        userprofil0_.name as name3_5_0_,
        userprofil0_.phone_number as phone_nu4_5_0_,
        userprofil0_.surname as surname5_5_0_ 
    from
        user_profile userprofil0_ 
    where
        userprofil0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@7e446d92: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@7e446d92: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@57f9b467]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_0_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_0_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_0_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_0_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@57f9b467]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@57f9b467]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@7e446d92: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@7e446d92: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.UserProfile#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 13ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@56cfe111] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.AbstractSaveEventListener - Persistent instance of: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.DefaultMergeEventListener - Ignoring persistent instance
 [main] TRACE internal.Cascade - Processing cascade ACTION_MERGE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Cascade ACTION_MERGE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done cascade ACTION_MERGE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done processing cascade ACTION_MERGE for: ro.estore.model.entitiy.UserProfile
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@56cfe111] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 0ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@459f703f], method [public void ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.updateUserProfileTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@459f703f, testMethod = updateUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@1947596f]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@56cfe111] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@70e94ecb] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [e2483308-a467-4457-906f-725203f81836]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@3078cac]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@459f703f, testMethod = updateUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@459f703f, testMethod = updateUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@f6de586]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@f6de586, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 32, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserProfileRepository ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.userProfileRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@f6de586]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@f6de586], method [public void ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.deleteUserProfileTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@f6de586, testMethod = deleteUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileRepositoryJpaImplTest.deleteUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@f6de586, testMethod = deleteUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 33, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@f6de586, testMethod = deleteUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.deleteUserProfileTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [bdbfc476-decd-4cc7-8137-97f605458576] at timestamp: 14689155654
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@23f86d8a]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@2264ea32] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@7d3c09ec] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@f6de586, testMethod = deleteUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@7d3c09ec] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        userprofil0_.user_profile_id as user_pro1_5_0_,
        userprofil0_.email_address as email_ad2_5_0_,
        userprofil0_.name as name3_5_0_,
        userprofil0_.phone_number as phone_nu4_5_0_,
        userprofil0_.surname as surname5_5_0_ 
    from
        user_profile userprofil0_ 
    where
        userprofil0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@71e4b308: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@71e4b308: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@11900483]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_0_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_0_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_0_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_0_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@11900483]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@11900483]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@71e4b308: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@71e4b308: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.UserProfile#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 10ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@7d3c09ec] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@7d3c09ec] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Cascade ACTION_DELETE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        addresses0_.user_profile_id as user_pro7_0_0_,
        addresses0_.address_id as address_1_0_0_,
        addresses0_.address_id as address_1_0_1_,
        addresses0_.address_line_1 as address_2_0_1_,
        addresses0_.address_line_2 as address_3_0_1_,
        addresses0_.address_name as address_4_0_1_,
        addresses0_.city as city5_0_1_,
        addresses0_.postcode as postcode6_0_1_ 
    from
        address addresses0_ 
    where
        addresses0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@5de6cf3a: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@5de6cf3a: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@4cc36c19]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@4cc36c19]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_1_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_1_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_1_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_1_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_1_] : [VARCHAR]) - [00000]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro7_0_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@4cc36c19, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@2100d047]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@4cc36c19, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@2100d047]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@4cc36c19]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@4cc36c19]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@5de6cf3a: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@5de6cf3a: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] TRACE spi.CascadingActions$1 - Cascading to delete: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.Cascade - Done cascade ACTION_DELETE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Deleting orphans for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done deleting orphans for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object) took 18ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@7d3c09ec] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@f6de586], method [public void ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.deleteUserProfileTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@f6de586, testMethod = deleteUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@4af45442]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=2} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@7d3c09ec] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@2264ea32] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [bdbfc476-decd-4cc7-8137-97f605458576]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@1d805aa1]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@f6de586, testMethod = deleteUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@f6de586, testMethod = deleteUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@176f7f3b]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@176f7f3b, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 34, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserProfileRepository ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.userProfileRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@176f7f3b]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@176f7f3b], method [public void ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.createUserProfileTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@176f7f3b, testMethod = createUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileRepositoryJpaImplTest.createUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@176f7f3b, testMethod = createUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 35, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@176f7f3b, testMethod = createUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.createUserProfileTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [a14e8f2e-b5bb-442a-ac73-773ef5145756] at timestamp: 14689155655
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2bc426f0]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@4bd51d3e] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@33425811] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@176f7f3b, testMethod = createUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfile ro.estore.util.TestUtils.createUserProfile(String)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfile ro.estore.util.TestUtils.createUserProfile(String) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@33425811] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.UserProfile#<null>]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.WrapVisitor - Wrapped collection in role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.UserProfile] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.UserProfile#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.UserProfile#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.UserProfile (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        user_profile
        (email_address, name, phone_number, surname) 
    values
        (?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@6d11ceef: insert into user_profile (email_address, name, phone_number, surname) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.UserProfile#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [ceva@email.com_1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [name_1]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [0123456789_1]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [VARCHAR] - [surname_1]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 39
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@4cb2918c]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@4cb2918c]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@6d11ceef: insert into user_profile (email_address, name, phone_number, surname) values ('ceva@email.com_1', 'name_1', '0123456789_1', 'surname_1')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@6d11ceef: insert into user_profile (email_address, name, phone_number, surname) values ('ceva@email.com_1', 'name_1', '0123456789_1', 'surname_1')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Address
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Address] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Address (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        address
        (address_line_1, address_line_2, address_name, city, postcode) 
    values
        (?, ?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@6fa0450e: insert into address (address_line_1, address_line_2, address_name, city, postcode) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [addr line 1_1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [addr line 2_1]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [ceva@email.com_1]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [VARCHAR] - [city_1]
 [main] TRACE sql.BasicBinder - binding parameter [5] as [VARCHAR] - [postcode_1]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 96
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@37468787]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@37468787]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@6fa0450e: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1', 'addr line 2_1', 'ceva@email.com_1', 'city_1', 'postcode_1')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@6fa0450e: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1', 'addr line 2_1', 'ceva@email.com_1', 'city_1', 'postcode_1')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Address
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Address] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Address (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        address
        (address_line_1, address_line_2, address_name, city, postcode) 
    values
        (?, ?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@1caa9eb6: insert into address (address_line_1, address_line_2, address_name, city, postcode) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [addr line 1_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [addr line 2_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [ceva@email.com_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [VARCHAR] - [city_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [5] as [VARCHAR] - [postcode_1_2]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 97
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@1f53481b]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@1f53481b]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@1caa9eb6: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1_2', 'addr line 2_1_2', 'ceva@email.com_1_2', 'city_1_2', 'postcode_1_2')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@1caa9eb6: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1_2', 'addr line 2_1_2', 'ceva@email.com_1_2', 'city_1_2', 'postcode_1_2')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Done cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object) took 28ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@176f7f3b], method [public void ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.createUserProfileTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@176f7f3b, testMethod = createUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@27e7c77f]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#39], EntityKey[ro.estore.model.entitiy.Address#96], EntityKey[ro.estore.model.entitiy.Address#97]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@33425811] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@4bd51d3e] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [a14e8f2e-b5bb-442a-ac73-773ef5145756]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@6f70a21b]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@176f7f3b, testMethod = createUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@176f7f3b, testMethod = createUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] TRACE context.TestContextManager - afterTestClass(): class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@544e8149 testClass = UserProfileRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7fb66650 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - beforeTestClass(): class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@6ae62c7e testClass = AddressRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@37c36608]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@6ae62c7e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@37c36608, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 36, missCount = 1]
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest' to bean named 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.AddressRepository ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.addressRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest' to bean named 'addressRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressRepositoryJpaImplTest.findAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@37c36608]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.findAddressTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressRepositoryJpaImplTest.setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.setUp()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressRepositoryJpaImplTest.updateAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.updateAddressTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressRepositoryJpaImplTest.deleteAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.deleteAddressTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@37c36608], method [public void ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.deleteAddressTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@6ae62c7e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@37c36608, testMethod = deleteAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressRepositoryJpaImplTest.deleteAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@6ae62c7e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@37c36608, testMethod = deleteAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@21e20ad5 transactionManagerName = '', defaultRollback = true] for test class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 37, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@6ae62c7e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@37c36608, testMethod = deleteAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.deleteAddressTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [494a4911-1e0a-42a7-9d40-3f5768dd060b] at timestamp: 14689155656
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4b0f2299]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@33063f5b] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@15405bd6] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6ae62c7e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@37c36608, testMethod = deleteAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@15405bd6] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Address#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        address0_.address_id as address_1_0_0_,
        address0_.address_line_1 as address_2_0_0_,
        address0_.address_line_2 as address_3_0_0_,
        address0_.address_name as address_4_0_0_,
        address0_.city as city5_0_0_,
        address0_.postcode as postcode6_0_0_ 
    from
        address address0_ 
    where
        address0_.address_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@352ed70d: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@352ed70d: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@70730db]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_0_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_0_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_0_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_0_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_0_] : [VARCHAR]) - [00000]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@70730db]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@70730db]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@352ed70d: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@352ed70d: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Address#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 19ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@15405bd6] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@15405bd6] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Address#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@15405bd6] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@37c36608], method [public void ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.deleteAddressTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@6ae62c7e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@37c36608, testMethod = deleteAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@12704e15]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=1} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@15405bd6] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@33063f5b] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [494a4911-1e0a-42a7-9d40-3f5768dd060b]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@512575e9]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@6ae62c7e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@37c36608, testMethod = deleteAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@6ae62c7e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@37c36608, testMethod = deleteAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@6f1a16fe]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@6ae62c7e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@6f1a16fe, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 38, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.AddressRepository ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.addressRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@6f1a16fe]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@6f1a16fe], method [public void ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.findAddressTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@6ae62c7e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@6f1a16fe, testMethod = findAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressRepositoryJpaImplTest.findAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@6ae62c7e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@6f1a16fe, testMethod = findAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 39, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@6ae62c7e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@6f1a16fe, testMethod = findAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.findAddressTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [6557d3d6-6aa2-4d48-8760-3922d04a61e2] at timestamp: 14689155656
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7601bc96]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@48a0c8aa] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@6192a5d5] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6ae62c7e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@6f1a16fe, testMethod = findAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@6192a5d5] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Address#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        address0_.address_id as address_1_0_0_,
        address0_.address_line_1 as address_2_0_0_,
        address0_.address_line_2 as address_3_0_0_,
        address0_.address_name as address_4_0_0_,
        address0_.city as city5_0_0_,
        address0_.postcode as postcode6_0_0_ 
    from
        address address0_ 
    where
        address0_.address_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@3722c145: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@3722c145: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@4cbc2e3b]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_0_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_0_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_0_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_0_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_0_] : [VARCHAR]) - [00000]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@4cbc2e3b]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@4cbc2e3b]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@3722c145: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@3722c145: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Address#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 12ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@6f1a16fe], method [public void ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.findAddressTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@6ae62c7e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@6f1a16fe, testMethod = findAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@765ffb14]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@6192a5d5] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@48a0c8aa] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [6557d3d6-6aa2-4d48-8760-3922d04a61e2]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@57562473]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@6ae62c7e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@6f1a16fe, testMethod = findAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@6ae62c7e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@6f1a16fe, testMethod = findAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@7a360554]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@6ae62c7e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@7a360554, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 40, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.AddressRepository ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.addressRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@7a360554]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@7a360554], method [public void ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.updateAddressTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@6ae62c7e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@7a360554, testMethod = updateAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressRepositoryJpaImplTest.updateAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@6ae62c7e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@7a360554, testMethod = updateAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 41, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@6ae62c7e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@7a360554, testMethod = updateAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.updateAddressTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [a821cb76-84cf-465f-916c-4d6318e89009] at timestamp: 14689155657
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@67064bdc]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@4a7fd0c9] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@18578491] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@6ae62c7e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@7a360554, testMethod = updateAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@18578491] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Address#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        address0_.address_id as address_1_0_0_,
        address0_.address_line_1 as address_2_0_0_,
        address0_.address_line_2 as address_3_0_0_,
        address0_.address_name as address_4_0_0_,
        address0_.city as city5_0_0_,
        address0_.postcode as postcode6_0_0_ 
    from
        address address0_ 
    where
        address0_.address_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@3291b443: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@3291b443: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@671c4166]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_0_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_0_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_0_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_0_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_0_] : [VARCHAR]) - [00000]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@671c4166]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@671c4166]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@3291b443: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@3291b443: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Address#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 15ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@18578491] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.AbstractSaveEventListener - Persistent instance of: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultMergeEventListener - Ignoring persistent instance
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@18578491] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@7a360554], method [public void ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.updateAddressTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@6ae62c7e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@7a360554, testMethod = updateAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@77865933]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@18578491] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@4a7fd0c9] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [a821cb76-84cf-465f-916c-4d6318e89009]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@480ad82c]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@6ae62c7e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@7a360554, testMethod = updateAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@6ae62c7e testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@7a360554, testMethod = updateAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] TRACE context.TestContextManager - afterTestClass(): class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@6ae62c7e testClass = AddressRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2e869098 testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - beforeTestClass(): class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@52ff99cd]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@52ff99cd, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 42, missCount = 1]
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.UserRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' to bean named 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.userRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' to bean named 'userRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.productRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' to bean named 'productRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.UserRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' to bean named 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.findUserByUsernameAndPasswordFailTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@52ff99cd]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameAndPasswordFailTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.saveAndFindUserByUsernameAndPasswordTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.saveAndFindUserByUsernameAndPasswordTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.setUp()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.createUser' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.createUser()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.findUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.deleteUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.deleteUserTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.updateUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.updateUserTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.findUserByUsernameTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.findUserByUsernameFailTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameFailTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@52ff99cd], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameAndPasswordFailTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@52ff99cd, testMethod = findUserByUsernameAndPasswordFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.findUserByUsernameAndPasswordFailTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@52ff99cd, testMethod = findUserByUsernameAndPasswordFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@21e20ad5 transactionManagerName = '', defaultRollback = true] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 43, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@52ff99cd, testMethod = findUserByUsernameAndPasswordFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameAndPasswordFailTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [e5e20152-ed6a-47b0-a21d-a2341eed4a62] at timestamp: 14689155657
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1b7a52dd]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@7f93dd4e] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@5ad5be4a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@52ff99cd, testMethod = findUserByUsernameAndPasswordFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsernameAndPassword(String,String)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5ad5be4a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG internal.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 )
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 ))
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 ))
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5ad5be4a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 ))
 [main] TRACE spi.HQLQueryPlan - Find: select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 )
 [main] TRACE spi.QueryParameters - Named parameters: {param0=user0_0, param1=pass0_0}
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_,
        user0_.password as password2_4_,
        user0_.user_profile_id as user_pro4_4_,
        user0_.username as username3_4_ 
    from
        user user0_ 
    where
        user0_.username=? 
        and user0_.password=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@737d100a: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED ** and user0_.password=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@737d100a: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED ** and user0_.password=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [user0_0]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [pass0_0]
 [main] TRACE loader.Loader - Bound [3] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@12e5da86]
 [main] TRACE loader.Loader - Processing result set
 [main] TRACE loader.Loader - Done processing result set (0 rows)
 [main] TRACE loader.Loader - Total objects hydrated: 0
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@737d100a: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0_0' and user0_.password='pass0_0']
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@12e5da86]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@737d100a: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0_0' and user0_.password='pass0_0']
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] ERROR impl.UserRepositoryJpaImpl - No user was found (Index: 0, Size: 0)
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsernameAndPassword(String,String) took 8ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@52ff99cd], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameAndPasswordFailTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@52ff99cd, testMethod = findUserByUsernameAndPasswordFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@6535117e]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@5ad5be4a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@7f93dd4e] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [e5e20152-ed6a-47b0-a21d-a2341eed4a62]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@1d1cbd0f]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@52ff99cd, testMethod = findUserByUsernameAndPasswordFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@52ff99cd, testMethod = findUserByUsernameAndPasswordFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6fa13e6]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6fa13e6, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 44, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.UserRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.userRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.productRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.UserRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6fa13e6]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6fa13e6], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6fa13e6, testMethod = findUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.findUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6fa13e6, testMethod = findUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 45, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6fa13e6, testMethod = findUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [b94cca86-c19a-4653-bd54-d1e57a5a44ab] at timestamp: 14689155658
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@59bbe88a]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@5d8ab698] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@ed91d8d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6fa13e6, testMethod = findUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@ed91d8d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.User#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.password as password2_4_0_,
        user0_.user_profile_id as user_pro4_4_0_,
        user0_.username as username3_4_0_,
        userprofil1_.user_profile_id as user_pro1_5_1_,
        userprofil1_.email_address as email_ad2_5_1_,
        userprofil1_.name as name3_5_1_,
        userprofil1_.phone_number as phone_nu4_5_1_,
        userprofil1_.surname as surname5_5_1_ 
    from
        user user0_ 
    inner join
        user_profile userprofil1_ 
            on user0_.user_profile_id=userprofil1_.user_profile_id 
    where
        user0_.user_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@446626a7: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@446626a7: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@429f7919]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro1_5_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE sql.BasicExtractor - extracted value ([password2_4_0_] : [VARCHAR]) - [pass0]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro4_4_0_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([username3_4_0_] : [VARCHAR]) - [user0]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_1_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_1_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_1_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_1_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@429f7919]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@429f7919]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@446626a7: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@446626a7: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.User#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 17ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6fa13e6], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6fa13e6, testMethod = findUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@4375b013]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.User#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1], CollectionKey[ro.estore.model.entitiy.User.orders#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@ed91d8d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@5d8ab698] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [b94cca86-c19a-4653-bd54-d1e57a5a44ab]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@1cf0cacc]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6fa13e6, testMethod = findUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6fa13e6, testMethod = findUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4f5b08d]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4f5b08d, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 46, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.UserRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.userRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.productRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.UserRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4f5b08d]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4f5b08d], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.saveAndFindUserByUsernameAndPasswordTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4f5b08d, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.saveAndFindUserByUsernameAndPasswordTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4f5b08d, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 47, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4f5b08d, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserRepositoryJpaImplTest.saveAndFindUserByUsernameAndPasswordTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [a1ee101d-b165-4014-a23c-e97a9f047542] at timestamp: 14689155658
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@fe34b86]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@3c98781a] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@3f736a16] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4f5b08d, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsernameAndPassword(String,String)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@3f736a16] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG internal.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 )
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 ))
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 ))
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@3f736a16] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 ))
 [main] TRACE spi.HQLQueryPlan - Find: select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 )
 [main] TRACE spi.QueryParameters - Named parameters: {param0=user0, param1=pass0}
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_,
        user0_.password as password2_4_,
        user0_.user_profile_id as user_pro4_4_,
        user0_.username as username3_4_ 
    from
        user user0_ 
    where
        user0_.username=? 
        and user0_.password=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@53abfc07: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED ** and user0_.password=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@53abfc07: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED ** and user0_.password=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [user0]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [pass0]
 [main] TRACE loader.Loader - Bound [3] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@2c8c16c0]
 [main] TRACE loader.Loader - Processing result set
 [main] DEBUG logging.DelegatingBasicLogger - Result set row: 0
 [main] TRACE sql.BasicExtractor - extracted value ([user_id1_4_] : [BIGINT]) - [1]
 [main] DEBUG loader.Loader - Result row: EntityKey[ro.estore.model.entitiy.User#1]
 [main] TRACE loader.Loader - Initializing object from ResultSet: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE sql.BasicExtractor - extracted value ([password2_4_] : [VARCHAR]) - [pass0]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro4_4_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([username3_4_] : [VARCHAR]) - [user0]
 [main] TRACE loader.Loader - Done processing result set (1 rows)
 [main] TRACE loader.Loader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        userprofil0_.user_profile_id as user_pro1_5_0_,
        userprofil0_.email_address as email_ad2_5_0_,
        userprofil0_.name as name3_5_0_,
        userprofil0_.phone_number as phone_nu4_5_0_,
        userprofil0_.surname as surname5_5_0_ 
    from
        user_profile userprofil0_ 
    where
        userprofil0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@4b039c6d: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@4b039c6d: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@7f5b9db]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_0_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_0_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_0_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_0_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@7f5b9db]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@7f5b9db]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@4b039c6d: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@4b039c6d: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.UserProfile#1
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@53abfc07: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0' and user0_.password='pass0']
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@2c8c16c0]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@53abfc07: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0' and user0_.password='pass0']
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsernameAndPassword(String,String) took 17ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4f5b08d], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.saveAndFindUserByUsernameAndPasswordTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4f5b08d, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@60b34931]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.User#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1], CollectionKey[ro.estore.model.entitiy.User.orders#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@3f736a16] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@3c98781a] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [a1ee101d-b165-4014-a23c-e97a9f047542]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@4aa21f9d]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4f5b08d, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4f5b08d, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@71c17a57]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@71c17a57, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 48, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.UserRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.userRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.productRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.UserRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@71c17a57]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@71c17a57], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.updateUserTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@71c17a57, testMethod = updateUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.updateUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@71c17a57, testMethod = updateUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 49, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@71c17a57, testMethod = updateUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserRepositoryJpaImplTest.updateUserTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [df1b94de-65be-4d93-a4ba-25a030224453] at timestamp: 14689155659
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3e67f5f2]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@fd53053] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@4527f70a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@71c17a57, testMethod = updateUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@4527f70a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.User#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.password as password2_4_0_,
        user0_.user_profile_id as user_pro4_4_0_,
        user0_.username as username3_4_0_,
        userprofil1_.user_profile_id as user_pro1_5_1_,
        userprofil1_.email_address as email_ad2_5_1_,
        userprofil1_.name as name3_5_1_,
        userprofil1_.phone_number as phone_nu4_5_1_,
        userprofil1_.surname as surname5_5_1_ 
    from
        user user0_ 
    inner join
        user_profile userprofil1_ 
            on user0_.user_profile_id=userprofil1_.user_profile_id 
    where
        user0_.user_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@707b1a44: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@707b1a44: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@7132a9dc]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro1_5_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE sql.BasicExtractor - extracted value ([password2_4_0_] : [VARCHAR]) - [pass0]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro4_4_0_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([username3_4_0_] : [VARCHAR]) - [user0]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_1_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_1_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_1_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_1_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@7132a9dc]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@7132a9dc]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@707b1a44: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@707b1a44: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.User#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 14ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@4527f70a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.AbstractSaveEventListener - Persistent instance of: ro.estore.model.entitiy.User
 [main] TRACE internal.DefaultMergeEventListener - Ignoring persistent instance
 [main] TRACE internal.Cascade - Processing cascade ACTION_MERGE for: ro.estore.model.entitiy.User
 [main] TRACE internal.Cascade - Cascade ACTION_MERGE for collection: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.Cascade - Done cascade ACTION_MERGE for collection: ro.estore.model.entitiy.User.orders
 [main] TRACE spi.CascadingActions$6 - Cascading to merge: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.AbstractSaveEventListener - Persistent instance of: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.DefaultMergeEventListener - Ignoring persistent instance
 [main] TRACE internal.Cascade - Processing cascade ACTION_MERGE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Cascade ACTION_MERGE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done cascade ACTION_MERGE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done processing cascade ACTION_MERGE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Done processing cascade ACTION_MERGE for: ro.estore.model.entitiy.User
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object) took 4ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@4527f70a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.User#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@71c17a57], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.updateUserTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@71c17a57, testMethod = updateUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@2c7106d9]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.User#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1], CollectionKey[ro.estore.model.entitiy.User.orders#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@4527f70a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@fd53053] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [df1b94de-65be-4d93-a4ba-25a030224453]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@329bad59]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@71c17a57, testMethod = updateUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@71c17a57, testMethod = updateUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@862f408]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@862f408, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 50, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.UserRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.userRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.productRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.UserRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@862f408]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@862f408], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameFailTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@862f408, testMethod = findUserByUsernameFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.findUserByUsernameFailTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@862f408, testMethod = findUserByUsernameFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 51, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@862f408, testMethod = findUserByUsernameFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameFailTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [3ee1d128-c0a3-448b-b9c3-1e02614a82ef] at timestamp: 14689155659
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@432f521f]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@2d7a9786] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@7bab5898] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@862f408, testMethod = findUserByUsernameFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsername(String)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@7bab5898] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG internal.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0)
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0)
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@7bab5898] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0)
 [main] TRACE spi.HQLQueryPlan - Find: select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0
 [main] TRACE spi.QueryParameters - Named parameters: {param0=user0_0}
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_,
        user0_.password as password2_4_,
        user0_.user_profile_id as user_pro4_4_,
        user0_.username as username3_4_ 
    from
        user user0_ 
    where
        user0_.username=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@feb98ef: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@feb98ef: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [user0_0]
 [main] TRACE loader.Loader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@7654f833]
 [main] TRACE loader.Loader - Processing result set
 [main] TRACE loader.Loader - Done processing result set (0 rows)
 [main] TRACE loader.Loader - Total objects hydrated: 0
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@feb98ef: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0_0']
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@7654f833]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@feb98ef: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0_0']
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] ERROR impl.UserRepositoryJpaImpl - No user was found (No entity found for query)
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsername(String) took 9ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@862f408], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameFailTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@862f408, testMethod = findUserByUsernameFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@571a01f9]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@7bab5898] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@2d7a9786] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [3ee1d128-c0a3-448b-b9c3-1e02614a82ef]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@d7109be]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@862f408, testMethod = findUserByUsernameFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@862f408, testMethod = findUserByUsernameFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@5e0ec41f]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@5e0ec41f, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 52, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.UserRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.userRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.productRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.UserRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@5e0ec41f]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@5e0ec41f], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.createUser()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@5e0ec41f, testMethod = createUser@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.createUser' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@5e0ec41f, testMethod = createUser@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 53, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@5e0ec41f, testMethod = createUser@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserRepositoryJpaImplTest.createUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [06b3326c-35fa-4b69-afe7-27de651eb0f6] at timestamp: 14689155659
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@25673087]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@7b27e8f4] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@348ad293] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@5e0ec41f, testMethod = createUser@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: User ro.estore.util.TestUtils.createUser(String)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: User ro.estore.util.TestUtils.createUser(String) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@348ad293] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        product0_.product_id as product_1_2_0_,
        product0_.brand as brand2_2_0_,
        product0_.description as descript3_2_0_,
        product0_.name as name4_2_0_,
        product0_.price as price5_2_0_,
        product0_.stock as stock6_2_0_ 
    from
        product product0_ 
    where
        product0_.product_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@30f74e79: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@30f74e79: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@2c88a3e8]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_0_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_0_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_0_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_0_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_0_] : [INTEGER]) - [14]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@2c88a3e8]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@2c88a3e8]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@30f74e79: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@30f74e79: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Product#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 12ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@348ad293] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@348ad293] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@348ad293] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@348ad293] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.User
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.User#<null>]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.User
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.UserProfile#<null>]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.WrapVisitor - Wrapped collection in role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.UserProfile] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.UserProfile#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.UserProfile#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.UserProfile (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        user_profile
        (email_address, name, phone_number, surname) 
    values
        (?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@65f651eb: insert into user_profile (email_address, name, phone_number, surname) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.UserProfile#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [ceva@email.com_1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [name_1]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [0123456789_1]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [VARCHAR] - [surname_1]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 40
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@69923ac3]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@69923ac3]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@65f651eb: insert into user_profile (email_address, name, phone_number, surname) values ('ceva@email.com_1', 'name_1', '0123456789_1', 'surname_1')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@65f651eb: insert into user_profile (email_address, name, phone_number, surname) values ('ceva@email.com_1', 'name_1', '0123456789_1', 'surname_1')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Address
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Address] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Address (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        address
        (address_line_1, address_line_2, address_name, city, postcode) 
    values
        (?, ?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@24f870ee: insert into address (address_line_1, address_line_2, address_name, city, postcode) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [addr line 1_1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [addr line 2_1]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [ceva@email.com_1]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [VARCHAR] - [city_1]
 [main] TRACE sql.BasicBinder - binding parameter [5] as [VARCHAR] - [postcode_1]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 98
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@5c441290]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@5c441290]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@24f870ee: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1', 'addr line 2_1', 'ceva@email.com_1', 'city_1', 'postcode_1')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@24f870ee: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1', 'addr line 2_1', 'ceva@email.com_1', 'city_1', 'postcode_1')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Address
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Address] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Address (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        address
        (address_line_1, address_line_2, address_name, city, postcode) 
    values
        (?, ?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@1886991b: insert into address (address_line_1, address_line_2, address_name, city, postcode) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [addr line 1_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [addr line 2_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [ceva@email.com_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [VARCHAR] - [city_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [5] as [VARCHAR] - [postcode_1_2]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 99
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@64aad809]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@64aad809]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@1886991b: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1_2', 'addr line 2_1_2', 'ceva@email.com_1_2', 'city_1_2', 'postcode_1_2')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@1886991b: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1_2', 'addr line 2_1_2', 'ceva@email.com_1_2', 'city_1_2', 'postcode_1_2')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Done cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.User
 [main] TRACE internal.WrapVisitor - Wrapped collection in role: ro.estore.model.entitiy.User.orders
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.User] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.User#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.User#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.User (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        user
        (password, user_profile_id, username) 
    values
        (?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@3bbf6abe: insert into user (password, user_profile_id, username) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.User#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [username_1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [BIGINT] - [40]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [username_1]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 21
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@9679750]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@9679750]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@3bbf6abe: insert into user (password, user_profile_id, username) values ('username_1', 40, 'username_1')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@3bbf6abe: insert into user (password, user_profile_id, username) values ('username_1', 40, 'username_1')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.User
 [main] TRACE internal.Cascade - Cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.User.orders
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Order
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Order
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Order#<null>]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Address
 [main] TRACE internal.AbstractSaveEventListener - Persistent instance of: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultPersistEventListener - Ignoring persistent instance
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE internal.WrapVisitor - Wrapped collection in role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Order] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Order#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Order#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Order (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        `
        
    order` (
        address_id, user_id
    ) 
values
    (?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@e26af6: insert into `order` (address_id, user_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Order#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [98]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [BIGINT] - [21]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 34
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@44065156]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@44065156]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@e26af6: insert into `order` (address_id, user_id) values (98, 21)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@e26af6: insert into `order` (address_id, user_id) values (98, 21)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Purchase
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Purchase] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Purchase (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        purchase
        (product_id, quantity, order_id) 
    values
        (?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@44ed0a8f: insert into purchase (product_id, quantity, order_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [INTEGER] - [23]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [BIGINT] - [34]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 63
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@32177fa5]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@32177fa5]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@44ed0a8f: insert into purchase (product_id, quantity, order_id) values (1, 23, 34)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@44ed0a8f: insert into purchase (product_id, quantity, order_id) values (1, 23, 34)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Purchase
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Purchase] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Purchase (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        purchase
        (product_id, quantity, order_id) 
    values
        (?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@2abe9173: insert into purchase (product_id, quantity, order_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [INTEGER] - [23]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [BIGINT] - [34]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 64
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@235d29d6]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@235d29d6]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@2abe9173: insert into purchase (product_id, quantity, order_id) values (1, 23, 34)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@2abe9173: insert into purchase (product_id, quantity, order_id) values (1, 23, 34)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Done cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Order
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Order
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Order#<null>]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Address
 [main] TRACE internal.AbstractSaveEventListener - Persistent instance of: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultPersistEventListener - Ignoring persistent instance
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE internal.WrapVisitor - Wrapped collection in role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Order] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Order#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Order#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Order (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        `
        
    order` (
        address_id, user_id
    ) 
values
    (?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@57cb70be: insert into `order` (address_id, user_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Order#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [98]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [BIGINT] - [21]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 35
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@2d4608a6]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@2d4608a6]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@57cb70be: insert into `order` (address_id, user_id) values (98, 21)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@57cb70be: insert into `order` (address_id, user_id) values (98, 21)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Purchase
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Purchase] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Purchase (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        purchase
        (product_id, quantity, order_id) 
    values
        (?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@26c89563: insert into purchase (product_id, quantity, order_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [INTEGER] - [23]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [BIGINT] - [35]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 65
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@3bd6ba24]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@3bd6ba24]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@26c89563: insert into purchase (product_id, quantity, order_id) values (1, 23, 35)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@26c89563: insert into purchase (product_id, quantity, order_id) values (1, 23, 35)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Purchase
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Purchase] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Purchase (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        purchase
        (product_id, quantity, order_id) 
    values
        (?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@4277127c: insert into purchase (product_id, quantity, order_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [INTEGER] - [23]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [BIGINT] - [35]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 66
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@4c7e978c]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@4c7e978c]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@4277127c: insert into purchase (product_id, quantity, order_id) values (1, 23, 35)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@4277127c: insert into purchase (product_id, quantity, order_id) values (1, 23, 35)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Done cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Done cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.User
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object) took 84ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@5e0ec41f], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.createUser()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@5e0ec41f, testMethod = createUser@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@22ebccb9]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Purchase#63], EntityKey[ro.estore.model.entitiy.Address#99], EntityKey[ro.estore.model.entitiy.Purchase#64], EntityKey[ro.estore.model.entitiy.Purchase#65], EntityKey[ro.estore.model.entitiy.Purchase#66], EntityKey[ro.estore.model.entitiy.Address#98], EntityKey[ro.estore.model.entitiy.UserProfile#40], EntityKey[ro.estore.model.entitiy.User#21], EntityKey[ro.estore.model.entitiy.Order#34], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Order#35]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@348ad293] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@7b27e8f4] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [06b3326c-35fa-4b69-afe7-27de651eb0f6]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@5875de6a]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@5e0ec41f, testMethod = createUser@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@5e0ec41f, testMethod = createUser@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@608fe01f]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@608fe01f, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 54, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.UserRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.userRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.productRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.UserRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@608fe01f]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@608fe01f], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@608fe01f, testMethod = findUserByUsernameTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.findUserByUsernameTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@608fe01f, testMethod = findUserByUsernameTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 55, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@608fe01f, testMethod = findUserByUsernameTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [df5a7bc3-cdf1-4b26-86b3-96a4a141e83a] at timestamp: 14689155661
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@33956d1a]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@2e1ddc90] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@5b7c8930] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@608fe01f, testMethod = findUserByUsernameTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsername(String)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5b7c8930] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG internal.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0)
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0)
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5b7c8930] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0)
 [main] TRACE spi.HQLQueryPlan - Find: select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0
 [main] TRACE spi.QueryParameters - Named parameters: {param0=user0}
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_,
        user0_.password as password2_4_,
        user0_.user_profile_id as user_pro4_4_,
        user0_.username as username3_4_ 
    from
        user user0_ 
    where
        user0_.username=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@5a8ab2: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@5a8ab2: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [user0]
 [main] TRACE loader.Loader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@3f50b680]
 [main] TRACE loader.Loader - Processing result set
 [main] DEBUG logging.DelegatingBasicLogger - Result set row: 0
 [main] TRACE sql.BasicExtractor - extracted value ([user_id1_4_] : [BIGINT]) - [1]
 [main] DEBUG loader.Loader - Result row: EntityKey[ro.estore.model.entitiy.User#1]
 [main] TRACE loader.Loader - Initializing object from ResultSet: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE sql.BasicExtractor - extracted value ([password2_4_] : [VARCHAR]) - [pass0]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro4_4_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([username3_4_] : [VARCHAR]) - [user0]
 [main] TRACE loader.Loader - Done processing result set (1 rows)
 [main] TRACE loader.Loader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        userprofil0_.user_profile_id as user_pro1_5_0_,
        userprofil0_.email_address as email_ad2_5_0_,
        userprofil0_.name as name3_5_0_,
        userprofil0_.phone_number as phone_nu4_5_0_,
        userprofil0_.surname as surname5_5_0_ 
    from
        user_profile userprofil0_ 
    where
        userprofil0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@5981f4a6: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@5981f4a6: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@63dfada0]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_0_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_0_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_0_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_0_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@63dfada0]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@63dfada0]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@5981f4a6: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@5981f4a6: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.UserProfile#1
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@5a8ab2: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0']
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@3f50b680]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@5a8ab2: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0']
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsername(String) took 26ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@608fe01f], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@608fe01f, testMethod = findUserByUsernameTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@63d4f0a2]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.User#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1], CollectionKey[ro.estore.model.entitiy.User.orders#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@5b7c8930] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@2e1ddc90] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [df5a7bc3-cdf1-4b26-86b3-96a4a141e83a]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@7d78f3d5]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@608fe01f, testMethod = findUserByUsernameTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@608fe01f, testMethod = findUserByUsernameTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@a4b5ce3]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@a4b5ce3, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 56, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.UserRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.userRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.productRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.UserRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@a4b5ce3]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@a4b5ce3], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.deleteUserTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@a4b5ce3, testMethod = deleteUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.deleteUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@a4b5ce3, testMethod = deleteUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 57, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@a4b5ce3, testMethod = deleteUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserRepositoryJpaImplTest.deleteUserTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [023c05a6-1de0-4496-a6d5-b06ef997db9b] at timestamp: 14689155661
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@216e9ca3]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@75120e58] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@48976e6d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@a4b5ce3, testMethod = deleteUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@48976e6d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.User#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.password as password2_4_0_,
        user0_.user_profile_id as user_pro4_4_0_,
        user0_.username as username3_4_0_,
        userprofil1_.user_profile_id as user_pro1_5_1_,
        userprofil1_.email_address as email_ad2_5_1_,
        userprofil1_.name as name3_5_1_,
        userprofil1_.phone_number as phone_nu4_5_1_,
        userprofil1_.surname as surname5_5_1_ 
    from
        user user0_ 
    inner join
        user_profile userprofil1_ 
            on user0_.user_profile_id=userprofil1_.user_profile_id 
    where
        user0_.user_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@2a367e93: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@2a367e93: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@7f6874f2]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro1_5_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE sql.BasicExtractor - extracted value ([password2_4_0_] : [VARCHAR]) - [pass0]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro4_4_0_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([username3_4_0_] : [VARCHAR]) - [user0]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_1_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_1_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_1_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_1_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@7f6874f2]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@7f6874f2]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@2a367e93: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@2a367e93: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.User#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 15ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@48976e6d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@48976e6d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.User
 [main] TRACE internal.Cascade - Cascade ACTION_DELETE for collection: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.User.orders#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        orders0_.user_id as user_id3_1_0_,
        orders0_.order_id as order_id1_1_0_,
        orders0_.order_id as order_id1_1_1_,
        orders0_.address_id as address_2_1_1_,
        address1_.address_id as address_1_0_2_,
        address1_.address_line_1 as address_2_0_2_,
        address1_.address_line_2 as address_3_0_2_,
        address1_.address_name as address_4_0_2_,
        address1_.city as city5_0_2_,
        address1_.postcode as postcode6_0_2_ 
    from
        `
    order` orders0_ inner join
        address address1_ 
            on orders0_.address_id=address1_.address_id 
    where
        orders0_.user_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@38e7ed69: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@38e7ed69: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@806996]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@806996]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.User.orders#1]]
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([order_id1_1_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_1_1_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_2_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_2_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_2_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_2_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_2_] : [VARCHAR]) - [00000]
 [main] TRACE sql.BasicExtractor - extracted value ([user_id3_1_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.User.orders#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.User.orders#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.User.orders#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([order_id1_1_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] not located in load context
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.User.orders#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.User.orders#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@806996, coll=[ro.estore.model.entitiy.User.orders#1]>@21ba2445]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@806996, coll=[ro.estore.model.entitiy.User.orders#1]>@21ba2445]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.User.orders#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@806996]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@806996]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@38e7ed69: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@38e7ed69: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] TRACE spi.CascadingActions$1 - Cascading to delete: ro.estore.model.entitiy.Order
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Cascade ACTION_DELETE for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchases0_.order_id as order_id4_3_0_,
        purchases0_.purchase_id as purchase1_3_0_,
        purchases0_.purchase_id as purchase1_3_1_,
        purchases0_.product_id as product_3_3_1_,
        purchases0_.quantity as quantity2_3_1_,
        product1_.product_id as product_1_2_2_,
        product1_.brand as brand2_2_2_,
        product1_.description as descript3_2_2_,
        product1_.name as name4_2_2_,
        product1_.price as price5_2_2_,
        product1_.stock as stock6_2_2_ 
    from
        purchase purchases0_ 
    inner join
        product product1_ 
            on purchases0_.product_id=product1_.product_id 
    where
        purchases0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@69d23296: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@69d23296: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@3c3820bb]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@3c3820bb]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] not located in load context
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_1_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_2_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_2_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_2_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_2_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_2_] : [INTEGER]) - [14]
 [main] TRACE sql.BasicExtractor - extracted value ([order_id4_3_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@3c3820bb, coll=[ro.estore.model.entitiy.Order.purchases#1]>@3fba233d]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@3c3820bb, coll=[ro.estore.model.entitiy.Order.purchases#1]>@3fba233d]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@3c3820bb]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@3c3820bb]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@69d23296: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@69d23296: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] TRACE spi.CascadingActions$1 - Cascading to delete: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.Cascade - Done cascade ACTION_DELETE for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Done cascade ACTION_DELETE for collection: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.User
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.User
 [main] TRACE spi.CascadingActions$1 - Cascading to delete: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Cascade ACTION_DELETE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        addresses0_.user_profile_id as user_pro7_0_0_,
        addresses0_.address_id as address_1_0_0_,
        addresses0_.address_id as address_1_0_1_,
        addresses0_.address_line_1 as address_2_0_1_,
        addresses0_.address_line_2 as address_3_0_1_,
        addresses0_.address_name as address_4_0_1_,
        addresses0_.city as city5_0_1_,
        addresses0_.postcode as postcode6_0_1_ 
    from
        address addresses0_ 
    where
        addresses0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@427ae189: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@427ae189: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@16a9eb2e]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@16a9eb2e]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] not located in load context
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro7_0_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 0
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@16a9eb2e, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@76332405]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@16a9eb2e, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@76332405]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@16a9eb2e]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@16a9eb2e]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@427ae189: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@427ae189: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] TRACE spi.CascadingActions$1 - Cascading to delete: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.Cascade - Done cascade ACTION_DELETE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Deleting orphans for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done deleting orphans for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.User
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object) took 113ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@48976e6d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.User#1]
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@a4b5ce3], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.deleteUserTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@a4b5ce3, testMethod = deleteUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@187e5235]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.User#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1], CollectionKey[ro.estore.model.entitiy.User.orders#1], CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=5} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@48976e6d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@75120e58] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [023c05a6-1de0-4496-a6d5-b06ef997db9b]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@d1d8e1a]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@a4b5ce3, testMethod = deleteUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@a4b5ce3, testMethod = deleteUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] TRACE context.TestContextManager - afterTestClass(): class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@4d18b73a testClass = UserRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@177515d1 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - beforeTestClass(): class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@5434e40c testClass = OrderRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@514de325]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@5434e40c testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@514de325, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 58, missCount = 1]
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest' to bean named 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.OrderRepository ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.orderRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest' to bean named 'orderRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderRepositoryJpaImplTest.deleteOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@514de325]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.deleteOrderTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderRepositoryJpaImplTest.updateOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.updateOrderTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderRepositoryJpaImplTest.findOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.findOrderTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderRepositoryJpaImplTest.setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.setUp()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@514de325], method [public void ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.findOrderTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@5434e40c testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@514de325, testMethod = findOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderRepositoryJpaImplTest.findOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@5434e40c testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@514de325, testMethod = findOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@21e20ad5 transactionManagerName = '', defaultRollback = true] for test class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 59, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@5434e40c testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@514de325, testMethod = findOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.findOrderTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [ce7ec3ed-e644-44c9-b522-b2cac1eb7319] at timestamp: 14689155663
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@24a86066]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@54402c04] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@5b3bb1f7] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5434e40c testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@514de325, testMethod = findOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5b3bb1f7] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Order#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        order0_.order_id as order_id1_1_0_,
        order0_.address_id as address_2_1_0_,
        address1_.address_id as address_1_0_1_,
        address1_.address_line_1 as address_2_0_1_,
        address1_.address_line_2 as address_3_0_1_,
        address1_.address_name as address_4_0_1_,
        address1_.city as city5_0_1_,
        address1_.postcode as postcode6_0_1_ 
    from
        `
    order` order0_ inner join
        address address1_ 
            on order0_.address_id=address1_.address_id 
    where
        order0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@3f1a4795: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@3f1a4795: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@6a6f6c7e]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_1_0_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_1_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_1_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_1_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_1_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_1_] : [VARCHAR]) - [00000]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@6a6f6c7e]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@6a6f6c7e]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@3f1a4795: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@3f1a4795: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Order#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 27ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@514de325], method [public void ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.findOrderTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@5434e40c testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@514de325, testMethod = findOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@7d0d91a1]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@5b3bb1f7] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@54402c04] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [ce7ec3ed-e644-44c9-b522-b2cac1eb7319]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@7fb48179]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@5434e40c testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@514de325, testMethod = findOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@5434e40c testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@514de325, testMethod = findOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@201c3cda]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@5434e40c testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@201c3cda, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 60, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.OrderRepository ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.orderRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@201c3cda]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@201c3cda], method [public void ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.deleteOrderTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@5434e40c testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@201c3cda, testMethod = deleteOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderRepositoryJpaImplTest.deleteOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@5434e40c testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@201c3cda, testMethod = deleteOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 61, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@5434e40c testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@201c3cda, testMethod = deleteOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.deleteOrderTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [bca36646-45f3-4bf1-b4c8-014a48340f03] at timestamp: 14689155663
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@474821de]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@3d64c581] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@5ec5ea63] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5434e40c testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@201c3cda, testMethod = deleteOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5ec5ea63] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Order#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        order0_.order_id as order_id1_1_0_,
        order0_.address_id as address_2_1_0_,
        address1_.address_id as address_1_0_1_,
        address1_.address_line_1 as address_2_0_1_,
        address1_.address_line_2 as address_3_0_1_,
        address1_.address_name as address_4_0_1_,
        address1_.city as city5_0_1_,
        address1_.postcode as postcode6_0_1_ 
    from
        `
    order` order0_ inner join
        address address1_ 
            on order0_.address_id=address1_.address_id 
    where
        order0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@4190bc8a: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@4190bc8a: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@47d023b7]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_1_0_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_1_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_1_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_1_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_1_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_1_] : [VARCHAR]) - [00000]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@47d023b7]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@47d023b7]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@4190bc8a: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@4190bc8a: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Order#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 21ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5ec5ea63] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5ec5ea63] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Cascade ACTION_DELETE for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchases0_.order_id as order_id4_3_0_,
        purchases0_.purchase_id as purchase1_3_0_,
        purchases0_.purchase_id as purchase1_3_1_,
        purchases0_.product_id as product_3_3_1_,
        purchases0_.quantity as quantity2_3_1_,
        product1_.product_id as product_1_2_2_,
        product1_.brand as brand2_2_2_,
        product1_.description as descript3_2_2_,
        product1_.name as name4_2_2_,
        product1_.price as price5_2_2_,
        product1_.stock as stock6_2_2_ 
    from
        purchase purchases0_ 
    inner join
        product product1_ 
            on purchases0_.product_id=product1_.product_id 
    where
        purchases0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@2fdf17dc: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@2fdf17dc: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@6e6d4780]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@6e6d4780]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_1_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_2_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_2_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_2_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_2_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_2_] : [INTEGER]) - [14]
 [main] TRACE sql.BasicExtractor - extracted value ([order_id4_3_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@6e6d4780, coll=[ro.estore.model.entitiy.Order.purchases#1]>@7d904ff1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@6e6d4780, coll=[ro.estore.model.entitiy.Order.purchases#1]>@7d904ff1]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@6e6d4780]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@6e6d4780]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@2fdf17dc: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@2fdf17dc: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] TRACE spi.CascadingActions$1 - Cascading to delete: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.Cascade - Done cascade ACTION_DELETE for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object) took 26ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5ec5ea63] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@201c3cda], method [public void ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.deleteOrderTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@5434e40c testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@201c3cda, testMethod = deleteOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@4f94e148]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=2} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@5ec5ea63] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@3d64c581] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [bca36646-45f3-4bf1-b4c8-014a48340f03]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@7ff8a9dc]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@5434e40c testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@201c3cda, testMethod = deleteOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@5434e40c testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@201c3cda, testMethod = deleteOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@2cde651b]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@5434e40c testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@2cde651b, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 62, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.OrderRepository ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.orderRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@2cde651b]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@2cde651b], method [public void ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.updateOrderTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@5434e40c testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@2cde651b, testMethod = updateOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderRepositoryJpaImplTest.updateOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@5434e40c testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@2cde651b, testMethod = updateOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 63, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@5434e40c testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@2cde651b, testMethod = updateOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.updateOrderTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [bbeeab30-586f-44d6-9837-d89caf9a6352] at timestamp: 14689155664
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5e1dde44]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@7f37b6d9] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@71e35c4] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@5434e40c testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@2cde651b, testMethod = updateOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@71e35c4] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Order#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        order0_.order_id as order_id1_1_0_,
        order0_.address_id as address_2_1_0_,
        address1_.address_id as address_1_0_1_,
        address1_.address_line_1 as address_2_0_1_,
        address1_.address_line_2 as address_3_0_1_,
        address1_.address_name as address_4_0_1_,
        address1_.city as city5_0_1_,
        address1_.postcode as postcode6_0_1_ 
    from
        `
    order` order0_ inner join
        address address1_ 
            on order0_.address_id=address1_.address_id 
    where
        order0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@22a10ac6: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@22a10ac6: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@12fe1f28]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_1_0_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_1_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_1_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_1_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_1_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_1_] : [VARCHAR]) - [00000]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@12fe1f28]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@12fe1f28]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@22a10ac6: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@22a10ac6: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Order#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 16ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@71e35c4] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.AbstractSaveEventListener - Persistent instance of: ro.estore.model.entitiy.Order
 [main] TRACE internal.DefaultMergeEventListener - Ignoring persistent instance
 [main] TRACE internal.Cascade - Processing cascade ACTION_MERGE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Cascade ACTION_MERGE for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.Cascade - Done cascade ACTION_MERGE for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.Cascade - Done processing cascade ACTION_MERGE for: ro.estore.model.entitiy.Order
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@71e35c4] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Order#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@2cde651b], method [public void ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.updateOrderTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@5434e40c testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@2cde651b, testMethod = updateOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@6e43ddd6]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@71e35c4] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@7f37b6d9] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [bbeeab30-586f-44d6-9837-d89caf9a6352]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@51d719bc]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@5434e40c testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@2cde651b, testMethod = updateOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@5434e40c testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@2cde651b, testMethod = updateOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] TRACE context.TestContextManager - afterTestClass(): class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@5434e40c testClass = OrderRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3b48e183 testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] TRACE context.TestContextManager - beforeTestClass(): class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.UserProfileServiceImplTest@655a01d8]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@655a01d8, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 64, missCount = 1]
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.UserProfileServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.UserProfileServiceImplTest' to bean named 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserProfileService ro.estore.domain.service.impl.UserProfileServiceImplTest.userProfileService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileServiceImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.UserProfileServiceImplTest' to bean named 'userProfileServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.UserProfileConverter ro.estore.domain.service.impl.UserProfileServiceImplTest.userProfileConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.UserProfileServiceImplTest' to bean named 'userProfileConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.UserProfileServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.UserProfileServiceImplTest' to bean named 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImplTest.setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserProfileServiceImplTest@655a01d8]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserProfileServiceImplTest.setUp()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImplTest.findUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserProfileServiceImplTest.findUserProfileTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImplTest.updateUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserProfileServiceImplTest.updateUserProfileTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImplTest.createUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserProfileServiceImplTest.createUserProfileTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImplTest.deleteUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserProfileServiceImplTest.deleteUserProfileTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.UserProfileServiceImplTest@655a01d8], method [public void ro.estore.domain.service.impl.UserProfileServiceImplTest.findUserProfileTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@655a01d8, testMethod = findUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImplTest.findUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@655a01d8, testMethod = findUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@21e20ad5 transactionManagerName = '', defaultRollback = true] for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 65, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@655a01d8, testMethod = findUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserProfileServiceImplTest.findUserProfileTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [7ce0d75a-53de-4607-aad8-b04e06e244dc] at timestamp: 14689155665
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6a2c717f]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@41853299] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@60d40ff4] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@655a01d8, testMethod = findUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@60d40ff4] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@41853299] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@60d40ff4] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        userprofil0_.user_profile_id as user_pro1_5_0_,
        userprofil0_.email_address as email_ad2_5_0_,
        userprofil0_.name as name3_5_0_,
        userprofil0_.phone_number as phone_nu4_5_0_,
        userprofil0_.surname as surname5_5_0_ 
    from
        user_profile userprofil0_ 
    where
        userprofil0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@2e5b7fba: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@2e5b7fba: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@27755487]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_0_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_0_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_0_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_0_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@27755487]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@27755487]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@2e5b7fba: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@2e5b7fba: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.UserProfile#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 21ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        addresses0_.user_profile_id as user_pro7_0_0_,
        addresses0_.address_id as address_1_0_0_,
        addresses0_.address_id as address_1_0_1_,
        addresses0_.address_line_1 as address_2_0_1_,
        addresses0_.address_line_2 as address_3_0_1_,
        addresses0_.address_name as address_4_0_1_,
        addresses0_.city as city5_0_1_,
        addresses0_.postcode as postcode6_0_1_ 
    from
        address addresses0_ 
    where
        addresses0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@7ab4ae59: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@7ab4ae59: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@77681ce4]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@77681ce4]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_1_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_1_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_1_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_1_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_1_] : [VARCHAR]) - [00000]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro7_0_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@77681ce4, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@6f76c2cc]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@77681ce4, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@6f76c2cc]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@77681ce4]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@77681ce4]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@7ab4ae59: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@7ab4ae59: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 25ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 55ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.UserProfileServiceImplTest@655a01d8], method [public void ro.estore.domain.service.impl.UserProfileServiceImplTest.findUserProfileTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@655a01d8, testMethod = findUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@306f6f1d]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@60d40ff4] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@41853299] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [7ce0d75a-53de-4607-aad8-b04e06e244dc]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@7d7cac8]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@655a01d8, testMethod = findUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@655a01d8, testMethod = findUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.UserProfileServiceImplTest@6fc6deb7]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@6fc6deb7, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 66, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.UserProfileServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserProfileService ro.estore.domain.service.impl.UserProfileServiceImplTest.userProfileService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.UserProfileConverter ro.estore.domain.service.impl.UserProfileServiceImplTest.userProfileConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.UserProfileServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserProfileServiceImplTest@6fc6deb7]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.UserProfileServiceImplTest@6fc6deb7], method [public void ro.estore.domain.service.impl.UserProfileServiceImplTest.updateUserProfileTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@6fc6deb7, testMethod = updateUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImplTest.updateUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@6fc6deb7, testMethod = updateUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 67, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@6fc6deb7, testMethod = updateUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserProfileServiceImplTest.updateUserProfileTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [2bdd4381-957c-46cb-b6ac-d281a1af3b76] at timestamp: 14689155665
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1df1ced0]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@5349b246] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@32b0876c] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@6fc6deb7, testMethod = updateUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@32b0876c] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@5349b246] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@32b0876c] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        userprofil0_.user_profile_id as user_pro1_5_0_,
        userprofil0_.email_address as email_ad2_5_0_,
        userprofil0_.name as name3_5_0_,
        userprofil0_.phone_number as phone_nu4_5_0_,
        userprofil0_.surname as surname5_5_0_ 
    from
        user_profile userprofil0_ 
    where
        userprofil0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@2aaf152b: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@2aaf152b: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@39bbd9e0]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_0_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_0_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_0_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_0_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@39bbd9e0]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@39bbd9e0]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@2aaf152b: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@2aaf152b: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.UserProfile#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 20ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        addresses0_.user_profile_id as user_pro7_0_0_,
        addresses0_.address_id as address_1_0_0_,
        addresses0_.address_id as address_1_0_1_,
        addresses0_.address_line_1 as address_2_0_1_,
        addresses0_.address_line_2 as address_3_0_1_,
        addresses0_.address_name as address_4_0_1_,
        addresses0_.city as city5_0_1_,
        addresses0_.postcode as postcode6_0_1_ 
    from
        address addresses0_ 
    where
        addresses0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@24841372: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@24841372: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@77114efe]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@77114efe]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_1_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_1_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_1_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_1_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_1_] : [VARCHAR]) - [00000]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro7_0_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@77114efe, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@3e4e4c1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@77114efe, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@3e4e4c1]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@77114efe]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@77114efe]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@24841372: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@24841372: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 28ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 50ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.findById]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@32b0876c] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@5349b246] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.update]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(DomainDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@32b0876c] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfile ro.estore.domain.converter.UserProfileConverter.toEntity(UserProfileDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfile ro.estore.domain.converter.UserProfileConverter.toEntity(UserProfileDTO) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@32b0876c] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultMergeEventListener - Merging detached instance
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.Cascade - Processing cascade ACTION_MERGE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Cascade ACTION_MERGE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE spi.CascadingActions$6 - Cascading to merge: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultMergeEventListener - Merging detached instance
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.Cascade - Done cascade ACTION_MERGE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done processing cascade ACTION_MERGE for: ro.estore.model.entitiy.UserProfile
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object) took 13ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(DomainDTO) took 22ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.update]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@32b0876c] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@5349b246] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@32b0876c] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 4ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.UserProfileServiceImplTest@6fc6deb7], method [public void ro.estore.domain.service.impl.UserProfileServiceImplTest.updateUserProfileTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@6fc6deb7, testMethod = updateUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@46a488c2]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@32b0876c] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@5349b246] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [2bdd4381-957c-46cb-b6ac-d281a1af3b76]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@6242ae3b]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@6fc6deb7, testMethod = updateUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@6fc6deb7, testMethod = updateUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.UserProfileServiceImplTest@65ddee5a]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@65ddee5a, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 68, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.UserProfileServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserProfileService ro.estore.domain.service.impl.UserProfileServiceImplTest.userProfileService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.UserProfileConverter ro.estore.domain.service.impl.UserProfileServiceImplTest.userProfileConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.UserProfileServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserProfileServiceImplTest@65ddee5a]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.UserProfileServiceImplTest@65ddee5a], method [public void ro.estore.domain.service.impl.UserProfileServiceImplTest.deleteUserProfileTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@65ddee5a, testMethod = deleteUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImplTest.deleteUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@65ddee5a, testMethod = deleteUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 69, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@65ddee5a, testMethod = deleteUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserProfileServiceImplTest.deleteUserProfileTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [c32e9908-e2a8-4852-9175-40e269214576] at timestamp: 14689155667
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@49d831c2]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@53a7a60c] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@28bdbe88] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@65ddee5a, testMethod = deleteUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@28bdbe88] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@53a7a60c] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@28bdbe88] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        userprofil0_.user_profile_id as user_pro1_5_0_,
        userprofil0_.email_address as email_ad2_5_0_,
        userprofil0_.name as name3_5_0_,
        userprofil0_.phone_number as phone_nu4_5_0_,
        userprofil0_.surname as surname5_5_0_ 
    from
        user_profile userprofil0_ 
    where
        userprofil0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@6a87026: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@6a87026: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@ef60710]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_0_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_0_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_0_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_0_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@ef60710]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@ef60710]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@6a87026: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@6a87026: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.UserProfile#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 13ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        addresses0_.user_profile_id as user_pro7_0_0_,
        addresses0_.address_id as address_1_0_0_,
        addresses0_.address_id as address_1_0_1_,
        addresses0_.address_line_1 as address_2_0_1_,
        addresses0_.address_line_2 as address_3_0_1_,
        addresses0_.address_name as address_4_0_1_,
        addresses0_.city as city5_0_1_,
        addresses0_.postcode as postcode6_0_1_ 
    from
        address addresses0_ 
    where
        addresses0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@606f81b5: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@606f81b5: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@5e1fc42f]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@5e1fc42f]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_1_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_1_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_1_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_1_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_1_] : [VARCHAR]) - [00000]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro7_0_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@5e1fc42f, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@7ee8130e]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@5e1fc42f, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@7ee8130e]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@5e1fc42f]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@5e1fc42f]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@606f81b5: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@606f81b5: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 25ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 39ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.findById]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@28bdbe88] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@53a7a60c] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.remove]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.domain.service.impl.GenericServiceImpl.remove(DomainDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfile ro.estore.domain.converter.UserProfileConverter.toEntity(UserProfileDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfile ro.estore.domain.converter.UserProfileConverter.toEntity(UserProfileDTO) took 4ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@28bdbe88] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@28bdbe88] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@28bdbe88] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Cascade ACTION_DELETE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE spi.CascadingActions$1 - Cascading to delete: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.Cascade - Done cascade ACTION_DELETE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Deleting orphans for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done deleting orphans for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object) took 9ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.domain.service.impl.GenericServiceImpl.remove(DomainDTO) took 20ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.remove]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@28bdbe88] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=2} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@53a7a60c] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@28bdbe88] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 4ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.UserProfileServiceImplTest@65ddee5a], method [public void ro.estore.domain.service.impl.UserProfileServiceImplTest.deleteUserProfileTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@65ddee5a, testMethod = deleteUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@4288d98e]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=2} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@28bdbe88] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@53a7a60c] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [c32e9908-e2a8-4852-9175-40e269214576]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@169268a7]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@65ddee5a, testMethod = deleteUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@65ddee5a, testMethod = deleteUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.UserProfileServiceImplTest@285c6918]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@285c6918, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 70, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.UserProfileServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserProfileService ro.estore.domain.service.impl.UserProfileServiceImplTest.userProfileService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.UserProfileConverter ro.estore.domain.service.impl.UserProfileServiceImplTest.userProfileConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.UserProfileServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserProfileServiceImplTest@285c6918]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.UserProfileServiceImplTest@285c6918], method [public void ro.estore.domain.service.impl.UserProfileServiceImplTest.createUserProfileTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@285c6918, testMethod = createUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImplTest.createUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@285c6918, testMethod = createUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 71, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@285c6918, testMethod = createUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserProfileServiceImplTest.createUserProfileTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [6177e091-f40b-497f-93b7-6374cf648823] at timestamp: 14689155668
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@326d27ac]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@4d499d65] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@313f8301] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@285c6918, testMethod = createUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfile ro.estore.util.TestUtils.createUserProfile(String)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfile ro.estore.util.TestUtils.createUserProfile(String) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 1ms to execute.
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@313f8301] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@4d499d65] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.create]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.create(DomainDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfile ro.estore.domain.converter.UserProfileConverter.toEntity(UserProfileDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfile ro.estore.domain.converter.UserProfileConverter.toEntity(UserProfileDTO) took 4ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@313f8301] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.UserProfile#<null>]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.WrapVisitor - Wrapped collection in role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.UserProfile] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.UserProfile#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.UserProfile#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.UserProfile (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        user_profile
        (email_address, name, phone_number, surname) 
    values
        (?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@661d88a: insert into user_profile (email_address, name, phone_number, surname) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.UserProfile#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [ceva@email.com_1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [name_1]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [0123456789_1]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [VARCHAR] - [surname_1]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 41
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@4b0b64cc]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@4b0b64cc]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@661d88a: insert into user_profile (email_address, name, phone_number, surname) values ('ceva@email.com_1', 'name_1', '0123456789_1', 'surname_1')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@661d88a: insert into user_profile (email_address, name, phone_number, surname) values ('ceva@email.com_1', 'name_1', '0123456789_1', 'surname_1')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Address
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Address] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Address (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        address
        (address_line_1, address_line_2, address_name, city, postcode) 
    values
        (?, ?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@404db674: insert into address (address_line_1, address_line_2, address_name, city, postcode) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [addr line 1_1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [addr line 2_1]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [ceva@email.com_1]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [VARCHAR] - [city_1]
 [main] TRACE sql.BasicBinder - binding parameter [5] as [VARCHAR] - [postcode_1]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 100
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@50f097b5]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@50f097b5]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@404db674: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1', 'addr line 2_1', 'ceva@email.com_1', 'city_1', 'postcode_1')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@404db674: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1', 'addr line 2_1', 'ceva@email.com_1', 'city_1', 'postcode_1')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Address
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Address] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Address (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        address
        (address_line_1, address_line_2, address_name, city, postcode) 
    values
        (?, ?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@1bb15351: insert into address (address_line_1, address_line_2, address_name, city, postcode) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [addr line 1_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [addr line 2_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [ceva@email.com_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [VARCHAR] - [city_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [5] as [VARCHAR] - [postcode_1_2]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 101
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@4fa822ad]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@4fa822ad]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@1bb15351: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1_2', 'addr line 2_1_2', 'ceva@email.com_1_2', 'city_1_2', 'postcode_1_2')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@1bb15351: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1_2', 'addr line 2_1_2', 'ceva@email.com_1_2', 'city_1_2', 'postcode_1_2')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Done cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object) took 49ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.create(DomainDTO) took 58ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.create]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.UserProfileServiceImplTest@285c6918], method [public void ro.estore.domain.service.impl.UserProfileServiceImplTest.createUserProfileTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@285c6918, testMethod = createUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@7ad1caa2]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#41], EntityKey[ro.estore.model.entitiy.Address#101], EntityKey[ro.estore.model.entitiy.Address#100]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@313f8301] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@4d499d65] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [6177e091-f40b-497f-93b7-6374cf648823]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@6b6b3572]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@285c6918, testMethod = createUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@285c6918, testMethod = createUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] TRACE context.TestContextManager - afterTestClass(): class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@2d38edfd testClass = UserProfileServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1507c3c3 testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - beforeTestClass(): class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@303f1234]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@303f1234, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 72, missCount = 1]
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest' to bean named 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.productRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest' to bean named 'productRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest' to bean named 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductRepositoryJpaImplTest.findProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@303f1234]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.findProductTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductRepositoryJpaImplTest.setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.setUp()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductRepositoryJpaImplTest.createProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.createProductTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductRepositoryJpaImplTest.deleteProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.deleteProductTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductRepositoryJpaImplTest.updateProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.updateProductTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@303f1234], method [public void ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.deleteProductTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@303f1234, testMethod = deleteProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductRepositoryJpaImplTest.deleteProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@303f1234, testMethod = deleteProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@21e20ad5 transactionManagerName = '', defaultRollback = true] for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 73, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@303f1234, testMethod = deleteProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.deleteProductTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [dc17259b-0571-44ea-a2ea-e2280dfa6781] at timestamp: 14689155669
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@95eb320]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@2f521c4] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@4afbb6c2] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@303f1234, testMethod = deleteProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@4afbb6c2] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        product0_.product_id as product_1_2_0_,
        product0_.brand as brand2_2_0_,
        product0_.description as descript3_2_0_,
        product0_.name as name4_2_0_,
        product0_.price as price5_2_0_,
        product0_.stock as stock6_2_0_ 
    from
        product product0_ 
    where
        product0_.product_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@10db6131: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@10db6131: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@6c6017b9]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_0_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_0_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_0_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_0_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_0_] : [INTEGER]) - [14]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@6c6017b9]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@6c6017b9]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@10db6131: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@10db6131: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Product#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 14ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@4afbb6c2] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@4afbb6c2] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Product#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@4afbb6c2] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@303f1234], method [public void ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.deleteProductTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@303f1234, testMethod = deleteProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@506a1372]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=1} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@4afbb6c2] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@2f521c4] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [dc17259b-0571-44ea-a2ea-e2280dfa6781]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@1b7332a7]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@303f1234, testMethod = deleteProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@303f1234, testMethod = deleteProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@77c233af]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@77c233af, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 74, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.productRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@77c233af]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@77c233af], method [public void ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.createProductTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@77c233af, testMethod = createProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductRepositoryJpaImplTest.createProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@77c233af, testMethod = createProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 75, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@77c233af, testMethod = createProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.createProductTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [9ba93fd8-8a27-440d-98a8-706d09a350aa] at timestamp: 14689155670
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5399f6c5]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@4fe64d23] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@58437801] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@77c233af, testMethod = createProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.util.TestUtils.createProduct(String)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.util.TestUtils.createProduct(String) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@58437801] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Product
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Product#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Product] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Product#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Product#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Product (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        product
        (brand, description, name, price, stock) 
    values
        (?, ?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@76464795: insert into product (brand, description, name, price, stock) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Product#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [brand]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [desc_1]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [prod name_1]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [DOUBLE] - [21.542]
 [main] TRACE sql.BasicBinder - binding parameter [5] as [INTEGER] - [543]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 29
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@f1868c9]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@f1868c9]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@76464795: insert into product (brand, description, name, price, stock) values ('brand', 'desc_1', 'prod name_1', 21.542, 543)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@76464795: insert into product (brand, description, name, price, stock) values ('brand', 'desc_1', 'prod name_1', 21.542, 543)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object) took 14ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@77c233af], method [public void ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.createProductTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@77c233af, testMethod = createProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@642413d4]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#29]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@58437801] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@4fe64d23] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [9ba93fd8-8a27-440d-98a8-706d09a350aa]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@fb2e3fd]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@77c233af, testMethod = createProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@77c233af, testMethod = createProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@43a09ce2]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@43a09ce2, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 76, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.productRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@43a09ce2]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@43a09ce2], method [public void ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.findProductTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@43a09ce2, testMethod = findProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductRepositoryJpaImplTest.findProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@43a09ce2, testMethod = findProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 77, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@43a09ce2, testMethod = findProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.findProductTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [af68ab0c-7c9b-4297-8ea2-bca27b090993] at timestamp: 14689155670
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@24534cb0]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@5a50d9fc] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@106d77da] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@43a09ce2, testMethod = findProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@106d77da] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        product0_.product_id as product_1_2_0_,
        product0_.brand as brand2_2_0_,
        product0_.description as descript3_2_0_,
        product0_.name as name4_2_0_,
        product0_.price as price5_2_0_,
        product0_.stock as stock6_2_0_ 
    from
        product product0_ 
    where
        product0_.product_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@6f9c5048: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@6f9c5048: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@5114b7c7]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_0_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_0_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_0_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_0_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_0_] : [INTEGER]) - [14]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@5114b7c7]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@5114b7c7]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@6f9c5048: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@6f9c5048: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Product#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 13ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@43a09ce2], method [public void ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.findProductTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@43a09ce2, testMethod = findProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@767f6ee7]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@106d77da] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@5a50d9fc] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [af68ab0c-7c9b-4297-8ea2-bca27b090993]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@7b6c6e70]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@43a09ce2, testMethod = findProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@43a09ce2, testMethod = findProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@f324455]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@f324455, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 78, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.productRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@f324455]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@f324455], method [public void ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.updateProductTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@f324455, testMethod = updateProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductRepositoryJpaImplTest.updateProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@f324455, testMethod = updateProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 79, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@f324455, testMethod = updateProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.updateProductTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [1ca289b2-e16f-4384-85e5-e4257e6f2c00] at timestamp: 14689155670
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3206174f]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@42fb8c87] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@15eb0ae9] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@f324455, testMethod = updateProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@15eb0ae9] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        product0_.product_id as product_1_2_0_,
        product0_.brand as brand2_2_0_,
        product0_.description as descript3_2_0_,
        product0_.name as name4_2_0_,
        product0_.price as price5_2_0_,
        product0_.stock as stock6_2_0_ 
    from
        product product0_ 
    where
        product0_.product_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@65e0b505: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@65e0b505: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@67de7a99]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_0_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_0_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_0_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_0_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_0_] : [INTEGER]) - [14]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@67de7a99]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@67de7a99]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@65e0b505: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@65e0b505: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Product#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 15ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@15eb0ae9] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.AbstractSaveEventListener - Persistent instance of: ro.estore.model.entitiy.Product
 [main] TRACE internal.DefaultPersistEventListener - Ignoring persistent instance
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@15eb0ae9] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.AbstractSaveEventListener - Persistent instance of: ro.estore.model.entitiy.Product
 [main] TRACE internal.DefaultMergeEventListener - Ignoring persistent instance
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@15eb0ae9] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@f324455], method [public void ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.updateProductTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@f324455, testMethod = updateProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@34aeacd1]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@15eb0ae9] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@42fb8c87] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [1ca289b2-e16f-4384-85e5-e4257e6f2c00]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@54067fdc]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@f324455, testMethod = updateProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@f324455, testMethod = updateProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] TRACE context.TestContextManager - afterTestClass(): class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@65d8dff8 testClass = ProductRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@444f44c5 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] TRACE context.TestContextManager - beforeTestClass(): class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@4098dd77 testClass = OrderServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.OrderServiceImplTest@2274160]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4098dd77 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@2274160, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 80, missCount = 1]
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.OrderService ro.estore.domain.service.impl.OrderServiceImplTest.orderService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderServiceImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.OrderServiceImplTest' to bean named 'orderServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.service.impl.OrderServiceImplTest.productConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.OrderServiceImplTest' to bean named 'productConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.OrderServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.OrderServiceImplTest' to bean named 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.OrderServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.OrderServiceImplTest' to bean named 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImplTest.deleteOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.OrderServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.OrderServiceImplTest@2274160]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.OrderServiceImplTest.deleteOrderTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImplTest.updateOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.OrderServiceImplTest.updateOrderTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImplTest.findOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.OrderServiceImplTest.findOrderTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.OrderServiceImplTest@2274160], method [public void ro.estore.domain.service.impl.OrderServiceImplTest.findOrderTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@4098dd77 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@2274160, testMethod = findOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImplTest.findOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4098dd77 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@2274160, testMethod = findOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.domain.service.impl.OrderServiceImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@21e20ad5 transactionManagerName = '', defaultRollback = true] for test class [ro.estore.domain.service.impl.OrderServiceImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 81, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4098dd77 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@2274160, testMethod = findOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.OrderServiceImplTest.findOrderTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [b1e4ee03-e46e-4b81-acb4-24d26109fbbe] at timestamp: 14689155671
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5a02bfe3]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@7a3e5cd3] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@3c79088e] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4098dd77 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@2274160, testMethod = findOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@3c79088e] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@7a3e5cd3] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.OrderServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@3c79088e] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Order#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        order0_.order_id as order_id1_1_0_,
        order0_.address_id as address_2_1_0_,
        address1_.address_id as address_1_0_1_,
        address1_.address_line_1 as address_2_0_1_,
        address1_.address_line_2 as address_3_0_1_,
        address1_.address_name as address_4_0_1_,
        address1_.city as city5_0_1_,
        address1_.postcode as postcode6_0_1_ 
    from
        `
    order` order0_ inner join
        address address1_ 
            on order0_.address_id=address1_.address_id 
    where
        order0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@4a37191a: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@4a37191a: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@5854a18]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_1_0_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_1_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_1_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_1_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_1_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_1_] : [VARCHAR]) - [00000]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@5854a18]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@5854a18]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@4a37191a: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@4a37191a: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Order#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 19ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchases0_.order_id as order_id4_3_0_,
        purchases0_.purchase_id as purchase1_3_0_,
        purchases0_.purchase_id as purchase1_3_1_,
        purchases0_.product_id as product_3_3_1_,
        purchases0_.quantity as quantity2_3_1_,
        product1_.product_id as product_1_2_2_,
        product1_.brand as brand2_2_2_,
        product1_.description as descript3_2_2_,
        product1_.name as name4_2_2_,
        product1_.price as price5_2_2_,
        product1_.stock as stock6_2_2_ 
    from
        purchase purchases0_ 
    inner join
        product product1_ 
            on purchases0_.product_id=product1_.product_id 
    where
        purchases0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@24eb65e3: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@24eb65e3: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@3ac3f6f]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@3ac3f6f]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_1_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_2_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_2_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_2_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_2_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_2_] : [INTEGER]) - [14]
 [main] TRACE sql.BasicExtractor - extracted value ([order_id4_3_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@3ac3f6f, coll=[ro.estore.model.entitiy.Order.purchases#1]>@67cefd84]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@3ac3f6f, coll=[ro.estore.model.entitiy.Order.purchases#1]>@67cefd84]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@3ac3f6f]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@3ac3f6f]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@24eb65e3: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@24eb65e3: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 29ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 57ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.OrderServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.OrderServiceImplTest@2274160], method [public void ro.estore.domain.service.impl.OrderServiceImplTest.findOrderTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@4098dd77 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@2274160, testMethod = findOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@5fbe155]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@3c79088e] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@7a3e5cd3] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [b1e4ee03-e46e-4b81-acb4-24d26109fbbe]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@6add8e3f]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@4098dd77 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@2274160, testMethod = findOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4098dd77 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@2274160, testMethod = findOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.OrderServiceImplTest@58a2b917]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4098dd77 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@58a2b917, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 82, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.OrderService ro.estore.domain.service.impl.OrderServiceImplTest.orderService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.service.impl.OrderServiceImplTest.productConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.OrderServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.OrderServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.OrderServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.OrderServiceImplTest@58a2b917]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.OrderServiceImplTest@58a2b917], method [public void ro.estore.domain.service.impl.OrderServiceImplTest.deleteOrderTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@4098dd77 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@58a2b917, testMethod = deleteOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImplTest.deleteOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4098dd77 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@58a2b917, testMethod = deleteOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 83, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4098dd77 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@58a2b917, testMethod = deleteOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.OrderServiceImplTest.deleteOrderTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [ff805f57-81cb-497c-9d61-530a0167542c] at timestamp: 14689155672
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@59b65dce]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@1386313f] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@5e922647] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4098dd77 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@58a2b917, testMethod = deleteOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5e922647] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@1386313f] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.OrderServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5e922647] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Order#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        order0_.order_id as order_id1_1_0_,
        order0_.address_id as address_2_1_0_,
        address1_.address_id as address_1_0_1_,
        address1_.address_line_1 as address_2_0_1_,
        address1_.address_line_2 as address_3_0_1_,
        address1_.address_name as address_4_0_1_,
        address1_.city as city5_0_1_,
        address1_.postcode as postcode6_0_1_ 
    from
        `
    order` order0_ inner join
        address address1_ 
            on order0_.address_id=address1_.address_id 
    where
        order0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@433c6abb: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@433c6abb: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@288f173f]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_1_0_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_1_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_1_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_1_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_1_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_1_] : [VARCHAR]) - [00000]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@288f173f]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@288f173f]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@433c6abb: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@433c6abb: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Order#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 20ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchases0_.order_id as order_id4_3_0_,
        purchases0_.purchase_id as purchase1_3_0_,
        purchases0_.purchase_id as purchase1_3_1_,
        purchases0_.product_id as product_3_3_1_,
        purchases0_.quantity as quantity2_3_1_,
        product1_.product_id as product_1_2_2_,
        product1_.brand as brand2_2_2_,
        product1_.description as descript3_2_2_,
        product1_.name as name4_2_2_,
        product1_.price as price5_2_2_,
        product1_.stock as stock6_2_2_ 
    from
        purchase purchases0_ 
    inner join
        product product1_ 
            on purchases0_.product_id=product1_.product_id 
    where
        purchases0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@35e26d05: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@35e26d05: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@29fa6b65]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@29fa6b65]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_1_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_2_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_2_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_2_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_2_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_2_] : [INTEGER]) - [14]
 [main] TRACE sql.BasicExtractor - extracted value ([order_id4_3_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@29fa6b65, coll=[ro.estore.model.entitiy.Order.purchases#1]>@1bb740f2]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@29fa6b65, coll=[ro.estore.model.entitiy.Order.purchases#1]>@1bb740f2]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@29fa6b65]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@29fa6b65]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@35e26d05: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@35e26d05: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 30ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 51ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.OrderServiceImpl.findById]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5e922647] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@1386313f] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.OrderServiceImpl.remove]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.domain.service.impl.GenericServiceImpl.remove(DomainDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Order ro.estore.domain.converter.OrderConverter.toEntity(OrderDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Order ro.estore.domain.converter.OrderConverter.toEntity(OrderDTO) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5e922647] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5e922647] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Order#1]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5e922647] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Cascade ACTION_DELETE for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE spi.CascadingActions$1 - Cascading to delete: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.Cascade - Done cascade ACTION_DELETE for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object) took 4ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.domain.service.impl.GenericServiceImpl.remove(DomainDTO) took 7ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.OrderServiceImpl.remove]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5e922647] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=2} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@1386313f] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.OrderServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5e922647] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 2ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.OrderServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.OrderServiceImplTest@58a2b917], method [public void ro.estore.domain.service.impl.OrderServiceImplTest.deleteOrderTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@4098dd77 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@58a2b917, testMethod = deleteOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@61f6d381]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=2} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@5e922647] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@1386313f] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [ff805f57-81cb-497c-9d61-530a0167542c]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@656922a0]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@4098dd77 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@58a2b917, testMethod = deleteOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4098dd77 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@58a2b917, testMethod = deleteOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.OrderServiceImplTest@44784e2f]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4098dd77 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@44784e2f, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 84, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.OrderService ro.estore.domain.service.impl.OrderServiceImplTest.orderService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.service.impl.OrderServiceImplTest.productConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.OrderServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.OrderServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.OrderServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.OrderServiceImplTest@44784e2f]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.OrderServiceImplTest@44784e2f], method [public void ro.estore.domain.service.impl.OrderServiceImplTest.updateOrderTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@4098dd77 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@44784e2f, testMethod = updateOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImplTest.updateOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4098dd77 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@44784e2f, testMethod = updateOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 85, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4098dd77 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@44784e2f, testMethod = updateOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.OrderServiceImplTest.updateOrderTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [4ea7a98f-3c08-4cff-aa26-7d6595a30376] at timestamp: 14689155673
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5922d3e9]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@7d57dbb5] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@630b6190] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4098dd77 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@44784e2f, testMethod = updateOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@630b6190] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@7d57dbb5] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.OrderServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@630b6190] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Order#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        order0_.order_id as order_id1_1_0_,
        order0_.address_id as address_2_1_0_,
        address1_.address_id as address_1_0_1_,
        address1_.address_line_1 as address_2_0_1_,
        address1_.address_line_2 as address_3_0_1_,
        address1_.address_name as address_4_0_1_,
        address1_.city as city5_0_1_,
        address1_.postcode as postcode6_0_1_ 
    from
        `
    order` order0_ inner join
        address address1_ 
            on order0_.address_id=address1_.address_id 
    where
        order0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@532e27ab: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@532e27ab: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@1cdc1bbc]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_1_0_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_1_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_1_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_1_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_1_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_1_] : [VARCHAR]) - [00000]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@1cdc1bbc]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@1cdc1bbc]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@532e27ab: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@532e27ab: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Order#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 24ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchases0_.order_id as order_id4_3_0_,
        purchases0_.purchase_id as purchase1_3_0_,
        purchases0_.purchase_id as purchase1_3_1_,
        purchases0_.product_id as product_3_3_1_,
        purchases0_.quantity as quantity2_3_1_,
        product1_.product_id as product_1_2_2_,
        product1_.brand as brand2_2_2_,
        product1_.description as descript3_2_2_,
        product1_.name as name4_2_2_,
        product1_.price as price5_2_2_,
        product1_.stock as stock6_2_2_ 
    from
        purchase purchases0_ 
    inner join
        product product1_ 
            on purchases0_.product_id=product1_.product_id 
    where
        purchases0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@39e69ea7: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@39e69ea7: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@490c7a83]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@490c7a83]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_1_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_2_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_2_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_2_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_2_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_2_] : [INTEGER]) - [14]
 [main] TRACE sql.BasicExtractor - extracted value ([order_id4_3_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@490c7a83, coll=[ro.estore.model.entitiy.Order.purchases#1]>@6d0b0da6]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@490c7a83, coll=[ro.estore.model.entitiy.Order.purchases#1]>@6d0b0da6]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@490c7a83]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@490c7a83]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@39e69ea7: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@39e69ea7: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 30ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 55ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.OrderServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.util.TestUtils.createProduct(String)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.util.TestUtils.createProduct(String) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@630b6190] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@7d57dbb5] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.ProductServiceImpl.create]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.service.impl.ProductServiceImpl.create(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.model.repository.impl.ProductRepositoryJpaImpl.findMatching(Product)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@630b6190] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG internal.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Product as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.brand=:param1 ) and ( generatedAlias0.description=:param2 ) and ( generatedAlias0.price=21.542D )
 [main] TRACE spi.QueryPlanCache - Unable to locate HQL query plan in cache; generating (select generatedAlias0 from Product as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.brand=:param1 ) and ( generatedAlias0.description=:param2 ) and ( generatedAlias0.price=21.542D ))
 [main] DEBUG ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from ro.estore.model.entitiy.Product as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.brand=:param1 ) and ( generatedAlias0.description=:param2 ) and ( generatedAlias0.price=21.542D )
 [main] DEBUG ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'ro'
    |  |     |  |  |  |  \-[IDENT] Node: 'estore'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'entitiy'
    |  |     |  \-[IDENT] Node: 'Product'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  \-[IDENT] Node: 'name'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'param0'
          |  |  \-[EQ] Node: '='
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'brand'
          |  |     \-[COLON] Node: ':'
          |  |        \-[IDENT] Node: 'param1'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'description'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param2'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'price'
             \-[NUM_DOUBLE] Node: '21.542D'

 [main] DEBUG ast.ErrorCounter - throwQueryException() : no errors
 [main] DEBUG antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
 [main] DEBUG tree.FromElement - FromClause{level=1} : ro.estore.model.entitiy.Product (generatedAlias0) -> product0_
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0 -> product0_.product_id
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0 -> product0_.product_id
 [main] TRACE tree.FromElement - Handling property dereference [ro.estore.model.entitiy.Product (generatedAlias0) -> name (class)]
 [main] DEBUG tree.DotNode - getDataType() : name -> org.hibernate.type.StringType@7446d8d5
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0.name -> product0_.name
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0 -> product0_.product_id
 [main] TRACE tree.FromElement - Handling property dereference [ro.estore.model.entitiy.Product (generatedAlias0) -> brand (class)]
 [main] DEBUG tree.DotNode - getDataType() : brand -> org.hibernate.type.StringType@7446d8d5
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0.brand -> product0_.brand
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0 -> product0_.product_id
 [main] TRACE tree.FromElement - Handling property dereference [ro.estore.model.entitiy.Product (generatedAlias0) -> description (class)]
 [main] DEBUG tree.DotNode - getDataType() : description -> org.hibernate.type.StringType@7446d8d5
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0.description -> product0_.description
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0 -> product0_.product_id
 [main] TRACE tree.FromElement - Handling property dereference [ro.estore.model.entitiy.Product (generatedAlias0) -> price (class)]
 [main] DEBUG tree.DotNode - getDataType() : price -> org.hibernate.type.DoubleType@ea9b7c6
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0.price -> product0_.price
 [main] DEBUG antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
 [main] DEBUG ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} product0_.product_id ) ( FromClause{level=1} product product0_ ) ( where ( and ( and ( and ( = ( product0_.name product0_.product_id name ) ? ) ( = ( product0_.brand product0_.product_id brand ) ? ) ) ( = ( product0_.description product0_.product_id description ) ? ) ) ( = ( product0_.price product0_.product_id price ) 21.542 ) ) ) )
 [main] DEBUG util.JoinProcessor - Using FROM fragment [product product0_]
 [main] DEBUG antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
 [main] DEBUG ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'product0_.product_id as product_1_2_' {alias=generatedAlias0, className=ro.estore.model.entitiy.Product, tableAlias=product0_}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.brand as brand2_2_, product0_.description as descript3_2_, product0_.name as name4_2_, product0_.price as price5_2_, product0_.stock as stock6_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=ro.estore.model.entitiy.Product}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'product0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias0.name,tableAlias=product0_,className=ro.estore.model.entitiy.Product,classAlias=generatedAlias0}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'product0_.product_id' {alias=generatedAlias0, className=ro.estore.model.entitiy.Product, tableAlias=product0_}
          |  |  |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7446d8d5}
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[DOT] DotNode: 'product0_.brand' {propertyName=brand,dereferenceType=PRIMITIVE,getPropertyPath=brand,path=generatedAlias0.brand,tableAlias=product0_,className=ro.estore.model.entitiy.Product,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'product0_.product_id' {alias=generatedAlias0, className=ro.estore.model.entitiy.Product, tableAlias=product0_}
          |  |     |  \-[IDENT] IdentNode: 'brand' {originalText=brand}
          |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@7446d8d5}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'product0_.description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=generatedAlias0.description,tableAlias=product0_,className=ro.estore.model.entitiy.Product,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'product0_.product_id' {alias=generatedAlias0, className=ro.estore.model.entitiy.Product, tableAlias=product0_}
          |     |  \-[IDENT] IdentNode: 'description' {originalText=description}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@7446d8d5}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'product0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=product0_,className=ro.estore.model.entitiy.Product,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'product0_.product_id' {alias=generatedAlias0, className=ro.estore.model.entitiy.Product, tableAlias=product0_}
             |  \-[IDENT] IdentNode: 'price' {originalText=price}
             \-[NUM_DOUBLE] LiteralNode: '21.542'

 [main] DEBUG ast.ErrorCounter - throwQueryException() : no errors
 [main] DEBUG ast.QueryTranslatorImpl - HQL: select generatedAlias0 from ro.estore.model.entitiy.Product as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.brand=:param1 ) and ( generatedAlias0.description=:param2 ) and ( generatedAlias0.price=21.542D )
 [main] DEBUG ast.QueryTranslatorImpl - SQL: select product0_.product_id as product_1_2_, product0_.brand as brand2_2_, product0_.description as descript3_2_, product0_.name as name4_2_, product0_.price as price5_2_, product0_.stock as stock6_2_ from product product0_ where product0_.name=? and product0_.brand=? and product0_.description=? and product0_.price=21.542
 [main] DEBUG ast.ErrorCounter - throwQueryException() : no errors
 [main] TRACE spi.HQLQueryPlan - HQL param location recognition took 434.924 nanoseconds (select generatedAlias0 from Product as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.brand=:param1 ) and ( generatedAlias0.description=:param2 ) and ( generatedAlias0.price=21.542D ))
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from Product as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.brand=:param1 ) and ( generatedAlias0.description=:param2 ) and ( generatedAlias0.price=21.542D ))
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@630b6190] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from Product as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.brand=:param1 ) and ( generatedAlias0.description=:param2 ) and ( generatedAlias0.price=21.542D ))
 [main] TRACE internal.AbstractFlushingEventListener - Flushing session
 [main] DEBUG internal.AbstractFlushingEventListener - Processing flush-time cascades
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Order
 [main] TRACE spi.CascadingActions$8 - Cascading to persist on flush: ro.estore.model.entitiy.Address
 [main] TRACE internal.AbstractSaveEventListener - Persistent instance of: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultPersistEventListener - Ignoring persistent instance
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Address
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Address
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Address
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Address
 [main] TRACE internal.Cascade - Cascade ACTION_PERSIST_ON_FLUSH for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE spi.CascadingActions$8 - Cascading to persist on flush: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.AbstractSaveEventListener - Persistent instance of: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultPersistEventListener - Ignoring persistent instance
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.Cascade - Done cascade ACTION_PERSIST_ON_FLUSH for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Address
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Address
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Product
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Product
 [main] DEBUG internal.AbstractFlushingEventListener - Dirty checking collections
 [main] TRACE internal.AbstractFlushingEventListener - Flushing entities and processing referenced collections
 [main] DEBUG internal.Collections - Collection found: [ro.estore.model.entitiy.Order.purchases#1], was: [ro.estore.model.entitiy.Order.purchases#1] (initialized)
 [main] TRACE internal.AbstractFlushingEventListener - Processing unreferenced collections
 [main] TRACE internal.AbstractFlushingEventListener - Scheduling collection removes/(re)creates/updates
 [main] DEBUG internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
 [main] DEBUG internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
 [main] DEBUG util.EntityPrinter - Listing entities:
 [main] DEBUG util.EntityPrinter - ro.estore.model.entitiy.Order{address=ro.estore.model.entitiy.Address#1, purchases=[ro.estore.model.entitiy.Purchase#1], id=1}
 [main] DEBUG util.EntityPrinter - ro.estore.model.entitiy.Product{price=2.34, name=prod0, description=prod0 desc, id=1, stock=14, brand=brand0}
 [main] DEBUG util.EntityPrinter - ro.estore.model.entitiy.Purchase{product=ro.estore.model.entitiy.Product#1, quantity=4, id=1}
 [main] DEBUG util.EntityPrinter - ro.estore.model.entitiy.Address{city=city0, postcode=00000, addressLine1=addr line 1_0, addressLine2=addr line 2_0, addressName=addr name 0, id=1}
 [main] TRACE internal.DefaultAutoFlushEventListener - Don't need to execute flush
 [main] TRACE spi.HQLQueryPlan - Find: select generatedAlias0 from Product as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.brand=:param1 ) and ( generatedAlias0.description=:param2 ) and ( generatedAlias0.price=21.542D )
 [main] TRACE spi.QueryParameters - Named parameters: {param0=prod name_1, param1=brand, param2=desc_1}
 [main] DEBUG spi.SqlStatementLogger - 
    select
        product0_.product_id as product_1_2_,
        product0_.brand as brand2_2_,
        product0_.description as descript3_2_,
        product0_.name as name4_2_,
        product0_.price as price5_2_,
        product0_.stock as stock6_2_ 
    from
        product product0_ 
    where
        product0_.name=? 
        and product0_.brand=? 
        and product0_.description=? 
        and product0_.price=21.542
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@37637a24: select product0_.product_id as product_1_2_, product0_.brand as brand2_2_, product0_.description as descript3_2_, product0_.name as name4_2_, product0_.price as price5_2_, product0_.stock as stock6_2_ from product product0_ where product0_.name=** NOT SPECIFIED ** and product0_.brand=** NOT SPECIFIED ** and product0_.description=** NOT SPECIFIED ** and product0_.price=21.542]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@37637a24: select product0_.product_id as product_1_2_, product0_.brand as brand2_2_, product0_.description as descript3_2_, product0_.name as name4_2_, product0_.price as price5_2_, product0_.stock as stock6_2_ from product product0_ where product0_.name=** NOT SPECIFIED ** and product0_.brand=** NOT SPECIFIED ** and product0_.description=** NOT SPECIFIED ** and product0_.price=21.542]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [prod name_1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [brand]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [desc_1]
 [main] TRACE loader.Loader - Bound [4] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@31e76a8d]
 [main] TRACE loader.Loader - Processing result set
 [main] TRACE loader.Loader - Done processing result set (0 rows)
 [main] TRACE loader.Loader - Total objects hydrated: 0
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@37637a24: select product0_.product_id as product_1_2_, product0_.brand as brand2_2_, product0_.description as descript3_2_, product0_.name as name4_2_, product0_.price as price5_2_, product0_.stock as stock6_2_ from product product0_ where product0_.name='prod name_1' and product0_.brand='brand' and product0_.description='desc_1' and product0_.price=21.542]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@31e76a8d]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@37637a24: select product0_.product_id as product_1_2_, product0_.brand as brand2_2_, product0_.description as descript3_2_, product0_.name as name4_2_, product0_.price as price5_2_, product0_.stock as stock6_2_ from product product0_ where product0_.name='prod name_1' and product0_.brand='brand' and product0_.description='desc_1' and product0_.price=21.542]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] ERROR impl.ProductRepositoryJpaImpl - No product was found (No entity found for query)
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.model.repository.impl.ProductRepositoryJpaImpl.findMatching(Product) took 94ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@630b6190] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Product
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Product#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Product] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Product#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Product#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Product (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        product
        (brand, description, name, price, stock) 
    values
        (?, ?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@6dd1f638: insert into product (brand, description, name, price, stock) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Product#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [brand]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [desc_1]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [prod name_1]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [DOUBLE] - [21.542]
 [main] TRACE sql.BasicBinder - binding parameter [5] as [INTEGER] - [543]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 30
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@414f13fc]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@414f13fc]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@6dd1f638: insert into product (brand, description, name, price, stock) values ('brand', 'desc_1', 'prod name_1', 21.542, 543)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@6dd1f638: insert into product (brand, description, name, price, stock) values ('brand', 'desc_1', 'prod name_1', 21.542, 543)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object) took 13ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.service.impl.ProductServiceImpl.create(ProductDTO) took 112ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.ProductServiceImpl.create]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@630b6190] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1], EntityKey[ro.estore.model.entitiy.Product#30]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@7d57dbb5] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.OrderServiceImpl.update]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(DomainDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@630b6190] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Order#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Order ro.estore.domain.converter.OrderConverter.toEntity(OrderDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Order ro.estore.domain.converter.OrderConverter.toEntity(OrderDTO) took 4ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@630b6190] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultMergeEventListener - Merging detached instance
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.Cascade - Processing cascade ACTION_MERGE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Cascade ACTION_MERGE for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE spi.CascadingActions$6 - Cascading to merge: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultMergeEventListener - Merging detached instance
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] TRACE spi.CascadingActions$6 - Cascading to merge: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultMergeEventListener - Merging transient instance
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#30]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#30]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#30]
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Purchase#<null>]
 [main] DEBUG internal.StatefulPersistenceContext - Detached object being merged (corresponding with a managed entity) has a collection that [contains] the detached child.
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Purchase] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Purchase (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        purchase
        (product_id, quantity, order_id) 
    values
        (?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@410ae5ac: insert into purchase (product_id, quantity, order_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [30]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [INTEGER] - [2]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [BIGINT] - [1]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 67
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@1a8df0b3]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@1a8df0b3]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@410ae5ac: insert into purchase (product_id, quantity, order_id) values (30, 2, 1)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@410ae5ac: insert into purchase (product_id, quantity, order_id) values (30, 2, 1)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Done cascade ACTION_MERGE for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.Cascade - Done processing cascade ACTION_MERGE for: ro.estore.model.entitiy.Order
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object) took 55ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 4ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(DomainDTO) took 67ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.OrderServiceImpl.update]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@630b6190] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1], EntityKey[ro.estore.model.entitiy.Product#30], EntityKey[ro.estore.model.entitiy.Purchase#67]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@7d57dbb5] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.OrderServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@630b6190] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Order#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 6ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.OrderServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.OrderServiceImplTest@44784e2f], method [public void ro.estore.domain.service.impl.OrderServiceImplTest.updateOrderTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@4098dd77 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@44784e2f, testMethod = updateOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@4fd05028]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1], EntityKey[ro.estore.model.entitiy.Product#30], EntityKey[ro.estore.model.entitiy.Purchase#67]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@630b6190] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@7d57dbb5] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [4ea7a98f-3c08-4cff-aa26-7d6595a30376]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@3a2d3909]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@4098dd77 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@44784e2f, testMethod = updateOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4098dd77 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@44784e2f, testMethod = updateOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] TRACE context.TestContextManager - afterTestClass(): class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@4098dd77 testClass = OrderServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@43aeb5e0 testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] TRACE context.TestContextManager - beforeTestClass(): class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.ProductServiceImplTest@54d1608f]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@54d1608f, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 86, missCount = 1]
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.ProductServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.ProductServiceImplTest' to bean named 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.ProductServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.ProductServiceImplTest' to bean named 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.service.impl.ProductServiceImplTest.productConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.ProductServiceImplTest' to bean named 'productConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.ProductServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.ProductServiceImplTest' to bean named 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImplTest.findProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.ProductServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.ProductServiceImplTest@54d1608f]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.ProductServiceImplTest.findProductTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImplTest.setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.ProductServiceImplTest.setUp()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImplTest.createProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.ProductServiceImplTest.createProductTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImplTest.deleteProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.ProductServiceImplTest.deleteProductTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImplTest.updateProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.ProductServiceImplTest.updateProductTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.ProductServiceImplTest@54d1608f], method [public void ro.estore.domain.service.impl.ProductServiceImplTest.deleteProductTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@54d1608f, testMethod = deleteProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImplTest.deleteProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@54d1608f, testMethod = deleteProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.domain.service.impl.ProductServiceImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@21e20ad5 transactionManagerName = '', defaultRollback = true] for test class [ro.estore.domain.service.impl.ProductServiceImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 87, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@54d1608f, testMethod = deleteProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.ProductServiceImplTest.deleteProductTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [dc41eb82-1a66-4468-9e19-9cb34dfe2112] at timestamp: 14689155676
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@46383a78]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@36c281ed] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@244418a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@54d1608f, testMethod = deleteProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@244418a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@36c281ed] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@244418a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        product0_.product_id as product_1_2_0_,
        product0_.brand as brand2_2_0_,
        product0_.description as descript3_2_0_,
        product0_.name as name4_2_0_,
        product0_.price as price5_2_0_,
        product0_.stock as stock6_2_0_ 
    from
        product product0_ 
    where
        product0_.product_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@4b5a078a: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@4b5a078a: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@4c361f63]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_0_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_0_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_0_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_0_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_0_] : [INTEGER]) - [14]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@4c361f63]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@4c361f63]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@4b5a078a: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@4b5a078a: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Product#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 18ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 19ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@244418a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@36c281ed] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.ProductServiceImpl.remove]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.domain.service.impl.GenericServiceImpl.remove(DomainDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@244418a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@244418a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@244418a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Product#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object) took 4ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.domain.service.impl.GenericServiceImpl.remove(DomainDTO) took 6ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.ProductServiceImpl.remove]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@244418a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=1} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@36c281ed] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@244418a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 3ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.ProductServiceImplTest@54d1608f], method [public void ro.estore.domain.service.impl.ProductServiceImplTest.deleteProductTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@54d1608f, testMethod = deleteProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@29fd8e67]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=1} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@244418a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@36c281ed] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [dc41eb82-1a66-4468-9e19-9cb34dfe2112]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@e146f93]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@54d1608f, testMethod = deleteProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@54d1608f, testMethod = deleteProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.ProductServiceImplTest@4bd5849e]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@4bd5849e, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 88, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.ProductServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.ProductServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.service.impl.ProductServiceImplTest.productConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.ProductServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.ProductServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.ProductServiceImplTest@4bd5849e]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.ProductServiceImplTest@4bd5849e], method [public void ro.estore.domain.service.impl.ProductServiceImplTest.createProductTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@4bd5849e, testMethod = createProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImplTest.createProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@4bd5849e, testMethod = createProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 89, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@4bd5849e, testMethod = createProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.ProductServiceImplTest.createProductTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [be67a55f-16d6-4b02-853b-93f6f75ed2fa] at timestamp: 14689155676
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7343922c]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@526b2f3e] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@6f2e1024] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@4bd5849e, testMethod = createProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.util.TestUtils.createProduct(String)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.util.TestUtils.createProduct(String) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@6f2e1024] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@526b2f3e] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.ProductServiceImpl.create]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.service.impl.ProductServiceImpl.create(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.model.repository.impl.ProductRepositoryJpaImpl.findMatching(Product)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@6f2e1024] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG internal.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Product as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.brand=:param1 ) and ( generatedAlias0.description=:param2 ) and ( generatedAlias0.price=21.542D )
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from Product as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.brand=:param1 ) and ( generatedAlias0.description=:param2 ) and ( generatedAlias0.price=21.542D ))
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from Product as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.brand=:param1 ) and ( generatedAlias0.description=:param2 ) and ( generatedAlias0.price=21.542D ))
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@6f2e1024] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from Product as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.brand=:param1 ) and ( generatedAlias0.description=:param2 ) and ( generatedAlias0.price=21.542D ))
 [main] TRACE spi.HQLQueryPlan - Find: select generatedAlias0 from Product as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.brand=:param1 ) and ( generatedAlias0.description=:param2 ) and ( generatedAlias0.price=21.542D )
 [main] TRACE spi.QueryParameters - Named parameters: {param0=prod name_1, param1=brand, param2=desc_1}
 [main] DEBUG spi.SqlStatementLogger - 
    select
        product0_.product_id as product_1_2_,
        product0_.brand as brand2_2_,
        product0_.description as descript3_2_,
        product0_.name as name4_2_,
        product0_.price as price5_2_,
        product0_.stock as stock6_2_ 
    from
        product product0_ 
    where
        product0_.name=? 
        and product0_.brand=? 
        and product0_.description=? 
        and product0_.price=21.542
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@3c50ad4b: select product0_.product_id as product_1_2_, product0_.brand as brand2_2_, product0_.description as descript3_2_, product0_.name as name4_2_, product0_.price as price5_2_, product0_.stock as stock6_2_ from product product0_ where product0_.name=** NOT SPECIFIED ** and product0_.brand=** NOT SPECIFIED ** and product0_.description=** NOT SPECIFIED ** and product0_.price=21.542]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@3c50ad4b: select product0_.product_id as product_1_2_, product0_.brand as brand2_2_, product0_.description as descript3_2_, product0_.name as name4_2_, product0_.price as price5_2_, product0_.stock as stock6_2_ from product product0_ where product0_.name=** NOT SPECIFIED ** and product0_.brand=** NOT SPECIFIED ** and product0_.description=** NOT SPECIFIED ** and product0_.price=21.542]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [prod name_1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [brand]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [desc_1]
 [main] TRACE loader.Loader - Bound [4] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@37496720]
 [main] TRACE loader.Loader - Processing result set
 [main] TRACE loader.Loader - Done processing result set (0 rows)
 [main] TRACE loader.Loader - Total objects hydrated: 0
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@3c50ad4b: select product0_.product_id as product_1_2_, product0_.brand as brand2_2_, product0_.description as descript3_2_, product0_.name as name4_2_, product0_.price as price5_2_, product0_.stock as stock6_2_ from product product0_ where product0_.name='prod name_1' and product0_.brand='brand' and product0_.description='desc_1' and product0_.price=21.542]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@37496720]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@3c50ad4b: select product0_.product_id as product_1_2_, product0_.brand as brand2_2_, product0_.description as descript3_2_, product0_.name as name4_2_, product0_.price as price5_2_, product0_.stock as stock6_2_ from product product0_ where product0_.name='prod name_1' and product0_.brand='brand' and product0_.description='desc_1' and product0_.price=21.542]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] ERROR impl.ProductRepositoryJpaImpl - No product was found (No entity found for query)
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.model.repository.impl.ProductRepositoryJpaImpl.findMatching(Product) took 17ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@6f2e1024] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Product
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Product#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Product] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Product#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Product#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Product (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        product
        (brand, description, name, price, stock) 
    values
        (?, ?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@17947e6d: insert into product (brand, description, name, price, stock) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Product#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [brand]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [desc_1]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [prod name_1]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [DOUBLE] - [21.542]
 [main] TRACE sql.BasicBinder - binding parameter [5] as [INTEGER] - [543]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 31
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@2e17a321]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@2e17a321]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@17947e6d: insert into product (brand, description, name, price, stock) values ('brand', 'desc_1', 'prod name_1', 21.542, 543)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@17947e6d: insert into product (brand, description, name, price, stock) values ('brand', 'desc_1', 'prod name_1', 21.542, 543)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object) took 29ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.service.impl.ProductServiceImpl.create(ProductDTO) took 49ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.ProductServiceImpl.create]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.ProductServiceImplTest@4bd5849e], method [public void ro.estore.domain.service.impl.ProductServiceImplTest.createProductTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@4bd5849e, testMethod = createProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@35f3a22c]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#31]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@6f2e1024] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@526b2f3e] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [be67a55f-16d6-4b02-853b-93f6f75ed2fa]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@1a0c5e9]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@4bd5849e, testMethod = createProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@4bd5849e, testMethod = createProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.ProductServiceImplTest@123d7057]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@123d7057, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 90, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.ProductServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.ProductServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.service.impl.ProductServiceImplTest.productConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.ProductServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.ProductServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.ProductServiceImplTest@123d7057]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.ProductServiceImplTest@123d7057], method [public void ro.estore.domain.service.impl.ProductServiceImplTest.findProductTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@123d7057, testMethod = findProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImplTest.findProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@123d7057, testMethod = findProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 91, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@123d7057, testMethod = findProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.ProductServiceImplTest.findProductTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [1c5a3747-ac79-4c7d-a213-5bcf5f824a9e] at timestamp: 14689155677
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4ba02375]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@7593ea79] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@3289079a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@123d7057, testMethod = findProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@3289079a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@7593ea79] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@3289079a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        product0_.product_id as product_1_2_0_,
        product0_.brand as brand2_2_0_,
        product0_.description as descript3_2_0_,
        product0_.name as name4_2_0_,
        product0_.price as price5_2_0_,
        product0_.stock as stock6_2_0_ 
    from
        product product0_ 
    where
        product0_.product_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@32fa809f: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@32fa809f: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@788ba63e]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_0_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_0_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_0_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_0_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_0_] : [INTEGER]) - [14]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@788ba63e]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@788ba63e]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@32fa809f: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@32fa809f: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Product#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 21ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 22ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.ProductServiceImplTest@123d7057], method [public void ro.estore.domain.service.impl.ProductServiceImplTest.findProductTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@123d7057, testMethod = findProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@68ee3b6d]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@3289079a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@7593ea79] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [1c5a3747-ac79-4c7d-a213-5bcf5f824a9e]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@e76b097]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@123d7057, testMethod = findProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@123d7057, testMethod = findProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.ProductServiceImplTest@2be95d31]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@2be95d31, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 92, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.ProductServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.ProductServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.service.impl.ProductServiceImplTest.productConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.ProductServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.ProductServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.ProductServiceImplTest@2be95d31]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.ProductServiceImplTest@2be95d31], method [public void ro.estore.domain.service.impl.ProductServiceImplTest.updateProductTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@2be95d31, testMethod = updateProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImplTest.updateProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@2be95d31, testMethod = updateProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 93, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@2be95d31, testMethod = updateProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.ProductServiceImplTest.updateProductTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [3e8bfcc4-c60c-4a76-a16b-ba53e425d9be] at timestamp: 14689155678
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@708f018e]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@19a31b9d] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@a5bbaec] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@2be95d31, testMethod = updateProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@a5bbaec] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@19a31b9d] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@a5bbaec] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        product0_.product_id as product_1_2_0_,
        product0_.brand as brand2_2_0_,
        product0_.description as descript3_2_0_,
        product0_.name as name4_2_0_,
        product0_.price as price5_2_0_,
        product0_.stock as stock6_2_0_ 
    from
        product product0_ 
    where
        product0_.product_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@6d60899e: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@6d60899e: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@65eb76cd]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_0_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_0_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_0_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_0_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_0_] : [INTEGER]) - [14]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@65eb76cd]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@65eb76cd]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@6d60899e: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@6d60899e: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Product#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 12ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 13ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@a5bbaec] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@19a31b9d] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.ProductServiceImpl.update]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(DomainDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@a5bbaec] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@a5bbaec] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultMergeEventListener - Merging detached instance
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(DomainDTO) took 5ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.ProductServiceImpl.update]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@a5bbaec] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@19a31b9d] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@a5bbaec] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 2ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.ProductServiceImplTest@2be95d31], method [public void ro.estore.domain.service.impl.ProductServiceImplTest.updateProductTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@2be95d31, testMethod = updateProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@5a0bef24]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@a5bbaec] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@19a31b9d] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [3e8bfcc4-c60c-4a76-a16b-ba53e425d9be]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@6468a7b6]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@2be95d31, testMethod = updateProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@2be95d31, testMethod = updateProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] TRACE context.TestContextManager - afterTestClass(): class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@4fb392c4 testClass = ProductServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d329e testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] TRACE context.TestContextManager - beforeTestClass(): class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@2f860823 testClass = AddressServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.AddressServiceImplTest@6c1cfa53]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@2f860823 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@6c1cfa53, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 94, missCount = 1]
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.AddressServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.AddressServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.AddressServiceImplTest' to bean named 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.AddressServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.AddressService ro.estore.domain.service.impl.AddressServiceImplTest.addressService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressServiceImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.AddressServiceImplTest' to bean named 'addressServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImplTest.findAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.AddressServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.AddressServiceImplTest@6c1cfa53]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.AddressServiceImplTest.findAddressTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImplTest.setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.AddressServiceImplTest.setUp()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImplTest.updateAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.AddressServiceImplTest.updateAddressTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImplTest.deleteAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.AddressServiceImplTest.deleteAddressTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.AddressServiceImplTest@6c1cfa53], method [public void ro.estore.domain.service.impl.AddressServiceImplTest.deleteAddressTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@2f860823 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@6c1cfa53, testMethod = deleteAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImplTest.deleteAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@2f860823 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@6c1cfa53, testMethod = deleteAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.domain.service.impl.AddressServiceImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@21e20ad5 transactionManagerName = '', defaultRollback = true] for test class [ro.estore.domain.service.impl.AddressServiceImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 95, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@2f860823 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@6c1cfa53, testMethod = deleteAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.AddressServiceImplTest.deleteAddressTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [0360449f-adce-437e-bfa7-675df7b8530b] at timestamp: 14689155678
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@15efda6c]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@6056232d] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@33f2df51] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2f860823 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@6c1cfa53, testMethod = deleteAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@33f2df51] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@6056232d] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.AddressServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@33f2df51] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Address#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        address0_.address_id as address_1_0_0_,
        address0_.address_line_1 as address_2_0_0_,
        address0_.address_line_2 as address_3_0_0_,
        address0_.address_name as address_4_0_0_,
        address0_.city as city5_0_0_,
        address0_.postcode as postcode6_0_0_ 
    from
        address address0_ 
    where
        address0_.address_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@107bfcb2: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@107bfcb2: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@7bac686b]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_0_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_0_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_0_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_0_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_0_] : [VARCHAR]) - [00000]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@7bac686b]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@7bac686b]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@107bfcb2: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@107bfcb2: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Address#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 13ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 21ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.AddressServiceImpl.findById]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@33f2df51] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@6056232d] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.AddressServiceImpl.remove]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.domain.service.impl.GenericServiceImpl.remove(DomainDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@33f2df51] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@33f2df51] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@33f2df51] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Address#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.domain.service.impl.GenericServiceImpl.remove(DomainDTO) took 4ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.AddressServiceImpl.remove]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@33f2df51] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=1} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@6056232d] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.AddressServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@33f2df51] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 2ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.AddressServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.AddressServiceImplTest@6c1cfa53], method [public void ro.estore.domain.service.impl.AddressServiceImplTest.deleteAddressTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@2f860823 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@6c1cfa53, testMethod = deleteAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@404eca05]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=1} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@33f2df51] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@6056232d] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [0360449f-adce-437e-bfa7-675df7b8530b]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@58b91d57]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@2f860823 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@6c1cfa53, testMethod = deleteAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@2f860823 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@6c1cfa53, testMethod = deleteAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.AddressServiceImplTest@61a91c9b]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@2f860823 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@61a91c9b, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 96, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.AddressServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.AddressServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.AddressServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.AddressService ro.estore.domain.service.impl.AddressServiceImplTest.addressService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.AddressServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.AddressServiceImplTest@61a91c9b]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.AddressServiceImplTest@61a91c9b], method [public void ro.estore.domain.service.impl.AddressServiceImplTest.findAddressTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@2f860823 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@61a91c9b, testMethod = findAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImplTest.findAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@2f860823 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@61a91c9b, testMethod = findAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 97, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@2f860823 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@61a91c9b, testMethod = findAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.AddressServiceImplTest.findAddressTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [7e7702e2-699f-48a0-8c46-385093ec3ab7] at timestamp: 14689155679
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1806bc4c]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@462e1e64] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@69afa141] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2f860823 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@61a91c9b, testMethod = findAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@69afa141] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@462e1e64] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.AddressServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@69afa141] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Address#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        address0_.address_id as address_1_0_0_,
        address0_.address_line_1 as address_2_0_0_,
        address0_.address_line_2 as address_3_0_0_,
        address0_.address_name as address_4_0_0_,
        address0_.city as city5_0_0_,
        address0_.postcode as postcode6_0_0_ 
    from
        address address0_ 
    where
        address0_.address_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@49f40c00: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@49f40c00: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@643d2dae]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_0_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_0_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_0_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_0_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_0_] : [VARCHAR]) - [00000]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@643d2dae]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@643d2dae]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@49f40c00: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@49f40c00: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Address#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 22ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 24ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.AddressServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.AddressServiceImplTest@61a91c9b], method [public void ro.estore.domain.service.impl.AddressServiceImplTest.findAddressTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@2f860823 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@61a91c9b, testMethod = findAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@4667c4c1]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@69afa141] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@462e1e64] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [7e7702e2-699f-48a0-8c46-385093ec3ab7]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@2f9a4401]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@2f860823 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@61a91c9b, testMethod = findAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@2f860823 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@61a91c9b, testMethod = findAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.AddressServiceImplTest@22c75c01]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@2f860823 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@22c75c01, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 98, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.AddressServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.AddressServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.AddressServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.AddressService ro.estore.domain.service.impl.AddressServiceImplTest.addressService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.AddressServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.AddressServiceImplTest@22c75c01]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.AddressServiceImplTest@22c75c01], method [public void ro.estore.domain.service.impl.AddressServiceImplTest.updateAddressTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@2f860823 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@22c75c01, testMethod = updateAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImplTest.updateAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@2f860823 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@22c75c01, testMethod = updateAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@71f0b72e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 99, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@2f860823 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@22c75c01, testMethod = updateAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.AddressServiceImplTest.updateAddressTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [07cebabf-148c-4543-830a-d1443c7b1576] at timestamp: 14689155679
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5b275811]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@2f0ed952] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@6f044c58] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@2f860823 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@22c75c01, testMethod = updateAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@43f0c2d1]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@6f044c58] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@2f0ed952] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.AddressServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@6f044c58] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Address#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        address0_.address_id as address_1_0_0_,
        address0_.address_line_1 as address_2_0_0_,
        address0_.address_line_2 as address_3_0_0_,
        address0_.address_name as address_4_0_0_,
        address0_.city as city5_0_0_,
        address0_.postcode as postcode6_0_0_ 
    from
        address address0_ 
    where
        address0_.address_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@6d074b14: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@6d074b14: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@c017175]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_0_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_0_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_0_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_0_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_0_] : [VARCHAR]) - [00000]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@c017175]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@c017175]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@6d074b14: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@6d074b14: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Address#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 14ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 16ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.AddressServiceImpl.findById]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@6f044c58] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@2f0ed952] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.AddressServiceImpl.update]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(DomainDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@6f044c58] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@6f044c58] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultMergeEventListener - Merging detached instance
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(DomainDTO) took 6ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.AddressServiceImpl.update]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@6f044c58] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@2f0ed952] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.AddressServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@6f044c58] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.AddressServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.AddressServiceImplTest@22c75c01], method [public void ro.estore.domain.service.impl.AddressServiceImplTest.updateAddressTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@2f860823 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@22c75c01, testMethod = updateAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@4f3faa70]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@6f044c58] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@3d6a6bee] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@2f0ed952] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@4f704591] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [07cebabf-148c-4543-830a-d1443c7b1576]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@4832f03b]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@2f860823 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@22c75c01, testMethod = updateAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@2f860823 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@22c75c01, testMethod = updateAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] TRACE context.TestContextManager - afterTestClass(): class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@2f860823 testClass = AddressServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@696b4a95 testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [Thread-1] INFO  support.AbstractApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@2d8f65a4: startup date [Tue Jul 19 11:05:57 EEST 2016]; root of context hierarchy
 [Thread-1] TRACE support.AbstractApplicationContext - Publishing event in org.springframework.context.support.GenericApplicationContext@2d8f65a4: org.springframework.context.event.ContextClosedEvent[source=org.springframework.context.support.GenericApplicationContext@2d8f65a4: startup date [Tue Jul 19 11:05:57 EEST 2016]; root of context hierarchy]
 [Thread-1] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'lifecycleProcessor'
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4d826d77: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,jpaHibernateTestConfig,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor,addressConverter,orderConverter,productConverter,purchaseConverter,userConverter,userProfileConverter,addressRepositoryJpaImpl,orderRepositoryJpaImpl,productRepositoryJpaImpl,purchaseRepositoryJpaImpl,userProfileRepositoryJpaImpl,userRepositoryJpaImpl,addressServiceImpl,orderServiceImpl,productServiceImpl,purchaseServiceImpl,userProfileServiceImpl,userServiceImpl,loggingAspect,testUtils,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,org.springframework.transaction.config.internalTransactionalEventListenerFactory,ro.estore.model.config.RootJpaHibernateConfig,transactionManager,dataSource,entityManagerFactory,org.springframework.aop.config.internalAutoProxyCreator]; root of factory hierarchy
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'entityManagerFactory': [addressRepositoryJpaImpl, orderRepositoryJpaImpl, productRepositoryJpaImpl, purchaseRepositoryJpaImpl, userProfileRepositoryJpaImpl, userRepositoryJpaImpl, transactionManager]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'addressRepositoryJpaImpl': [addressServiceImpl, ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'addressServiceImpl': [userServiceImpl, ro.estore.domain.service.impl.AddressServiceImplTest]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'userServiceImpl': [ro.estore.domain.service.impl.UserServiceImplTest]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'orderRepositoryJpaImpl': [orderServiceImpl, ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'orderServiceImpl': [ro.estore.domain.service.impl.OrderServiceImplTest]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'productRepositoryJpaImpl': [productServiceImpl, ro.estore.model.repository.impl.UserRepositoryJpaImplTest, ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'productServiceImpl': [ro.estore.domain.service.impl.ProductServiceImplTest]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'purchaseRepositoryJpaImpl': [purchaseServiceImpl, ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'purchaseServiceImpl': [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'userProfileRepositoryJpaImpl': [userProfileServiceImpl, ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'userProfileServiceImpl': [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [Thread-1] DEBUG support.DisposableBeanAdapter - Invoking destroy() on bean with name 'entityManagerFactory'
 [Thread-1] INFO  jpa.AbstractEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
 [Thread-1] DEBUG internal.SessionFactoryImpl - HHH000031: Closing
 [Thread-1] TRACE spi.QueryPlanCache - Cleaning QueryPlan Cache
 [Thread-1] TRACE spi.CascadeStyles - Registering external cascade style [persist : STYLE_PERSIST]
 [Thread-1] DEBUG spi.CascadeStyles - External cascade style regsitration [persist : STYLE_PERSIST] overrode base registration [STYLE_PERSIST_SKIPLAZY]
 [Thread-1] DEBUG internal.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
 [Thread-1] DEBUG internal.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
