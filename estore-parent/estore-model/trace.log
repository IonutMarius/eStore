 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.domain.service.impl.AddressServiceImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] TRACE support.ContextLoaderUtils - Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], classes=[class ro.estore.model.config.JpaHibernateTestConfig], loader=interface org.springframework.test.context.ContextLoader, inheritInitializers=true, locations=[], initializers=[], inheritLocations=true)] for declaring class [ro.estore.domain.service.impl.AddressServiceImplTest].
 [main] TRACE support.ContextLoaderUtils - Resolved context configuration attributes: [ContextConfigurationAttributes@396a51ab declaringClass = 'ro.estore.domain.service.impl.AddressServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@396a51ab declaringClass = 'ro.estore.domain.service.impl.AddressServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] TRACE support.AbstractTestContextBootstrapper - Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@396a51ab declaringClass = 'ro.estore.domain.service.impl.AddressServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@396a51ab declaringClass = 'ro.estore.domain.service.impl.AddressServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] TRACE support.SpringFactoriesLoader - Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]
 [main] TRACE support.ApplicationContextInitializerUtils - Processing context initializers for context configuration attributes [ContextConfigurationAttributes@396a51ab declaringClass = 'ro.estore.domain.service.impl.AddressServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.domain.service.impl.AddressServiceImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@31dc339b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@544fe44c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@31610302, org.springframework.test.context.transaction.TransactionalTestExecutionListener@71318ec4, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@21213b92]
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@31dc339b
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@544fe44c
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@31610302
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@71318ec4
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@21213b92
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] TRACE context.TestContextManager - beforeTestClass(): class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@13a5fe33 testClass = AddressServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.AddressServiceImplTest@6f1fba17]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@13a5fe33 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@6f1fba17, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to load context from [MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
 [main] DEBUG support.AbstractGenericContextLoader - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG env.MutablePropertySources - Adding [systemProperties] PropertySource with lowest search precedence
 [main] DEBUG env.MutablePropertySources - Adding [systemEnvironment] PropertySource with lowest search precedence
 [main] DEBUG env.AbstractEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
 [main] DEBUG support.AnnotationConfigContextLoader - Registering annotated classes: {class ro.estore.model.config.JpaHibernateTestConfig}
 [main] INFO  support.AbstractApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@6321e813: startup date [Tue Jul 19 15:49:08 EEST 2016]; root of context hierarchy
 [main] DEBUG support.AbstractApplicationContext - Bean factory for org.springframework.context.support.GenericApplicationContext@6321e813: org.springframework.beans.factory.support.DefaultListableBeanFactory@146044d7: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,jpaHibernateTestConfig]; root of factory hierarchy
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 [main] DEBUG env.MutablePropertySources - Adding [class path resource [test.properties]] PropertySource with lowest search precedence
 [main] DEBUG env.MutablePropertySources - Adding [systemProperties] PropertySource with lowest search precedence
 [main] DEBUG env.MutablePropertySources - Adding [systemEnvironment] PropertySource with lowest search precedence
 [main] DEBUG env.AbstractEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved classpath location [ro/estore/domain/converter/] to resources [URL [file:/D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/domain/converter/]]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/domain/converter/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:ro/estore/domain/converter/**/*.class] to resources [file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\AddressConverter.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\GenericEntityConverter.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\OrderConverter.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\ProductConverter.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\PurchaseConverter.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\UserConverter.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\UserProfileConverter.class]]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\AddressConverter.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\AddressConverter.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\GenericEntityConverter.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\GenericEntityConverter.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\OrderConverter.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\OrderConverter.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\ProductConverter.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\ProductConverter.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\PurchaseConverter.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\PurchaseConverter.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\UserConverter.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\UserConverter.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\UserProfileConverter.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\converter\UserProfileConverter.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved classpath location [ro/estore/model/repository/] to resources [URL [file:/D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/model/repository/], URL [file:/D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/model/repository/]]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/model/repository/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/model/repository/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/model/repository/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/model/repository/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:ro/estore/model/repository/**/*.class] to resources [file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\AddressRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\OrderRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\ProductRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\PurchaseRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\UserProfileRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\UserRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\AddressRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\GenericRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\AddressRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\GenericRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\OrderRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\ProductRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\PurchaseRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\UserProfileRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\UserRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\OrderRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\ProductRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\PurchaseRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\UserProfileRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\UserRepository.class]]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\AddressRepositoryJpaImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\AddressRepositoryJpaImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\OrderRepositoryJpaImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\OrderRepositoryJpaImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\ProductRepositoryJpaImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\ProductRepositoryJpaImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\PurchaseRepositoryJpaImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\PurchaseRepositoryJpaImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\UserProfileRepositoryJpaImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\UserProfileRepositoryJpaImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\UserRepositoryJpaImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\UserRepositoryJpaImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\AddressRepository.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\AddressRepository.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\GenericRepository.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\GenericRepository.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\AddressRepositoryJpaImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\AddressRepositoryJpaImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\GenericRepositoryJpaImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\GenericRepositoryJpaImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\OrderRepositoryJpaImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\OrderRepositoryJpaImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\ProductRepositoryJpaImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\ProductRepositoryJpaImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\PurchaseRepositoryJpaImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\PurchaseRepositoryJpaImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\UserProfileRepositoryJpaImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\UserProfileRepositoryJpaImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\UserRepositoryJpaImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\UserRepositoryJpaImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\OrderRepository.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\OrderRepository.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\ProductRepository.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\ProductRepository.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\PurchaseRepository.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\PurchaseRepository.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\UserProfileRepository.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\UserProfileRepository.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\UserRepository.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\UserRepository.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved classpath location [ro/estore/domain/service/] to resources [URL [file:/D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/domain/service/], URL [file:/D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/domain/service/]]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/domain/service/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/domain/service/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/domain/service/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/domain/service/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:ro/estore/domain/service/**/*.class] to resources [file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\AddressServiceImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\OrderServiceImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\ProductServiceImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\PurchaseServiceImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\UserProfileServiceImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\UserServiceImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\AddressService.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\GenericService.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\AddressServiceImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\GenericServiceImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\OrderServiceImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\ProductServiceImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\PurchaseServiceImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\UserProfileServiceImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\UserServiceImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\OrderService.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\ProductService.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\PurchaseService.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\UserProfileService.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\UserService.class]]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\AddressServiceImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\AddressServiceImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\OrderServiceImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\OrderServiceImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\ProductServiceImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\ProductServiceImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\PurchaseServiceImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\PurchaseServiceImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\UserProfileServiceImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\UserProfileServiceImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\UserServiceImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\domain\service\impl\UserServiceImplTest.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\AddressService.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\AddressService.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\GenericService.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\GenericService.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\AddressServiceImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\AddressServiceImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\GenericServiceImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\GenericServiceImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\OrderServiceImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\OrderServiceImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\ProductServiceImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\ProductServiceImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\PurchaseServiceImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\PurchaseServiceImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\UserProfileServiceImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\UserProfileServiceImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\UserServiceImpl.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\impl\UserServiceImpl.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\OrderService.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\OrderService.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\ProductService.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\ProductService.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\PurchaseService.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\PurchaseService.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\UserProfileService.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\UserProfileService.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\UserService.class]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Ignored because not matching any filter: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\domain\service\UserService.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved classpath location [ro/estore/aspect/] to resources [URL [file:/D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/aspect/]]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\aspect]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\aspect] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/aspect/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:ro/estore/aspect/**/*.class] to resources [file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\aspect\LoggingAspect.class]]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\aspect\LoggingAspect.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\aspect\LoggingAspect.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved classpath location [ro/estore/util/] to resources [URL [file:/D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/util/]]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\util]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\util] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/util/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:ro/estore/util/**/*.class] to resources [file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\util\TestUtils.class]]
 [main] TRACE annotation.ClassPathScanningCandidateComponentProvider - Scanning file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\util\TestUtils.class]
 [main] DEBUG annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\util\TestUtils.class]
 [main] DEBUG annotation.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
 [main] DEBUG annotation.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration.org.springframework.transaction.config.internalTransactionAdvisor()
 [main] DEBUG annotation.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration.transactionAttributeSource()
 [main] DEBUG annotation.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration.transactionInterceptor()
 [main] DEBUG annotation.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration.org.springframework.transaction.config.internalTransactionalEventListenerFactory()
 [main] DEBUG annotation.ConfigurationClassBeanDefinitionReader - Registered bean definition for imported class 'ro.estore.model.config.RootJpaHibernateConfig'
 [main] DEBUG annotation.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method ro.estore.model.config.RootJpaHibernateConfig.transactionManager()
 [main] DEBUG annotation.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method ro.estore.model.config.RootJpaHibernateConfig.entityManagerFactory()
 [main] DEBUG annotation.ConfigurationClassBeanDefinitionReader - Registering bean definition for @Bean method ro.estore.model.config.RootJpaHibernateConfig.dataSource()
 [main] DEBUG annotation.ConfigurationClassEnhancer - Successfully enhanced ro.estore.model.config.JpaHibernateTestConfig; enhanced class name is: ro.estore.model.config.JpaHibernateTestConfig$$EnhancerBySpringCGLIB$$c7431311
 [main] DEBUG annotation.ConfigurationClassPostProcessor - Replacing bean definition 'jpaHibernateTestConfig' existing class 'ro.estore.model.config.JpaHibernateTestConfig' with enhanced class 'ro.estore.model.config.JpaHibernateTestConfig$$EnhancerBySpringCGLIB$$c7431311'
 [main] DEBUG annotation.ConfigurationClassEnhancer - Successfully enhanced org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; enhanced class name is: org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fc81ebb
 [main] DEBUG annotation.ConfigurationClassPostProcessor - Replacing bean definition 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' existing class 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' with enhanced class 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fc81ebb'
 [main] DEBUG annotation.ConfigurationClassEnhancer - Successfully enhanced ro.estore.model.config.RootJpaHibernateConfig; enhanced class name is: ro.estore.model.config.RootJpaHibernateConfig$$EnhancerBySpringCGLIB$$1c77cde1
 [main] DEBUG annotation.ConfigurationClassPostProcessor - Replacing bean definition 'ro.estore.model.config.RootJpaHibernateConfig' existing class 'ro.estore.model.config.RootJpaHibernateConfig' with enhanced class 'ro.estore.model.config.RootJpaHibernateConfig$$EnhancerBySpringCGLIB$$1c77cde1'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 [main] INFO  annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
 [main] TRACE support.SpringFactoriesLoader - Loaded [org.springframework.beans.BeanInfoFactory] names: [org.springframework.beans.ExtendedBeanInfoFactory]
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'advisorAdapterRegistry' of type [org.springframework.aop.framework.adapter.AdvisorAdapterRegistry]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'applyCommonInterceptorsFirst' of type [boolean]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'aspectJAdvisorFactory' of type [org.springframework.aop.aspectj.annotation.AspectJAdvisorFactory]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'beanClassLoader' of type [java.lang.ClassLoader]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'beanFactory' of type [org.springframework.beans.factory.BeanFactory]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'customTargetSourceCreators' of type [[Lorg.springframework.aop.framework.autoproxy.TargetSourceCreator;]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'exposeProxy' of type [boolean]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'frozen' of type [boolean]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'includePatterns' of type [java.util.List]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'interceptorNames' of type [[Ljava.lang.String;]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'opaque' of type [boolean]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'optimize' of type [boolean]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'order' of type [int]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'proxyClassLoader' of type [java.lang.ClassLoader]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'proxyTargetClass' of type [boolean]
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
 [main] DEBUG support.AbstractApplicationContext - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@44821a96]
 [main] DEBUG support.AbstractApplicationContext - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@66498326]
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'entityManagerFactory'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'entityManagerFactory'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] TRACE autoproxy.AbstractAutoProxyCreator - Did not attempt to auto-proxy infrastructure class [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
 [main] DEBUG autoproxy.BeanFactoryAdvisorRetrievalHelper - Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.ReflectiveAspectJAdvisorFactory - Found AspectJ method: public java.lang.Object ro.estore.aspect.LoggingAspect.logMethodExecutionTime(org.aspectj.lang.ProceedingJoinPoint)
 [main] DEBUG annotation.ReflectiveAspectJAdvisorFactory - Found AspectJ method: public void ro.estore.aspect.LoggingAspect.logMethodCall(org.aspectj.lang.JoinPoint)
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fc81ebb]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fc81ebb]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'beanFactory' of type [org.springframework.beans.factory.BeanFactory]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'importMetadata' of type [org.springframework.core.type.AnnotationMetadata]
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fc81ebb]: AutowiredMethodElement for void org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration.setConfigurers(java.util.Collection)
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' to allow for resolving potential circular references
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': AutowiredMethodElement for void org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration.setConfigurers(java.util.Collection)
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry'
 [main] DEBUG autoproxy.BeanFactoryAdvisorRetrievalHelper - Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.BeanFactoryAdvisorRetrievalHelper - Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'transactionAttributeSource'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'transactionAttributeSource'
 [main] DEBUG autoproxy.BeanFactoryAdvisorRetrievalHelper - Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'transactionAttributeSource' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.transaction.annotation.AnnotationTransactionAttributeSource]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG autoproxy.BeanFactoryAdvisorRetrievalHelper - Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.BeanFactoryAdvisorRetrievalHelper - Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'transactionAttributeSource'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'transactionInterceptor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'transactionInterceptor'
 [main] TRACE autoproxy.AbstractAutoProxyCreator - Did not attempt to auto-proxy infrastructure class [org.springframework.transaction.interceptor.TransactionInterceptor]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionAttributeSource'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'transactionInterceptor' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.transaction.interceptor.TransactionInterceptor]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.transaction.interceptor.TransactionInterceptor]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'beanFactory' of type [org.springframework.beans.factory.BeanFactory]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'transactionAttributeSource' of type [org.springframework.transaction.interceptor.TransactionAttributeSource]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'transactionAttributeSources' of type [[Lorg.springframework.transaction.interceptor.TransactionAttributeSource;]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'transactionAttributes' of type [java.util.Properties]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'transactionManager' of type [org.springframework.transaction.PlatformTransactionManager]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'transactionManagerBeanName' of type [java.lang.String]
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Invoking afterPropertiesSet() on bean with name 'transactionInterceptor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'transactionInterceptor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'advice' of type [org.aopalliance.aop.Advice]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'adviceBeanName' of type [java.lang.String]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'beanFactory' of type [org.springframework.beans.factory.BeanFactory]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'classFilter' of type [org.springframework.aop.ClassFilter]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'order' of type [int]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'perInstance' of type [boolean]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'pointcut' of type [org.springframework.aop.Pointcut]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'transactionAttributeSource' of type [org.springframework.transaction.interceptor.TransactionAttributeSource]
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'ro.estore.model.config.RootJpaHibernateConfig'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'ro.estore.model.config.RootJpaHibernateConfig'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.model.config.RootJpaHibernateConfig$$EnhancerBySpringCGLIB$$1c77cde1]: AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.config.RootJpaHibernateConfig.env
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'ro.estore.model.config.RootJpaHibernateConfig' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.model.config.RootJpaHibernateConfig$$EnhancerBySpringCGLIB$$1c77cde1]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.model.config.RootJpaHibernateConfig$$EnhancerBySpringCGLIB$$1c77cde1]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'beanFactory' of type [org.springframework.beans.factory.BeanFactory]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.config.RootJpaHibernateConfig': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.config.RootJpaHibernateConfig.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.config.RootJpaHibernateConfig' to bean named 'environment'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.config.RootJpaHibernateConfig' with 0 common interceptors and 3 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.config.RootJpaHibernateConfig$$EnhancerBySpringCGLIB$$1c77cde1@24959ca4]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.Properties ro.estore.model.config.RootJpaHibernateConfig.additionalProperties()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public org.springframework.transaction.PlatformTransactionManager ro.estore.model.config.RootJpaHibernateConfig.transactionManager(javax.persistence.EntityManagerFactory)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean ro.estore.model.config.RootJpaHibernateConfig.entityManagerFactory()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public javax.sql.DataSource ro.estore.model.config.RootJpaHibernateConfig.dataSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public abstract void org.springframework.beans.factory.BeanFactoryAware.setBeanFactory(org.springframework.beans.factory.BeanFactory) throws org.springframework.beans.BeansException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'ro.estore.model.config.RootJpaHibernateConfig'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'loggingAspect'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'loggingAspect'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'loggingAspect' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.aspect.LoggingAspect]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.aspect.LoggingAspect]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'loggingAspect'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: LocalContainerEntityManagerFactoryBean ro.estore.model.config.RootJpaHibernateConfig.entityManagerFactory()
	=====================================================================
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'dataSource'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'dataSource'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'ro.estore.model.config.RootJpaHibernateConfig'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DataSource ro.estore.model.config.RootJpaHibernateConfig.dataSource()
	=====================================================================
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'db.driver' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'db.driver' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'db.driver' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'db.driver' in [class path resource [test.properties]] with type [String] and value 'com.mysql.jdbc.Driver'
 [main] INFO  datasource.DriverManagerDataSource - Loaded JDBC driver: com.mysql.jdbc.Driver
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'db.url' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'db.url' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'db.url' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'db.url' in [class path resource [test.properties]] with type [String] and value 'jdbc:mysql://localhost:3306/estore_test'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'db.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'db.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'db.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'db.username' in [class path resource [test.properties]] with type [String] and value 'root'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'db.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'db.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'db.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'db.password' in [class path resource [test.properties]] with type [String] and value 'root'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DataSource ro.estore.model.config.RootJpaHibernateConfig.dataSource() took 32ms to execute.
	=====================================================================
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.jdbc.datasource.DriverManagerDataSource]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.jdbc.datasource.DriverManagerDataSource]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'connection' of type [java.sql.Connection]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'connectionProperties' of type [java.util.Properties]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'driverClassName' of type [java.lang.String]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'logWriter' of type [java.io.PrintWriter]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'loginTimeout' of type [int]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'parentLogger' of type [java.util.logging.Logger]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'password' of type [java.lang.String]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'url' of type [java.lang.String]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'username' of type [java.lang.String]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'dataSource'
 [main] DEBUG jpa.HibernatePersistenceProvider - Logging Provider: org.jboss.logging.Log4jLoggerProvider
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'hibernate.dialect' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'hibernate.dialect' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'hibernate.dialect' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'hibernate.dialect' in [class path resource [test.properties]] with type [String] and value 'org.hibernate.dialect.MySQL5Dialect'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'hibernate.hbm2ddl.auto' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'hibernate.hbm2ddl.auto' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'hibernate.hbm2ddl.auto' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'hibernate.hbm2ddl.auto' in [class path resource [test.properties]] with type [String] and value 'validate'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'hibernate.show_sql' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'hibernate.show_sql' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'hibernate.show_sql' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'hibernate.show_sql' in [class path resource [test.properties]] with type [String] and value 'false'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'hibernate.format_sql' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'hibernate.format_sql' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'hibernate.format_sql' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'hibernate.format_sql' in [class path resource [test.properties]] with type [String] and value 'true'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: LocalContainerEntityManagerFactoryBean ro.estore.model.config.RootJpaHibernateConfig.entityManagerFactory() took 158ms to execute.
	=====================================================================
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'beanClassLoader' of type [java.lang.ClassLoader]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'beanFactory' of type [org.springframework.beans.factory.BeanFactory]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'beanName' of type [java.lang.String]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'bootstrapExecutor' of type [org.springframework.core.task.AsyncTaskExecutor]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'dataSource' of type [javax.sql.DataSource]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'entityManagerFactoryInterface' of type [java.lang.Class]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'entityManagerInterface' of type [java.lang.Class]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'jpaDialect' of type [org.springframework.orm.jpa.JpaDialect]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'jpaProperties' of type [java.util.Properties]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'jpaPropertyMap' of type [java.util.Map]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'jpaVendorAdapter' of type [org.springframework.orm.jpa.JpaVendorAdapter]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'jtaDataSource' of type [javax.sql.DataSource]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'loadTimeWeaver' of type [org.springframework.instrument.classloading.LoadTimeWeaver]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'mappingResources' of type [[Ljava.lang.String;]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'nativeEntityManagerFactory' of type [javax.persistence.EntityManagerFactory]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'object' of type [javax.persistence.EntityManagerFactory]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'objectType' of type [java.lang.Class]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'packagesToScan' of type [[Ljava.lang.String;]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'persistenceProvider' of type [javax.persistence.spi.PersistenceProvider]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'persistenceProviderClass' of type [java.lang.Class]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'persistenceUnitInfo' of type [javax.persistence.spi.PersistenceUnitInfo]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'persistenceUnitManager' of type [org.springframework.orm.jpa.persistenceunit.PersistenceUnitManager]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'persistenceUnitName' of type [java.lang.String]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'persistenceUnitPostProcessors' of type [[Lorg.springframework.orm.jpa.persistenceunit.PersistenceUnitPostProcessor;]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'persistenceXmlLocation' of type [java.lang.String]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'resourceLoader' of type [org.springframework.core.io.ResourceLoader]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'sharedCacheMode' of type [javax.persistence.SharedCacheMode]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'singleton' of type [boolean]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'validationMode' of type [javax.persistence.ValidationMode]
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved classpath location [META-INF/persistence.xml] to resources []
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved classpath location [ro/estore/model/] to resources [URL [file:/D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/model/], URL [file:/D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/model/]]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/model/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\config] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/model/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/model/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/ro/estore/model/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/model/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\config] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/model/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\entitiy] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/model/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/model/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Searching directory [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl] for files matching pattern [D:/other/projects/eStore/estore-parent/estore-model/target/classes/ro/estore/model/**/*.class]
 [main] DEBUG support.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:ro/estore/model/**/*.class] to resources [file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\config\JpaHibernateTestConfig.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\AddressRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\OrderRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\ProductRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\PurchaseRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\UserProfileRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\test-classes\ro\estore\model\repository\impl\UserRepositoryJpaImplTest.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\config\JpaHibernateConfig.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\config\RootJpaHibernateConfig.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\entitiy\Address.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\entitiy\ModelEntity.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\entitiy\Order.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\entitiy\Product.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\entitiy\Purchase.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\entitiy\User.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\entitiy\UserProfile.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\AddressRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\GenericRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\AddressRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\GenericRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\OrderRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\ProductRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\PurchaseRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\UserProfileRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\impl\UserRepositoryJpaImpl.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\OrderRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\ProductRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\PurchaseRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\UserProfileRepository.class], file [D:\other\projects\eStore\estore-parent\estore-model\target\classes\ro\estore\model\repository\UserRepository.class]]
 [main] INFO  jpa.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'
 [main] DEBUG util.LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@6bc7c054
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/other/projects/eStore/estore-parent/estore-model/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		ro.estore.model.entitiy.Address
		ro.estore.model.entitiy.Order
		ro.estore.model.entitiy.Product
		ro.estore.model.entitiy.Purchase
		ro.estore.model.entitiy.User
		ro.estore.model.entitiy.UserProfile]
	Mapping files names []
	Properties []
 [main] DEBUG internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
 [main] DEBUG internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
 [main] DEBUG internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
 [main] DEBUG internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Cache71] -> [org.hibernate.dialect.Cache71Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [CUBRID] -> [org.hibernate.dialect.CUBRIDDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2] -> [org.hibernate.dialect.DB2Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2390] -> [org.hibernate.dialect.DB2390Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2400] -> [org.hibernate.dialect.DB2400Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [DerbyTenFive] -> [org.hibernate.dialect.DerbyTenFiveDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [DerbyTenSix] -> [org.hibernate.dialect.DerbyTenSixDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [DerbyTenSeven] -> [org.hibernate.dialect.DerbyTenSevenDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Firebird] -> [org.hibernate.dialect.FirebirdDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [FrontBase] -> [org.hibernate.dialect.FrontBaseDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [H2] -> [org.hibernate.dialect.H2Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [HSQL] -> [org.hibernate.dialect.HSQLDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Informix] -> [org.hibernate.dialect.InformixDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Ingres] -> [org.hibernate.dialect.IngresDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Ingres9] -> [org.hibernate.dialect.Ingres9Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Ingres10] -> [org.hibernate.dialect.Ingres10Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Interbase] -> [org.hibernate.dialect.InterbaseDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [JDataStore] -> [org.hibernate.dialect.JDataStoreDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Mckoi] -> [org.hibernate.dialect.MckoiDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MimerSQL] -> [org.hibernate.dialect.MimerSQLDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL57InnoDB] -> [org.hibernate.dialect.MySQL57InnoDBDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Oracle8i] -> [org.hibernate.dialect.Oracle8iDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Oracle9i] -> [org.hibernate.dialect.Oracle9iDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Oracle10g] -> [org.hibernate.dialect.Oracle10gDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Pointbase] -> [org.hibernate.dialect.PointbaseDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgresPlus] -> [org.hibernate.dialect.PostgresPlusDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgreSQL81] -> [org.hibernate.dialect.PostgreSQL81Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgreSQL82] -> [org.hibernate.dialect.PostgreSQL82Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgreSQL9] -> [org.hibernate.dialect.PostgreSQL9Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Progress] -> [org.hibernate.dialect.ProgressDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [SAPDB] -> [org.hibernate.dialect.SAPDBDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [SQLServer] -> [org.hibernate.dialect.SQLServerDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [SQLServer2005] -> [org.hibernate.dialect.SQLServer2005Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [SQLServer2008] -> [org.hibernate.dialect.SQLServer2008Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Sybase11] -> [org.hibernate.dialect.Sybase11Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [SybaseAnywhere] -> [org.hibernate.dialect.SybaseAnywhereDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [SybaseASE15] -> [org.hibernate.dialect.SybaseASE15Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [SybaseASE157] -> [org.hibernate.dialect.SybaseASE157Dialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [Teradata] -> [org.hibernate.dialect.TeradataDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [TimesTen] -> [org.hibernate.dialect.TimesTenDialect]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Borland] -> [org.hibernate.engine.transaction.jta.platform.internal.BorlandEnterpriseServerJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.BorlandEnterpriseServerJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.BorlandEnterpriseServerJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Bitronix] -> [org.hibernate.engine.transaction.jta.platform.internal.BitronixJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.BitronixJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.BitronixJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JBossAS] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JBossAppServerJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JBossTS] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossStandAloneJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JBossStandAloneJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossStandAloneJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JOnAS] -> [org.hibernate.engine.transaction.jta.platform.internal.JOnASJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JOnASJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JOnASJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JOTM] -> [org.hibernate.engine.transaction.jta.platform.internal.JOTMJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JOTMJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JOTMJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JRun4] -> [org.hibernate.engine.transaction.jta.platform.internal.JRun4JtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JRun4JtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JRun4JtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [OC4J] -> [org.hibernate.engine.transaction.jta.platform.internal.OC4JJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.OC4JJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.OC4JJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Orion] -> [org.hibernate.engine.transaction.jta.platform.internal.OrionJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.OrionJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.OrionJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Resin] -> [org.hibernate.engine.transaction.jta.platform.internal.ResinJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.ResinJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.ResinJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [SunOne] -> [org.hibernate.engine.transaction.jta.platform.internal.SunOneJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.SunOneJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.SunOneJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Weblogic] -> [org.hibernate.engine.transaction.jta.platform.internal.WeblogicJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.WeblogicJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.WeblogicJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [WebSphere] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.WebSphereJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [WebSphereExtended] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.WebSphereExtendedJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [persistent] -> [org.hibernate.hql.spi.id.persistent.PersistentTableBulkIdStrategy]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [global_temporary] -> [org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [local_temporary] -> [org.hibernate.hql.spi.id.local.LocalTemporaryTableBulkIdStrategy]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.event.spi.EntityCopyObserver] : [disallow] -> [org.hibernate.event.internal.EntityCopyNotAllowedObserver]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.event.spi.EntityCopyObserver] : [allow] -> [org.hibernate.event.internal.EntityCopyAllowedObserver]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.event.spi.EntityCopyObserver] : [log] -> [org.hibernate.event.internal.EntityCopyAllowedLoggedObserver]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
 [main] TRACE internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
 [main] INFO  hibernate.Version - HHH000412: Hibernate Core {5.2.1.Final}
 [main] INFO  cfg.Environment - HHH000206: hibernate.properties not found
 [main] INFO  cfg.Environment - HHH000021: Bytecode provider name : javassist
 [main] DEBUG spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.cache.spi.RegionFactory]
 [main] DEBUG internal.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
 [main] INFO  java.JavaReflectionManager - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
 [main] DEBUG type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5e81e5ac
 [main] DEBUG type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5e81e5ac
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5e81e5ac
 [main] DEBUG type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6035b93b
 [main] DEBUG type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@58fe0499
 [main] DEBUG type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@68b6f0d6
 [main] DEBUG type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@62e6b5c8
 [main] DEBUG type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@62e6b5c8
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@62e6b5c8
 [main] DEBUG type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6aecbb8d
 [main] DEBUG type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6aecbb8d
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6aecbb8d
 [main] DEBUG type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4c398c80
 [main] DEBUG type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4c398c80
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4c398c80
 [main] DEBUG type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@29df4d43
 [main] DEBUG type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@29df4d43
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@29df4d43
 [main] DEBUG type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4a891c97
 [main] DEBUG type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4a891c97
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4a891c97
 [main] DEBUG type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6cfcd46d
 [main] DEBUG type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6cfcd46d
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6cfcd46d
 [main] DEBUG type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@58c34bb3
 [main] DEBUG type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@58c34bb3
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@58c34bb3
 [main] DEBUG type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@34997338
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@34997338
 [main] DEBUG type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@163d04ff
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@163d04ff
 [main] DEBUG type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@788fcafb
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@788fcafb
 [main] DEBUG type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2fc0cc3
 [main] DEBUG type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@75459c75
 [main] DEBUG type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@b78a709
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@b78a709
 [main] DEBUG type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@cb191ca
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@cb191ca
 [main] DEBUG type.BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@75e91545
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@75e91545
 [main] DEBUG type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@726e5805
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@726e5805
 [main] DEBUG type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3fffff43
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3fffff43
 [main] DEBUG type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@662f5666
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@662f5666
 [main] DEBUG type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@502f1f4c
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@502f1f4c
 [main] DEBUG type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4fbda97b
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4fbda97b
 [main] DEBUG type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f73dcd6
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f73dcd6
 [main] DEBUG type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@40f1be1b
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@40f1be1b
 [main] DEBUG type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6b9ce1bf
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6b9ce1bf
 [main] DEBUG type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@609640d5
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@609640d5
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@609640d5
 [main] DEBUG type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@192d74fb
 [main] DEBUG type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@66ce957f
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@66ce957f
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@66ce957f
 [main] DEBUG type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@666b83a4
 [main] DEBUG type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2b95e48b
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2b95e48b
 [main] DEBUG type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@41925502
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@41925502
 [main] DEBUG type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@618c5d94
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@618c5d94
 [main] DEBUG type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3b956878
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3b956878
 [main] DEBUG type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2ece4966
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2ece4966
 [main] DEBUG type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3d484181
 [main] DEBUG type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@37bd68c3
 [main] DEBUG type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@37bd68c3
 [main] DEBUG type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@37bd68c3
 [main] DEBUG type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45cff11c
 [main] DEBUG type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45cff11c
 [main] DEBUG type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45cff11c
 [main] DEBUG type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@654d8173
 [main] DEBUG type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@14f5da2c
 [main] DEBUG type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1eb6749b
 [main] DEBUG type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1eb6749b
 [main] DEBUG type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1eb6749b
 [main] DEBUG type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@30f5a68a
 [main] DEBUG type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@30f5a68a
 [main] DEBUG type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@30f5a68a
 [main] DEBUG type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@24d4d7c9
 [main] DEBUG type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@a8c1f44
 [main] DEBUG type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1bb1fde8
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1bb1fde8
 [main] DEBUG type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@30990c1b
 [main] DEBUG type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@557a1e2d
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@557a1e2d
 [main] DEBUG type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4763c727
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4763c727
 [main] DEBUG type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1c80e49b
 [main] DEBUG type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1252b961
 [main] DEBUG type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@4d098f9b
 [main] DEBUG type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@65a4798f
 [main] DEBUG type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@65a4798f
 [main] DEBUG type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@426b6a74
 [main] DEBUG type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4c51bb7
 [main] DEBUG type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@83298d7
 [main] DEBUG type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@42a9e5d1
 [main] DEBUG type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5b080f3a
 [main] DEBUG type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@773cbf4f
 [main] DEBUG type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6b54655f
 [main] DEBUG type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@665e9289
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] DEBUG internal.JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.7.12-log
      major : 5
      minor : 7
 [main] DEBUG internal.JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.37 ( Revision: 09940f05b4c98150f352e787a2549f11a2e9da93 )
      major : 5
      minor : 1
 [main] DEBUG logging.DelegatingBasicLogger - JDBC version : 4.0
 [main] INFO  dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
 [main] DEBUG spi.IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
 [main] DEBUG spi.IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [null]
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.id.factory.spi.MutableIdentifierGeneratorFactory]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
 [main] DEBUG internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
 [main] DEBUG relational.Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
 [main] DEBUG cfg.AnnotationBinder - Binding entity from annotated class: ro.estore.model.entitiy.Address
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [DTYPE]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 [main] DEBUG annotations.EntityBinder - Import with entity name Address
 [main] TRACE internal.InFlightMetadataCollectorImpl - Import: Address -> ro.estore.model.entitiy.Address
 [main] TRACE internal.InFlightMetadataCollectorImpl - Import: ro.estore.model.entitiy.Address -> ro.estore.model.entitiy.Address
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address]
 [main] DEBUG annotations.EntityBinder - Bind entity ro.estore.model.entitiy.Address on table address
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Address.id
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_id]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=address_id, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Address:id]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for id
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_id]
 [main] DEBUG annotations.PropertyBinder - Building property id
 [main] TRACE annotations.PropertyBinder - Cascading id with null
 [main] TRACE cfg.AnnotationBinder - Bind @Id on id
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Address.addressLine1
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_line_1]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_line_1]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=address_line_1, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property addressLine1 with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Address:addressLine1]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for addressLine1
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_line_1]
 [main] DEBUG annotations.PropertyBinder - Building property addressLine1
 [main] TRACE annotations.PropertyBinder - Cascading addressLine1 with null
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Address.addressLine2
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_line_2]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_line_2]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=address_line_2, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property addressLine2 with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Address:addressLine2]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for addressLine2
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_line_2]
 [main] DEBUG annotations.PropertyBinder - Building property addressLine2
 [main] TRACE annotations.PropertyBinder - Cascading addressLine2 with null
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Address.addressName
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_name]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_name]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=address_name, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property addressName with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Address:addressName]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for addressName
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_name]
 [main] DEBUG annotations.PropertyBinder - Building property addressName
 [main] TRACE annotations.PropertyBinder - Cascading addressName with null
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Address.city
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [city]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [city]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=city, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property city with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Address:city]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for city
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [city]
 [main] DEBUG annotations.PropertyBinder - Building property city
 [main] TRACE annotations.PropertyBinder - Cascading city with null
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Address.postcode
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [postcode]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [postcode]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(address), mappingColumn=postcode, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property postcode with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Address:postcode]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for postcode
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [postcode]
 [main] DEBUG annotations.PropertyBinder - Building property postcode
 [main] TRACE annotations.PropertyBinder - Cascading postcode with null
 [main] DEBUG cfg.AnnotationBinder - Binding entity from annotated class: ro.estore.model.entitiy.Order
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [DTYPE]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 [main] DEBUG annotations.EntityBinder - Import with entity name Order
 [main] TRACE internal.InFlightMetadataCollectorImpl - Import: Order -> ro.estore.model.entitiy.Order
 [main] TRACE internal.InFlightMetadataCollectorImpl - Import: ro.estore.model.entitiy.Order -> ro.estore.model.entitiy.Order
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [`order`]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [`order`]
 [main] DEBUG annotations.EntityBinder - Bind entity ro.estore.model.entitiy.Order on table order
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Order.id
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [order_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [order_id]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(order), mappingColumn=order_id, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Order:id]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for id
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [order_id]
 [main] DEBUG annotations.PropertyBinder - Building property id
 [main] TRACE annotations.PropertyBinder - Cascading id with null
 [main] TRACE cfg.AnnotationBinder - Bind @Id on id
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Order.address
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_id]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='address_id', referencedColumn='', mappedBy=''}
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(order), mappingColumn=address, insertable=true, updatable=true, unique=false}
 [main] TRACE cfg.AnnotationBinder - Fetching address with JOIN
 [main] DEBUG annotations.PropertyBinder - Building property address
 [main] TRACE annotations.PropertyBinder - Cascading address with persist
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [order_id]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='order_id', referencedColumn='', mappedBy=''}
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [purchases]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [purchases]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(order), mappingColumn=purchases, insertable=true, updatable=true, unique=false}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(order), mappingColumn=null, insertable=true, updatable=true, unique=false}
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [element]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [element]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(order), mappingColumn=element, insertable=true, updatable=true, unique=false}
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [purchases_KEY]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(order), mappingColumn=purchases_KEY, insertable=true, updatable=true, unique=false}
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [purchases_KEY]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='purchases_KEY', referencedColumn='null', mappedBy='null'}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
 [main] DEBUG annotations.CollectionBinder - Collection role: ro.estore.model.entitiy.Order.purchases
 [main] DEBUG annotations.PropertyBinder - Building property purchases
 [main] TRACE annotations.PropertyBinder - Cascading purchases with all
 [main] DEBUG cfg.AnnotationBinder - Binding entity from annotated class: ro.estore.model.entitiy.Product
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [DTYPE]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 [main] DEBUG annotations.EntityBinder - Import with entity name Product
 [main] TRACE internal.InFlightMetadataCollectorImpl - Import: Product -> ro.estore.model.entitiy.Product
 [main] TRACE internal.InFlightMetadataCollectorImpl - Import: ro.estore.model.entitiy.Product -> ro.estore.model.entitiy.Product
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [product]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [product]
 [main] DEBUG annotations.EntityBinder - Bind entity ro.estore.model.entitiy.Product on table product
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Product.id
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [product_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [product_id]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=product_id, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Product:id]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for id
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [product_id]
 [main] DEBUG annotations.PropertyBinder - Building property id
 [main] TRACE annotations.PropertyBinder - Cascading id with null
 [main] TRACE cfg.AnnotationBinder - Bind @Id on id
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Product.brand
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [brand]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [brand]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=brand, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property brand with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Product:brand]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for brand
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [brand]
 [main] DEBUG annotations.PropertyBinder - Building property brand
 [main] TRACE annotations.PropertyBinder - Cascading brand with null
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Product.description
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [description]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [description]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=description, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property description with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Product:description]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for description
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [description]
 [main] DEBUG annotations.PropertyBinder - Building property description
 [main] TRACE annotations.PropertyBinder - Cascading description with null
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Product.name
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [name]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [name]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=name, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Product:name]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for name
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [name]
 [main] DEBUG annotations.PropertyBinder - Building property name
 [main] TRACE annotations.PropertyBinder - Cascading name with null
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Product.price
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [price]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [price]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=price, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property price with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Product:price]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for price
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [price]
 [main] DEBUG annotations.PropertyBinder - Building property price
 [main] TRACE annotations.PropertyBinder - Cascading price with null
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Product.stock
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [stock]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [stock]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(product), mappingColumn=stock, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property stock with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Product:stock]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for stock
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [stock]
 [main] DEBUG annotations.PropertyBinder - Building property stock
 [main] TRACE annotations.PropertyBinder - Cascading stock with null
 [main] DEBUG cfg.AnnotationBinder - Binding entity from annotated class: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [DTYPE]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 [main] DEBUG annotations.EntityBinder - Import with entity name Purchase
 [main] TRACE internal.InFlightMetadataCollectorImpl - Import: Purchase -> ro.estore.model.entitiy.Purchase
 [main] TRACE internal.InFlightMetadataCollectorImpl - Import: ro.estore.model.entitiy.Purchase -> ro.estore.model.entitiy.Purchase
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [purchase]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [purchase]
 [main] DEBUG annotations.EntityBinder - Bind entity ro.estore.model.entitiy.Purchase on table purchase
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Purchase.id
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [purchase_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [purchase_id]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(purchase), mappingColumn=purchase_id, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Purchase:id]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for id
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [purchase_id]
 [main] DEBUG annotations.PropertyBinder - Building property id
 [main] TRACE annotations.PropertyBinder - Cascading id with null
 [main] TRACE cfg.AnnotationBinder - Bind @Id on id
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Purchase.product
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [product_id]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='product_id', referencedColumn='', mappedBy=''}
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [product]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [product]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(purchase), mappingColumn=product, insertable=true, updatable=true, unique=false}
 [main] TRACE cfg.AnnotationBinder - Fetching product with JOIN
 [main] DEBUG annotations.PropertyBinder - Building property product
 [main] TRACE annotations.PropertyBinder - Cascading product with none
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.Purchase.quantity
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [quantity]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [quantity]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(purchase), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property quantity with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.Purchase:quantity]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for quantity
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [quantity]
 [main] DEBUG annotations.PropertyBinder - Building property quantity
 [main] TRACE annotations.PropertyBinder - Cascading quantity with null
 [main] DEBUG cfg.AnnotationBinder - Binding entity from annotated class: ro.estore.model.entitiy.User
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [DTYPE]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 [main] DEBUG annotations.EntityBinder - Import with entity name User
 [main] TRACE internal.InFlightMetadataCollectorImpl - Import: User -> ro.estore.model.entitiy.User
 [main] TRACE internal.InFlightMetadataCollectorImpl - Import: ro.estore.model.entitiy.User -> ro.estore.model.entitiy.User
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user]
 [main] DEBUG annotations.EntityBinder - Bind entity ro.estore.model.entitiy.User on table user
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.User.id
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_id]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.User:id]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for id
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_id]
 [main] DEBUG annotations.PropertyBinder - Building property id
 [main] TRACE annotations.PropertyBinder - Cascading id with null
 [main] TRACE cfg.AnnotationBinder - Bind @Id on id
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.User.orders
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_id]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [orders]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [orders]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=orders, insertable=true, updatable=true, unique=false}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [element]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [element]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [orders_KEY]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=orders_KEY, insertable=true, updatable=true, unique=false}
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [orders_KEY]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='orders_KEY', referencedColumn='null', mappedBy='null'}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
 [main] DEBUG annotations.CollectionBinder - Collection role: ro.estore.model.entitiy.User.orders
 [main] DEBUG annotations.PropertyBinder - Building property orders
 [main] TRACE annotations.PropertyBinder - Cascading orders with all
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.User.password
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [password]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [password]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property password with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.User:password]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for password
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [password]
 [main] DEBUG annotations.PropertyBinder - Building property password
 [main] TRACE annotations.PropertyBinder - Cascading password with null
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.User.userProfile
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_profile_id', referencedColumn='', mappedBy=''}
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [userProfile]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [userProfile]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=userProfile, insertable=true, updatable=true, unique=false}
 [main] TRACE cfg.AnnotationBinder - Fetching userProfile with JOIN
 [main] DEBUG annotations.PropertyBinder - Building property userProfile
 [main] TRACE annotations.PropertyBinder - Cascading userProfile with all
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.User.username
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [username]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [username]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property username with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.User:username]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for username
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [username]
 [main] DEBUG annotations.PropertyBinder - Building property username
 [main] TRACE annotations.PropertyBinder - Cascading username with null
 [main] DEBUG cfg.AnnotationBinder - Binding entity from annotated class: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [DTYPE]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 [main] DEBUG annotations.EntityBinder - Import with entity name UserProfile
 [main] TRACE internal.InFlightMetadataCollectorImpl - Import: UserProfile -> ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.InFlightMetadataCollectorImpl - Import: ro.estore.model.entitiy.UserProfile -> ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile]
 [main] DEBUG annotations.EntityBinder - Bind entity ro.estore.model.entitiy.UserProfile on table user_profile
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.UserProfile.id
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=user_profile_id, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.UserProfile:id]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for id
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] DEBUG annotations.PropertyBinder - Building property id
 [main] TRACE annotations.PropertyBinder - Cascading id with null
 [main] TRACE cfg.AnnotationBinder - Bind @Id on id
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_profile_id', referencedColumn='user_profile_id', mappedBy=''}
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [addresses]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [addresses]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=addresses, insertable=true, updatable=true, unique=false}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=null, insertable=true, updatable=true, unique=false}
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [element]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [element]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=element, insertable=true, updatable=true, unique=false}
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [addresses_KEY]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=addresses_KEY, insertable=true, updatable=true, unique=false}
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [addresses_KEY]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='addresses_KEY', referencedColumn='null', mappedBy='null'}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
 [main] DEBUG annotations.CollectionBinder - Collection role: ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG annotations.PropertyBinder - Building property addresses
 [main] TRACE annotations.PropertyBinder - Cascading addresses with all,delete,delete-orphan
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.UserProfile.emailAddress
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [email_address]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [email_address]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=email_address, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property emailAddress with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.UserProfile:emailAddress]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for emailAddress
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [email_address]
 [main] DEBUG annotations.PropertyBinder - Building property emailAddress
 [main] TRACE annotations.PropertyBinder - Cascading emailAddress with null
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.UserProfile.name
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [name]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [name]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=name, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.UserProfile:name]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for name
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [name]
 [main] DEBUG annotations.PropertyBinder - Building property name
 [main] TRACE annotations.PropertyBinder - Cascading name with null
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.UserProfile.phoneNumber
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [phone_number]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [phone_number]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=phone_number, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property phoneNumber with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.UserProfile:phoneNumber]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for phoneNumber
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [phone_number]
 [main] DEBUG annotations.PropertyBinder - Building property phoneNumber
 [main] TRACE annotations.PropertyBinder - Cascading phoneNumber with null
 [main] TRACE cfg.AnnotationBinder - Processing annotations of ro.estore.model.entitiy.UserProfile.surname
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [surname]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [surname]
 [main] DEBUG cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_profile), mappingColumn=surname, insertable=true, updatable=true, unique=false}
 [main] DEBUG annotations.PropertyBinder - MetadataSourceProcessor property surname with lazy=false
 [main] DEBUG cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ro.estore.model.entitiy.UserProfile:surname]
 [main] DEBUG annotations.SimpleValueBinder - building SimpleValue for surname
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [surname]
 [main] DEBUG annotations.PropertyBinder - Building property surname
 [main] TRACE annotations.PropertyBinder - Cascading surname with null
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for id
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for addressLine1
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for addressLine2
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for addressName
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for city
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for postcode
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for id
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for id
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for brand
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for description
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for name
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for price
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for stock
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for id
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for quantity
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for id
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for password
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for username
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for id
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for emailAddress
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for name
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for phoneNumber
 [main] DEBUG annotations.SimpleValueBinder - Starting fillSimpleValue for surname
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [null]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [product_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [null]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [product_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [product_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [null]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] DEBUG mapping.PrimaryKey - Forcing column [address_id] to be non-null as it is part of the primary key for table [address]
 [main] DEBUG mapping.PrimaryKey - Forcing column [order_id] to be non-null as it is part of the primary key for table [order]
 [main] DEBUG mapping.PrimaryKey - Forcing column [product_id] to be non-null as it is part of the primary key for table [product]
 [main] DEBUG mapping.PrimaryKey - Forcing column [purchase_id] to be non-null as it is part of the primary key for table [purchase]
 [main] DEBUG mapping.PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
 [main] DEBUG mapping.PrimaryKey - Forcing column [user_profile_id] to be non-null as it is part of the primary key for table [user_profile]
 [main] DEBUG cfg.CollectionSecondPass - Second pass for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG annotations.CollectionBinder - Binding a OneToMany: ro.estore.model.entitiy.UserProfile.addresses through a foreign key
 [main] DEBUG annotations.CollectionBinder - Mapping collection: ro.estore.model.entitiy.UserProfile.addresses -> address
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] DEBUG cfg.CollectionSecondPass - Mapped collection key: user_profile_id, one-to-many: ro.estore.model.entitiy.Address
 [main] DEBUG cfg.CollectionSecondPass - Second pass for collection: ro.estore.model.entitiy.User.orders
 [main] DEBUG annotations.CollectionBinder - Binding a OneToMany: ro.estore.model.entitiy.User.orders through a foreign key
 [main] DEBUG annotations.CollectionBinder - Mapping collection: ro.estore.model.entitiy.User.orders -> order
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [null]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_id]
 [main] DEBUG cfg.CollectionSecondPass - Mapped collection key: user_id, one-to-many: ro.estore.model.entitiy.Order
 [main] DEBUG cfg.CollectionSecondPass - Second pass for collection: ro.estore.model.entitiy.Order.purchases
 [main] DEBUG annotations.CollectionBinder - Binding a OneToMany: ro.estore.model.entitiy.Order.purchases through a foreign key
 [main] DEBUG annotations.CollectionBinder - Mapping collection: ro.estore.model.entitiy.Order.purchases -> purchase
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [order_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [null]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [order_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [order_id]
 [main] DEBUG cfg.CollectionSecondPass - Mapped collection key: order_id, one-to-many: ro.estore.model.entitiy.Purchase
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [FK5olu7homdr9et1xbi9fq1ye3f]
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.Address
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [FK145gxdq9etc0fv3a0vutmkbye]
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.User
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [FKcpl0mjoeqhxvgeeeq5piwpd3i]
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.Product
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [product_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [FK3s4jktret4nl7m8yhfc8mfrn5]
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.Order
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [order_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [FKcm2ln4qoekhle9clw1njoa3q1]
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [FKjjes1f6tjhqns02054ou51m00]
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.Address
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.User
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.Product
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.Order
 [main] DEBUG internal.InFlightMetadataCollectorImpl - Resolving reference to class: ro.estore.model.entitiy.UserProfile
 [main] TRACE loader.BatchFetchStyle - Interpreting BatchFetchStyle from setting : null
 [main] DEBUG internal.SessionFactoryImpl - Building session factory
 [main] DEBUG cfg.Settings - SessionFactory name : null
 [main] DEBUG cfg.Settings - Automatic flush during beforeCompletion(): enabled
 [main] DEBUG cfg.Settings - Automatic session close at end of transaction: disabled
 [main] DEBUG cfg.Settings - Statistics: disabled
 [main] DEBUG cfg.Settings - Deleted entity synthetic identifier rollback: disabled
 [main] DEBUG cfg.Settings - Default entity-mode: pojo
 [main] DEBUG cfg.Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
 [main] DEBUG cfg.Settings - Allow initialization of lazy state outside session : disabled
 [main] DEBUG cfg.Settings - Using BatchFetchStyle : LEGACY
 [main] DEBUG cfg.Settings - Default batch fetch size: -1
 [main] DEBUG cfg.Settings - Maximum outer join fetch depth: 2
 [main] DEBUG cfg.Settings - Default null ordering: NONE
 [main] DEBUG cfg.Settings - Order SQL updates by primary key: disabled
 [main] DEBUG cfg.Settings - Order SQL inserts for batching: disabled
 [main] DEBUG cfg.Settings - multi-tenancy strategy : NONE
 [main] DEBUG cfg.Settings - JTA Track by Thread: enabled
 [main] DEBUG cfg.Settings - Query language substitutions: {}
 [main] DEBUG cfg.Settings - JPA query language strict compliance: disabled
 [main] DEBUG cfg.Settings - Named query checking : enabled
 [main] DEBUG cfg.Settings - Second-level cache: enabled
 [main] DEBUG cfg.Settings - Second-level query cache: disabled
 [main] DEBUG cfg.Settings - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@18388a3c
 [main] DEBUG cfg.Settings - Second-level cache region prefix: null
 [main] DEBUG cfg.Settings - Optimize second-level cache for minimal puts: disabled
 [main] DEBUG cfg.Settings - Structured second-level cache entries: disabled
 [main] DEBUG cfg.Settings - Second-level cache direct-reference entries: disabled
 [main] DEBUG cfg.Settings - Automatic eviction of collection cache: disabled
 [main] DEBUG cfg.Settings - JDBC batch size: 15
 [main] DEBUG cfg.Settings - JDBC batch updates for versioned data: enabled
 [main] DEBUG cfg.Settings - Scrollable result sets: enabled
 [main] DEBUG cfg.Settings - Wrap result sets: disabled
 [main] DEBUG cfg.Settings - JDBC3 getGeneratedKeys(): enabled
 [main] DEBUG cfg.Settings - JDBC result set fetch size: null
 [main] DEBUG cfg.Settings - Connection release mode: ON_CLOSE
 [main] DEBUG cfg.Settings - Generate SQL with comments: disabled
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.event.service.spi.EventListenerRegistry]
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.spi.CacheImplementor]
 [main] TRACE type.TypeFactory$TypeScopeImpl - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@2e3a5237
 [main] DEBUG internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
 [main] DEBUG internal.SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1250, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=D:\other\projects\eStore\estore-parent\estore-model\target\test-classes;D:\other\projects\eStore\estore-parent\estore-model\target\classes;C:\Users\IonutBa\.m2\repository\org\springframework\spring-orm\4.3.1.RELEASE\spring-orm-4.3.1.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-beans\4.3.1.RELEASE\spring-beans-4.3.1.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-core\4.3.1.RELEASE\spring-core-4.3.1.RELEASE.jar;C:\Users\IonutBa\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-jdbc\4.3.1.RELEASE\spring-jdbc-4.3.1.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-tx\4.3.1.RELEASE\spring-tx-4.3.1.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\hibernate\hibernate-core\5.2.1.Final\hibernate-core-5.2.1.Final.jar;C:\Users\IonutBa\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\IonutBa\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\IonutBa\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\IonutBa\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\IonutBa\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\IonutBa\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\IonutBa\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\IonutBa\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\IonutBa\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\IonutBa\.m2\repository\javax\enterprise\cdi-api\1.1-PFD\cdi-api-1.1-PFD.jar;C:\Users\IonutBa\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\IonutBa\.m2\repository\org\jboss\spec\javax\interceptor\jboss-interceptors-api_1.1_spec\1.0.0.Beta1\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;C:\Users\IonutBa\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\IonutBa\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\IonutBa\.m2\repository\org\hibernate\hibernate-entitymanager\5.2.1.Final\hibernate-entitymanager-5.2.1.Final.jar;C:\Users\IonutBa\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\IonutBa\.m2\repository\mysql\mysql-connector-java\5.1.37\mysql-connector-java-5.1.37.jar;C:\Users\IonutBa\.m2\repository\org\apache\commons\commons-lang3\3.4\commons-lang3-3.4.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-context\4.3.1.RELEASE\spring-context-4.3.1.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-aop\4.3.1.RELEASE\spring-aop-4.3.1.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-expression\4.3.1.RELEASE\spring-expression-4.3.1.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-test\4.3.1.RELEASE\spring-test-4.3.1.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-aspects\4.3.1.RELEASE\spring-aspects-4.3.1.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\IonutBa\.m2\repository\org\slf4j\slf4j-log4j12\1.7.21\slf4j-log4j12-1.7.21.jar;C:\Users\IonutBa\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\IonutBa\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\IonutBa\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\IonutBa\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Athens, user.country.format=RO, os.name=Windows 8.1, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=D:\software\Java\jdk1.8.0_91\jre\bin, sun.java.command=D:\other\projects\eStore\estore-parent\estore-model\target\surefire\surefirebooter3773189484898083045.jar D:\other\projects\eStore\estore-parent\estore-model\target\surefire\surefire8322492204541193161tmp D:\other\projects\eStore\estore-parent\estore-model\target\surefire\surefire_06759748599949604756tmp, javax.persistence.sharedCache.mode=UNSPECIFIED, surefire.test.class.path=D:\other\projects\eStore\estore-parent\estore-model\target\test-classes;D:\other\projects\eStore\estore-parent\estore-model\target\classes;C:\Users\IonutBa\.m2\repository\org\springframework\spring-orm\4.3.1.RELEASE\spring-orm-4.3.1.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-beans\4.3.1.RELEASE\spring-beans-4.3.1.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-core\4.3.1.RELEASE\spring-core-4.3.1.RELEASE.jar;C:\Users\IonutBa\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-jdbc\4.3.1.RELEASE\spring-jdbc-4.3.1.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-tx\4.3.1.RELEASE\spring-tx-4.3.1.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\hibernate\hibernate-core\5.2.1.Final\hibernate-core-5.2.1.Final.jar;C:\Users\IonutBa\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\IonutBa\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\IonutBa\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\IonutBa\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\IonutBa\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\IonutBa\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\IonutBa\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\IonutBa\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\IonutBa\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\IonutBa\.m2\repository\javax\enterprise\cdi-api\1.1-PFD\cdi-api-1.1-PFD.jar;C:\Users\IonutBa\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\IonutBa\.m2\repository\org\jboss\spec\javax\interceptor\jboss-interceptors-api_1.1_spec\1.0.0.Beta1\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;C:\Users\IonutBa\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\IonutBa\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\IonutBa\.m2\repository\org\hibernate\hibernate-entitymanager\5.2.1.Final\hibernate-entitymanager-5.2.1.Final.jar;C:\Users\IonutBa\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\IonutBa\.m2\repository\mysql\mysql-connector-java\5.1.37\mysql-connector-java-5.1.37.jar;C:\Users\IonutBa\.m2\repository\org\apache\commons\commons-lang3\3.4\commons-lang3-3.4.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-context\4.3.1.RELEASE\spring-context-4.3.1.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-aop\4.3.1.RELEASE\spring-aop-4.3.1.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-expression\4.3.1.RELEASE\spring-expression-4.3.1.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-test\4.3.1.RELEASE\spring-test-4.3.1.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\springframework\spring-aspects\4.3.1.RELEASE\spring-aspects-4.3.1.RELEASE.jar;C:\Users\IonutBa\.m2\repository\org\aspectj\aspectjweaver\1.8.9\aspectjweaver-1.8.9.jar;C:\Users\IonutBa\.m2\repository\org\slf4j\slf4j-log4j12\1.7.21\slf4j-log4j12-1.7.21.jar;C:\Users\IonutBa\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\IonutBa\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\IonutBa\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\IonutBa\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;, sun.cpu.endian=little, user.home=C:\Users\IonutBa, user.language=en, java.specification.vendor=Oracle Corporation, java.home=D:\software\Java\jdk1.8.0_91\jre, basedir=D:\other\projects\eStore\estore-parent\estore-model, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, surefire.real.class.path=D:\other\projects\eStore\estore-parent\estore-model\target\surefire\surefirebooter3773189484898083045.jar, sun.boot.class.path=D:\software\Java\jdk1.8.0_91\jre\lib\resources.jar;D:\software\Java\jdk1.8.0_91\jre\lib\rt.jar;D:\software\Java\jdk1.8.0_91\jre\lib\sunrsasign.jar;D:\software\Java\jdk1.8.0_91\jre\lib\jsse.jar;D:\software\Java\jdk1.8.0_91\jre\lib\jce.jar;D:\software\Java\jdk1.8.0_91\jre\lib\charsets.jar;D:\software\Java\jdk1.8.0_91\jre\lib\jfr.jar;D:\software\Java\jdk1.8.0_91\jre\classes, hibernate.hbm2ddl.auto=validate, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_91-b14, user.name=IonutBa, path.separator=;, os.version=6.3, java.endorsed.dirs=D:\software\Java\jdk1.8.0_91\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=Cp1250, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, localRepository=C:\Users\IonutBa\.m2\repository, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\IonutBa\AppData\Local\Temp\, java.version=1.8.0_91, user.dir=D:\other\projects\eStore\estore-parent\estore-model, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, user.language.format=ro, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4917d36b, java.library.path=D:\software\Java\jdk1.8.0_91\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Skype\Phone\;D:\work\jdk1.7.0_51_x64\bin;D:\software\PuTTY\;D:\software\TortoiseSVN\bin;D:\languages\NodeJs\;D:\software\sonar-scanner-2.6.1\bin;D:\software\sonarqube-5.6\bin\D:\software\sonarqube-5.6\bin\windows-x86-64;D:\software\apache-maven-3.3.9\bin;D:\software\sonar-scanner-2.6.1\bin;D:\software\Java\jdk1.8.0_91\bin;C:\ProgramData\IonutBa\atom\bin;C:\Users\IonutBa\AppData\Roaming\npm;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.91-b14, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842, java.ext.dirs=D:\software\Java\jdk1.8.0_91\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
 [main] DEBUG spi.JaccIntegrator - Skipping JACC integration as it was not enabled
 [main] TRACE spi.CascadeStyles - Registering external cascade style [persist : STYLE_PERSIST_SKIPLAZY]
 [main] DEBUG spi.CascadeStyles - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
 [main] DEBUG internal.SessionFactoryImpl - Instantiated session factory
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.property.access.spi.PropertyAccessStrategyResolver]
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.Product] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.Product
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.Product] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.Product
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [brand], existing type = [org.hibernate.type.StringType@788fcafb], incoming type = [org.hibernate.type.StringType@788fcafb]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [description], existing type = [org.hibernate.type.StringType@788fcafb], incoming type = [org.hibernate.type.StringType@788fcafb]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@788fcafb], incoming type = [org.hibernate.type.StringType@788fcafb]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [price], existing type = [org.hibernate.type.DoubleType@58c34bb3], incoming type = [org.hibernate.type.DoubleType@58c34bb3]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [stock], existing type = [org.hibernate.type.IntegerType@29df4d43], incoming type = [org.hibernate.type.IntegerType@29df4d43]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@4a891c97], incoming type = [org.hibernate.type.LongType@4a891c97]
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.UserProfile] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.UserProfile] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.UserProfile
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [addresses], existing type = [org.hibernate.type.BagType(ro.estore.model.entitiy.UserProfile.addresses)], incoming type = [org.hibernate.type.BagType(ro.estore.model.entitiy.UserProfile.addresses)]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [emailAddress], existing type = [org.hibernate.type.StringType@788fcafb], incoming type = [org.hibernate.type.StringType@788fcafb]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@788fcafb], incoming type = [org.hibernate.type.StringType@788fcafb]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [phoneNumber], existing type = [org.hibernate.type.StringType@788fcafb], incoming type = [org.hibernate.type.StringType@788fcafb]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [surname], existing type = [org.hibernate.type.StringType@788fcafb], incoming type = [org.hibernate.type.StringType@788fcafb]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@4a891c97], incoming type = [org.hibernate.type.LongType@4a891c97]
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.Purchase] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.Purchase
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.Purchase] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.Purchase
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [product.id], existing type = [org.hibernate.type.LongType@4a891c97], incoming type = [org.hibernate.type.LongType@4a891c97]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [product], existing type = [org.hibernate.type.ManyToOneType(ro.estore.model.entitiy.Product)], incoming type = [org.hibernate.type.ManyToOneType(ro.estore.model.entitiy.Product)]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [product.id], existing type = [org.hibernate.type.LongType@4a891c97], incoming type = [org.hibernate.type.LongType@4a891c97]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [product.id], existing type = [org.hibernate.type.LongType@4a891c97], incoming type = [org.hibernate.type.LongType@4a891c97]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [quantity], existing type = [org.hibernate.type.IntegerType@29df4d43], incoming type = [org.hibernate.type.IntegerType@29df4d43]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [_purchases_order_idBackref], existing type = [org.hibernate.type.LongType@4a891c97], incoming type = [org.hibernate.type.LongType@4a891c97]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@4a891c97], incoming type = [org.hibernate.type.LongType@4a891c97]
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.Order] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.Order
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.Order] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.Order
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@4a891c97], incoming type = [org.hibernate.type.LongType@4a891c97]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [address], existing type = [org.hibernate.type.ManyToOneType(ro.estore.model.entitiy.Address)], incoming type = [org.hibernate.type.ManyToOneType(ro.estore.model.entitiy.Address)]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@4a891c97], incoming type = [org.hibernate.type.LongType@4a891c97]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [address.id], existing type = [org.hibernate.type.LongType@4a891c97], incoming type = [org.hibernate.type.LongType@4a891c97]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [purchases], existing type = [org.hibernate.type.BagType(ro.estore.model.entitiy.Order.purchases)], incoming type = [org.hibernate.type.BagType(ro.estore.model.entitiy.Order.purchases)]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [_orders_user_idBackref], existing type = [org.hibernate.type.LongType@4a891c97], incoming type = [org.hibernate.type.LongType@4a891c97]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@4a891c97], incoming type = [org.hibernate.type.LongType@4a891c97]
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.User] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.User
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.User] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.User
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [userProfile.id], existing type = [org.hibernate.type.LongType@4a891c97], incoming type = [org.hibernate.type.LongType@4a891c97]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [orders], existing type = [org.hibernate.type.BagType(ro.estore.model.entitiy.User.orders)], incoming type = [org.hibernate.type.BagType(ro.estore.model.entitiy.User.orders)]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [password], existing type = [org.hibernate.type.StringType@788fcafb], incoming type = [org.hibernate.type.StringType@788fcafb]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [userProfile], existing type = [org.hibernate.type.ManyToOneType(ro.estore.model.entitiy.UserProfile)], incoming type = [org.hibernate.type.ManyToOneType(ro.estore.model.entitiy.UserProfile)]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [userProfile.id], existing type = [org.hibernate.type.LongType@4a891c97], incoming type = [org.hibernate.type.LongType@4a891c97]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [userProfile.id], existing type = [org.hibernate.type.LongType@4a891c97], incoming type = [org.hibernate.type.LongType@4a891c97]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [username], existing type = [org.hibernate.type.StringType@788fcafb], incoming type = [org.hibernate.type.StringType@788fcafb]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@4a891c97], incoming type = [org.hibernate.type.LongType@4a891c97]
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.Address] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.Address
 [main] DEBUG internal.ClassLoaderAccessImpl - Not known whether passed class name [ro.estore.model.entitiy.Address] is safe
 [main] DEBUG internal.ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ro.estore.model.entitiy.Address
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [addressLine1], existing type = [org.hibernate.type.StringType@788fcafb], incoming type = [org.hibernate.type.StringType@788fcafb]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [addressLine2], existing type = [org.hibernate.type.StringType@788fcafb], incoming type = [org.hibernate.type.StringType@788fcafb]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [addressName], existing type = [org.hibernate.type.StringType@788fcafb], incoming type = [org.hibernate.type.StringType@788fcafb]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [city], existing type = [org.hibernate.type.StringType@788fcafb], incoming type = [org.hibernate.type.StringType@788fcafb]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [postcode], existing type = [org.hibernate.type.StringType@788fcafb], incoming type = [org.hibernate.type.StringType@788fcafb]
 [main] TRACE entity.AbstractPropertyMapping - Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@4a891c97], incoming type = [org.hibernate.type.LongType@4a891c97]
 [main] DEBUG collection.AbstractCollectionPersister - Static SQL for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG collection.AbstractCollectionPersister -  Row insert: update address set user_profile_id=? where address_id=?
 [main] DEBUG collection.AbstractCollectionPersister -  Row update: update address set  where address_id=?
 [main] DEBUG collection.AbstractCollectionPersister -  Row delete: update address set user_profile_id=null where user_profile_id=? and address_id=?
 [main] DEBUG collection.AbstractCollectionPersister -  One-shot delete: update address set user_profile_id=null where user_profile_id=?
 [main] DEBUG collection.AbstractCollectionPersister - Static SQL for collection: ro.estore.model.entitiy.User.orders
 [main] DEBUG collection.AbstractCollectionPersister -  Row insert: update `order` set user_id=? where order_id=?
 [main] DEBUG collection.AbstractCollectionPersister -  Row update: update `order` set  where order_id=?
 [main] DEBUG collection.AbstractCollectionPersister -  Row delete: update `order` set user_id=null where user_id=? and order_id=?
 [main] DEBUG collection.AbstractCollectionPersister -  One-shot delete: update `order` set user_id=null where user_id=?
 [main] DEBUG collection.AbstractCollectionPersister - Static SQL for collection: ro.estore.model.entitiy.Order.purchases
 [main] DEBUG collection.AbstractCollectionPersister -  Row insert: update purchase set order_id=? where purchase_id=?
 [main] DEBUG collection.AbstractCollectionPersister -  Row update: update purchase set  where purchase_id=?
 [main] DEBUG collection.AbstractCollectionPersister -  Row delete: update purchase set order_id=null where order_id=? and purchase_id=?
 [main] DEBUG collection.AbstractCollectionPersister -  One-shot delete: update purchase set order_id=null where order_id=?
 [main] DEBUG entity.AbstractEntityPersister - Static SQL for entity: ro.estore.model.entitiy.Product
 [main] DEBUG entity.AbstractEntityPersister -  Version select: select product_id from product where product_id =?
 [main] DEBUG entity.AbstractEntityPersister -  Snapshot select: select product_.product_id, product_.brand as brand2_2_, product_.description as descript3_2_, product_.name as name4_2_, product_.price as price5_2_, product_.stock as stock6_2_ from product product_ where product_.product_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Insert 0: insert into product (brand, description, name, price, stock, product_id) values (?, ?, ?, ?, ?, ?)
 [main] DEBUG logging.DelegatingBasicLogger -  Update 0: update product set brand=?, description=?, name=?, price=?, stock=? where product_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Delete 0: delete from product where product_id=?
 [main] DEBUG entity.AbstractEntityPersister -  Identity insert: insert into product (brand, description, name, price, stock) values (?, ?, ?, ?, ?)
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@336365bc]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7351a16e
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=product, columns={product_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7351a16e
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Product
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=brand, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=brand, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=description, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=price, type=double [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=price, type=double [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7351a16e
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Product
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [NONE]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cab1508]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6a84bc3f
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=product, columns={product_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6a84bc3f
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Product
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=brand, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=brand, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=description, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=price, type=double [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=price, type=double [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6a84bc3f
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Product
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [READ]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@258ee7de]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4930539b
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=product, columns={product_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4930539b
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Product
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=brand, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=brand, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=description, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=price, type=double [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=price, type=double [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4930539b
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Product
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [UPGRADE]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d171ce0]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@22bd2039
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=product, columns={product_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@22bd2039
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Product
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=brand, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=brand, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=description, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=price, type=double [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=price, type=double [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@22bd2039
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Product
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [UPGRADE_NOWAIT]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@705f83a7]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3bb8aabc
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=product, columns={product_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3bb8aabc
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Product
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=brand, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=brand, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=description, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=price, type=double [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=price, type=double [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3bb8aabc
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Product
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [UPGRADE_SKIPLOCKED]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e1d4137]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@256a1825
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=product, columns={product_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@256a1825
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Product
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=brand, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=brand, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=description, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=price, type=double [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=price, type=double [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@256a1825
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Product
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [FORCE]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29a4f594]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@57b75756
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=product, columns={product_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@57b75756
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Product
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=brand, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=brand, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=description, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=price, type=double [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=price, type=double [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@57b75756
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Product
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [PESSIMISTIC_READ]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=? lock in share mode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5327a06e]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2679311f
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=product, columns={product_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2679311f
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Product
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=brand, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=brand, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=description, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=price, type=double [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=price, type=double [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2679311f
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Product
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [PESSIMISTIC_WRITE]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@287f7811]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@451f87af
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=product, columns={product_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@451f87af
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Product
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=brand, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=brand, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=description, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=price, type=double [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=price, type=double [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@451f87af
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Product
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [PESSIMISTIC_FORCE_INCREMENT]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b556bb2]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@44cb460e
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=product, columns={product_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@44cb460e
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Product
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=brand, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=brand, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=description, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=price, type=double [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=price, type=double [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@44cb460e
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Product
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [OPTIMISTIC]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Product
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17271176]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2e3cdec2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=product, columns={product_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2e3cdec2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Product
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : brand
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=brand, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=brand, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : description
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=description, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : price
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=price, type=double [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=price, type=double [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : stock
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2e3cdec2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Product
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Product)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {product_1_2_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Product [OPTIMISTIC_FORCE_INCREMENT]: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_MERGE on entity ro.estore.model.entitiy.Product: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_REFRESH on entity ro.estore.model.entitiy.Product: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=?
 [main] DEBUG entity.AbstractEntityPersister - Static SQL for entity: ro.estore.model.entitiy.UserProfile
 [main] DEBUG entity.AbstractEntityPersister -  Version select: select user_profile_id from user_profile where user_profile_id =?
 [main] DEBUG entity.AbstractEntityPersister -  Snapshot select: select userprofil_.user_profile_id, userprofil_.email_address as email_ad2_5_, userprofil_.name as name3_5_, userprofil_.phone_number as phone_nu4_5_, userprofil_.surname as surname5_5_ from user_profile userprofil_ where userprofil_.user_profile_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Insert 0: insert into user_profile (email_address, name, phone_number, surname, user_profile_id) values (?, ?, ?, ?, ?)
 [main] DEBUG logging.DelegatingBasicLogger -  Update 0: update user_profile set email_address=?, name=?, phone_number=?, surname=? where user_profile_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Delete 0: delete from user_profile where user_profile_id=?
 [main] DEBUG entity.AbstractEntityPersister -  Identity insert: insert into user_profile (email_address, name, phone_number, surname) values (?, ?, ?, ?)
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5da7cee2]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@78830d9a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user_profile, columns={user_profile_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@78830d9a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f8b4bd0]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27d57a2c]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=emailAddress, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=emailAddress, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=phoneNumber, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=phoneNumber, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@78830d9a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.UserProfile.addresses, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.UserProfile.addresses)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.UserProfile.addresses.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [NONE]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58a4a74d]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@54aca26f
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user_profile, columns={user_profile_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@54aca26f
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@314ed053]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35088e87]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=emailAddress, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=emailAddress, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=phoneNumber, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=phoneNumber, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@54aca26f
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.UserProfile.addresses, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.UserProfile.addresses)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.UserProfile.addresses.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [READ]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@486bc9a4]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7965a51c
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user_profile, columns={user_profile_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7965a51c
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3eee3e2b]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f63e3c7]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=emailAddress, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=emailAddress, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=phoneNumber, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=phoneNumber, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7965a51c
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.UserProfile.addresses, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.UserProfile.addresses)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.UserProfile.addresses.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [UPGRADE]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59532566]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@dca2615
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user_profile, columns={user_profile_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@dca2615
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@421a4ee1]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1237e0be]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=emailAddress, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=emailAddress, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=phoneNumber, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=phoneNumber, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@dca2615
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.UserProfile.addresses, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.UserProfile.addresses)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.UserProfile.addresses.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [UPGRADE_NOWAIT]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@528f8f8b]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@ea9e141
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user_profile, columns={user_profile_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@ea9e141
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e54cb33]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33cbfa57]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=emailAddress, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=emailAddress, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=phoneNumber, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=phoneNumber, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@ea9e141
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.UserProfile.addresses, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.UserProfile.addresses)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.UserProfile.addresses.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [UPGRADE_SKIPLOCKED]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c748168]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6441c486
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user_profile, columns={user_profile_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6441c486
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@834831b]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@234a8f27]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=emailAddress, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=emailAddress, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=phoneNumber, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=phoneNumber, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6441c486
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.UserProfile.addresses, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.UserProfile.addresses)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.UserProfile.addresses.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [FORCE]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b4d25e7]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@31c2affc
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user_profile, columns={user_profile_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@31c2affc
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1dc2de84]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a0659ac]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=emailAddress, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=emailAddress, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=phoneNumber, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=phoneNumber, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@31c2affc
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.UserProfile.addresses, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.UserProfile.addresses)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.UserProfile.addresses.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [PESSIMISTIC_READ]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? lock in share mode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58d63b16]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7c4fc2bf
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user_profile, columns={user_profile_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7c4fc2bf
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7772054c]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f61f937]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=emailAddress, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=emailAddress, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=phoneNumber, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=phoneNumber, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7c4fc2bf
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.UserProfile.addresses, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.UserProfile.addresses)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.UserProfile.addresses.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [PESSIMISTIC_WRITE]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46866946]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@44de0113
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user_profile, columns={user_profile_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@44de0113
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@236134a1]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@369c9bb]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=emailAddress, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=emailAddress, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=phoneNumber, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=phoneNumber, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@44de0113
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.UserProfile.addresses, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.UserProfile.addresses)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.UserProfile.addresses.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [PESSIMISTIC_FORCE_INCREMENT]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76d05cc9]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@42b21d99
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user_profile, columns={user_profile_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@42b21d99
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68dcfd52]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25b5c5e3]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=emailAddress, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=emailAddress, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=phoneNumber, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=phoneNumber, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@42b21d99
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.UserProfile.addresses, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.UserProfile.addresses)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.UserProfile.addresses.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [OPTIMISTIC]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5177e388]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@37b72ea
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user_profile, columns={user_profile_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@37b72ea
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addresses
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@cc239ba]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d37f1c]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : emailAddress
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=emailAddress, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=emailAddress, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : phoneNumber
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=phoneNumber, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=phoneNumber, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : surname
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@37b72ea
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.UserProfile
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.UserProfile)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.UserProfile)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.UserProfile.addresses, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.UserProfile.addresses)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.UserProfile.addresses.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.UserProfile)
          - SQL table alias mapping - userprofil0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro1_5_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.UserProfile [OPTIMISTIC_FORCE_INCREMENT]: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_MERGE on entity ro.estore.model.entitiy.UserProfile: select userprofil0_.user_profile_id as user_pro1_5_1_, userprofil0_.email_address as email_ad2_5_1_, userprofil0_.name as name3_5_1_, userprofil0_.phone_number as phone_nu4_5_1_, userprofil0_.surname as surname5_5_1_, addresses1_.user_profile_id as user_pro7_0_3_, addresses1_.address_id as address_1_0_3_, addresses1_.address_id as address_1_0_0_, addresses1_.address_line_1 as address_2_0_0_, addresses1_.address_line_2 as address_3_0_0_, addresses1_.address_name as address_4_0_0_, addresses1_.city as city5_0_0_, addresses1_.postcode as postcode6_0_0_ from user_profile userprofil0_ left outer join address addresses1_ on userprofil0_.user_profile_id=addresses1_.user_profile_id where userprofil0_.user_profile_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_REFRESH on entity ro.estore.model.entitiy.UserProfile: select userprofil0_.user_profile_id as user_pro1_5_1_, userprofil0_.email_address as email_ad2_5_1_, userprofil0_.name as name3_5_1_, userprofil0_.phone_number as phone_nu4_5_1_, userprofil0_.surname as surname5_5_1_, addresses1_.user_profile_id as user_pro7_0_3_, addresses1_.address_id as address_1_0_3_, addresses1_.address_id as address_1_0_0_, addresses1_.address_line_1 as address_2_0_0_, addresses1_.address_line_2 as address_3_0_0_, addresses1_.address_name as address_4_0_0_, addresses1_.city as city5_0_0_, addresses1_.postcode as postcode6_0_0_ from user_profile userprofil0_ left outer join address addresses1_ on userprofil0_.user_profile_id=addresses1_.user_profile_id where userprofil0_.user_profile_id=?
 [main] DEBUG entity.AbstractEntityPersister - Static SQL for entity: ro.estore.model.entitiy.Purchase
 [main] DEBUG entity.AbstractEntityPersister -  Version select: select purchase_id from purchase where purchase_id =?
 [main] DEBUG entity.AbstractEntityPersister -  Snapshot select: select purchase_.purchase_id, purchase_.product_id as product_3_3_, purchase_.quantity as quantity2_3_ from purchase purchase_ where purchase_.purchase_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Insert 0: insert into purchase (product_id, quantity, order_id, purchase_id) values (?, ?, ?, ?)
 [main] DEBUG logging.DelegatingBasicLogger -  Update 0: update purchase set product_id=?, quantity=? where purchase_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Delete 0: delete from purchase where purchase_id=?
 [main] DEBUG entity.AbstractEntityPersister -  Identity insert: insert into purchase (product_id, quantity, order_id) values (?, ?, ?)
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66e8997c]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6f0cb5a1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=purchase, columns={purchase_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6f0cb5a1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Purchase
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b29d52b]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@21a66d45
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .... Registering AssociationKey : AssociationKey(table=purchase, columns={product_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@21a66d45
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting entity identifier : ro.estore.model.entitiy.Product
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.brand
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=brand, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=brand, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.description
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=description, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=description, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.price
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=price, type=double [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=price, type=double [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.stock
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@21a66d45
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=quantity, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=quantity, type=integer [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _purchases_order_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6f0cb5a1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}
          - JOIN (JoinDefinedByMetadata(product)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ro.estore.model.entitiy.Product)
                - SQL table alias mapping - product1_
                - alias suffix - 1_
                - suffixed key columns - {product_1_2_1_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [NONE]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f966492]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@63fdffcd
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=purchase, columns={purchase_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@63fdffcd
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Purchase
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7428de63]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@66f659e6
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .... Registering AssociationKey : AssociationKey(table=purchase, columns={product_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@66f659e6
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting entity identifier : ro.estore.model.entitiy.Product
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.brand
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=brand, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=brand, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.description
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=description, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=description, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.price
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=price, type=double [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=price, type=double [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.stock
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@66f659e6
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=quantity, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=quantity, type=integer [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _purchases_order_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@63fdffcd
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}
          - JOIN (JoinDefinedByMetadata(product)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ro.estore.model.entitiy.Product)
                - SQL table alias mapping - product1_
                - alias suffix - 1_
                - suffixed key columns - {product_1_2_1_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [READ]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a68135e]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@46678e49
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=purchase, columns={purchase_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@46678e49
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Purchase
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@748e9b20]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=quantity, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=quantity, type=integer [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _purchases_order_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@46678e49
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [UPGRADE]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_ from purchase purchase0_ where purchase0_.purchase_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2063c53e]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2a9bc08f
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=purchase, columns={purchase_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2a9bc08f
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Purchase
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50f40653]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=quantity, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=quantity, type=integer [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _purchases_order_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2a9bc08f
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [UPGRADE_NOWAIT]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_ from purchase purchase0_ where purchase0_.purchase_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50a3d0f6]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6e57b5e9
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=purchase, columns={purchase_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6e57b5e9
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Purchase
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1abc9f14]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=quantity, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=quantity, type=integer [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _purchases_order_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6e57b5e9
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [UPGRADE_SKIPLOCKED]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_ from purchase purchase0_ where purchase0_.purchase_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a0ac48e]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@24e08d59
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=purchase, columns={purchase_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@24e08d59
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Purchase
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77cb9cd1]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=quantity, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=quantity, type=integer [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _purchases_order_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@24e08d59
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [FORCE]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_ from purchase purchase0_ where purchase0_.purchase_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@971e903]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@35636217
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=purchase, columns={purchase_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@35636217
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Purchase
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1549bba7]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=quantity, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=quantity, type=integer [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _purchases_order_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@35636217
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [PESSIMISTIC_READ]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_ from purchase purchase0_ where purchase0_.purchase_id=? lock in share mode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e4f80cb]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@38704ff0
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=purchase, columns={purchase_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@38704ff0
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Purchase
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16ade133]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=quantity, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=quantity, type=integer [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _purchases_order_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@38704ff0
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [PESSIMISTIC_WRITE]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_ from purchase purchase0_ where purchase0_.purchase_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e61e4c2]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@c6a6c1d
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=purchase, columns={purchase_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@c6a6c1d
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Purchase
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36dfbdaf]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=quantity, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=quantity, type=integer [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _purchases_order_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@c6a6c1d
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [PESSIMISTIC_FORCE_INCREMENT]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_ from purchase purchase0_ where purchase0_.purchase_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f82663e]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@e04ccf8
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=purchase, columns={purchase_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@e04ccf8
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Purchase
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51d143a1]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=quantity, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=quantity, type=integer [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _purchases_order_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@e04ccf8
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [OPTIMISTIC]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_ from purchase purchase0_ where purchase0_.purchase_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a28aef1]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4647881c
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=purchase, columns={purchase_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4647881c
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Purchase
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e0cff20]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=quantity, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=quantity, type=integer [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _purchases_order_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4647881c
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Purchase
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Purchase)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Purchase)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Purchase.product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {purchase1_3_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Purchase [OPTIMISTIC_FORCE_INCREMENT]: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_ from purchase purchase0_ where purchase0_.purchase_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_MERGE on entity ro.estore.model.entitiy.Purchase: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_ from purchase purchase0_ where purchase0_.purchase_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_REFRESH on entity ro.estore.model.entitiy.Purchase: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_ from purchase purchase0_ where purchase0_.purchase_id=?
 [main] DEBUG entity.AbstractEntityPersister - Static SQL for entity: ro.estore.model.entitiy.Order
 [main] DEBUG entity.AbstractEntityPersister -  Version select: select order_id from `order` where order_id =?
 [main] DEBUG entity.AbstractEntityPersister -  Snapshot select: select order_.order_id, order_.address_id as address_2_1_ from `order` order_ where order_.order_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Insert 0: insert into `order` (address_id, user_id, order_id) values (?, ?, ?)
 [main] DEBUG logging.DelegatingBasicLogger -  Update 0: update `order` set address_id=? where order_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Delete 0: delete from `order` where order_id=?
 [main] DEBUG entity.AbstractEntityPersister -  Identity insert: insert into `order` (address_id, user_id) values (?, ?)
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@359b650b]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6a9b0a6f
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=`order`, columns={order_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6a9b0a6f
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Order
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10667848]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@191a709b
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .... Registering AssociationKey : AssociationKey(table=`order`, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@191a709b
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting entity identifier : ro.estore.model.entitiy.Address
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.addressLine1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=addressLine1, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=addressLine1, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.addressLine2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=addressLine2, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=addressLine2, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.addressName
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=addressName, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=addressName, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.city
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=city, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=city, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.postcode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@191a709b
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77c7ed8e]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@453d496b]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _orders_user_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6a9b0a6f
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Order
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.Order.purchases, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.purchases)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Order.purchases.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(address)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ro.estore.model.entitiy.Address)
                - SQL table alias mapping - address1_
                - alias suffix - 1_
                - suffixed key columns - {address_1_0_1_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [NONE]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66bacdbc]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2c6ee758
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=`order`, columns={order_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2c6ee758
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Order
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@640dc4c6]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@4b54af3d
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .... Registering AssociationKey : AssociationKey(table=`order`, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@4b54af3d
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting entity identifier : ro.estore.model.entitiy.Address
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.addressLine1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=addressLine1, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=addressLine1, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.addressLine2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=addressLine2, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=addressLine2, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.addressName
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=addressName, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=addressName, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.city
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=city, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=city, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.postcode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@4b54af3d
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7bb35cc6]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@203c20cf]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _orders_user_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2c6ee758
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Order
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.Order.purchases, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.purchases)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Order.purchases.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(address)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ro.estore.model.entitiy.Address)
                - SQL table alias mapping - address1_
                - alias suffix - 1_
                - suffixed key columns - {address_1_0_1_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [READ]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a1debfa]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@44de94c3
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=`order`, columns={order_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@44de94c3
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Order
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@256aa5f2]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6411d3c8]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2116b68b]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _orders_user_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@44de94c3
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Order
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.Order.purchases, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.purchases)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Order.purchases.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [UPGRADE]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_ from `order` order0_ where order0_.order_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11de56e6]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@616b241a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=`order`, columns={order_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@616b241a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Order
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b8e246c]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1f387978]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cb2651f]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _orders_user_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@616b241a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Order
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.Order.purchases, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.purchases)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Order.purchases.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [UPGRADE_NOWAIT]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_ from `order` order0_ where order0_.order_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4441d567]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3e1624c7
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=`order`, columns={order_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3e1624c7
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Order
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62b969c4]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@dcc6211]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47ec7422]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _orders_user_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3e1624c7
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Order
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.Order.purchases, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.purchases)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Order.purchases.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [UPGRADE_SKIPLOCKED]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_ from `order` order0_ where order0_.order_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48535004]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@610df783
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=`order`, columns={order_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@610df783
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Order
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f3fcd59]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b56f5f8]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79d743e6]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _orders_user_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@610df783
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Order
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.Order.purchases, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.purchases)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Order.purchases.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [FORCE]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_ from `order` order0_ where order0_.order_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@776802b0]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@64c4c01
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=`order`, columns={order_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@64c4c01
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Order
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1aa99005]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@592238c5]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ee8dcd3]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _orders_user_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@64c4c01
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Order
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.Order.purchases, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.purchases)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Order.purchases.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [PESSIMISTIC_READ]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_ from `order` order0_ where order0_.order_id=? lock in share mode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a20b94b]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5cdf39b2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=`order`, columns={order_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5cdf39b2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Order
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14f3c6fc]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cd59ef5]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33b082c5]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _orders_user_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5cdf39b2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Order
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.Order.purchases, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.purchases)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Order.purchases.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [PESSIMISTIC_WRITE]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_ from `order` order0_ where order0_.order_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16073fa8]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1cc9cfb2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=`order`, columns={order_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1cc9cfb2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Order
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cfbc8e8]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3bead518]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14bf57b2]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _orders_user_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1cc9cfb2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Order
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.Order.purchases, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.purchases)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Order.purchases.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [PESSIMISTIC_FORCE_INCREMENT]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_ from `order` order0_ where order0_.order_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46d9aec8]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@14379273
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=`order`, columns={order_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@14379273
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Order
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7918c7f8]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@17740dae]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c504e66]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _orders_user_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@14379273
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Order
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.Order.purchases, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.purchases)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Order.purchases.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [OPTIMISTIC]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_ from `order` order0_ where order0_.order_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Order
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@345cf395]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@bc4d5e1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=`order`, columns={order_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@bc4d5e1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Order
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c6aa04a]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2257fadf]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7144655b]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _orders_user_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@bc4d5e1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Order
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Order)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Order)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.Order.address)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.Order.purchases, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.Order.purchases)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.Order.purchases.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Order)
          - SQL table alias mapping - order0_
          - alias suffix - 0_
          - suffixed key columns - {order_id1_1_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Order [OPTIMISTIC_FORCE_INCREMENT]: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_ from `order` order0_ where order0_.order_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_MERGE on entity ro.estore.model.entitiy.Order: select order0_.order_id as order_id1_1_1_, order0_.address_id as address_2_1_1_, purchases1_.order_id as order_id4_3_3_, purchases1_.purchase_id as purchase1_3_3_, purchases1_.purchase_id as purchase1_3_0_, purchases1_.product_id as product_3_3_0_, purchases1_.quantity as quantity2_3_0_ from `order` order0_ left outer join purchase purchases1_ on order0_.order_id=purchases1_.order_id where order0_.order_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_REFRESH on entity ro.estore.model.entitiy.Order: select order0_.order_id as order_id1_1_1_, order0_.address_id as address_2_1_1_, purchases1_.order_id as order_id4_3_3_, purchases1_.purchase_id as purchase1_3_3_, purchases1_.purchase_id as purchase1_3_0_, purchases1_.product_id as product_3_3_0_, purchases1_.quantity as quantity2_3_0_ from `order` order0_ left outer join purchase purchases1_ on order0_.order_id=purchases1_.order_id where order0_.order_id=?
 [main] DEBUG entity.AbstractEntityPersister - Static SQL for entity: ro.estore.model.entitiy.User
 [main] DEBUG entity.AbstractEntityPersister -  Version select: select user_id from user where user_id =?
 [main] DEBUG entity.AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.password as password2_4_, user_.user_profile_id as user_pro4_4_, user_.username as username3_4_ from user user_ where user_.user_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Insert 0: insert into user (password, user_profile_id, username, user_id) values (?, ?, ?, ?)
 [main] DEBUG logging.DelegatingBasicLogger -  Update 0: update user set password=?, user_profile_id=?, username=? where user_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Delete 0: delete from user where user_id=?
 [main] DEBUG entity.AbstractEntityPersister -  Identity insert: insert into user (password, user_profile_id, username) values (?, ?, ?)
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.User
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c82cd4f]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@35835e65
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user, columns={user_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@35835e65
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.User
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@289fdb08]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a231dfd]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=password, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=password, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30814f43]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@1fde4f40
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .... Registering AssociationKey : AssociationKey(table=user, columns={user_profile_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@1fde4f40
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting entity identifier : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.addresses
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@49cf9028]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b61a019]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.emailAddress
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=emailAddress, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=emailAddress, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.phoneNumber
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=phoneNumber, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=phoneNumber, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.surname
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@1fde4f40
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@35835e65
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.User
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.User.orders, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.User.orders.<elements>)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.User.userProfile)
             - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.UserProfile.addresses, querySpaceUid=<gen:4>, path=ro.estore.model.entitiy.User.userProfile.addresses)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:5>, path=ro.estore.model.entitiy.User.userProfile.addresses.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}
          - JOIN (JoinDefinedByMetadata(userProfile)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=ro.estore.model.entitiy.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_5_1_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [NONE]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.User
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11a00961]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7ce9e05a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user, columns={user_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7ce9e05a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.User
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4992613f]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fd5717c]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=password, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=password, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e2f86e6]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@4d774249
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .... Registering AssociationKey : AssociationKey(table=user, columns={user_profile_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@4d774249
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting entity identifier : ro.estore.model.entitiy.UserProfile
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.addresses
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@17b64941]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53ac845a]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=addresses, type=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.emailAddress
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=emailAddress, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=emailAddress, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.phoneNumber
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=phoneNumber, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=phoneNumber, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile.surname
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=surname, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@4d774249
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7ce9e05a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.User
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.User.orders, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.User.orders.<elements>)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.User.userProfile)
             - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.UserProfile.addresses, querySpaceUid=<gen:4>, path=ro.estore.model.entitiy.User.userProfile.addresses)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:5>, path=ro.estore.model.entitiy.User.userProfile.addresses.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}
          - JOIN (JoinDefinedByMetadata(userProfile)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=ro.estore.model.entitiy.UserProfile)
                - SQL table alias mapping - userprofil1_
                - alias suffix - 1_
                - suffixed key columns - {user_pro1_5_1_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [READ]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.User
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5136207f]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@26a4551a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user, columns={user_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@26a4551a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.User
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3fdecce]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@344426bf]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=password, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=password, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5411dd90]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@26a4551a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.User
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.User.orders, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.User.orders.<elements>)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.User.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [UPGRADE]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_ from user user0_ where user0_.user_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.User
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50194e8d]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3cee53dc
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user, columns={user_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3cee53dc
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.User
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@290aeb20]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73ad4ecc]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=password, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=password, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69da0b12]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3cee53dc
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.User
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.User.orders, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.User.orders.<elements>)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.User.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [UPGRADE_NOWAIT]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_ from user user0_ where user0_.user_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.User
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2764c546]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@59496961
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user, columns={user_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@59496961
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.User
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@408b87aa]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79b08632]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=password, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=password, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@787f32b7]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@59496961
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.User
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.User.orders, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.User.orders.<elements>)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.User.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [UPGRADE_SKIPLOCKED]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_ from user user0_ where user0_.user_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.User
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6aef4eb8]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@76c52298
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user, columns={user_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@76c52298
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.User
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@bb9ab64]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a52ca2e]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=password, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=password, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ad8df52]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@76c52298
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.User
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.User.orders, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.User.orders.<elements>)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.User.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [FORCE]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_ from user user0_ where user0_.user_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.User
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45d6ef73]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3f29e26
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user, columns={user_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3f29e26
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.User
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1f6d27cc]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4393593c]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=password, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=password, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@314c8b4a]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3f29e26
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.User
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.User.orders, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.User.orders.<elements>)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.User.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [PESSIMISTIC_READ]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_ from user user0_ where user0_.user_id=? lock in share mode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.User
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26d820eb]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@507d20bb
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user, columns={user_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@507d20bb
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.User
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9fec931]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cbd159f]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=password, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=password, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b05a99b]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@507d20bb
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.User
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.User.orders, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.User.orders.<elements>)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.User.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [PESSIMISTIC_WRITE]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_ from user user0_ where user0_.user_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.User
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c43eb8]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7d0cc890
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user, columns={user_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7d0cc890
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.User
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@49293b43]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ff60a8c]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=password, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=password, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ce4de34]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7d0cc890
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.User
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.User.orders, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.User.orders.<elements>)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.User.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_ from user user0_ where user0_.user_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.User
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67b7c170]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@67440de6
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user, columns={user_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@67440de6
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.User
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@889d9e8]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5246a3b3]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=password, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=password, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ba354ca]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@67440de6
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.User
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.User.orders, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.User.orders.<elements>)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.User.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [OPTIMISTIC]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_ from user user0_ where user0_.user_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.User
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c4f4365]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@acf859d
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=user, columns={user_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@acf859d
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.User
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : orders
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6df3e44c]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ce7e83c]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=orders, type=java.util.Collection(ro.estore.model.entitiy.User.orders) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : password
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=password, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=password, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : userProfile
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a05d8ae]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=userProfile, type=ro.estore.model.entitiy.UserProfile [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : username
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=username, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@acf859d
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.User
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.User)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.User, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.User)
          - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.User.orders, querySpaceUid=<gen:1>, path=ro.estore.model.entitiy.User.orders)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:2>, path=ro.estore.model.entitiy.User.orders.<elements>)
          - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.UserProfile, querySpaceUid=<gen:3>, path=ro.estore.model.entitiy.User.userProfile)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_4_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_ from user user0_ where user0_.user_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_MERGE on entity ro.estore.model.entitiy.User: select user0_.user_id as user_id1_4_2_, user0_.password as password2_4_2_, user0_.user_profile_id as user_pro4_4_2_, user0_.username as username3_4_2_, orders1_.user_id as user_id3_1_4_, orders1_.order_id as order_id1_1_4_, orders1_.order_id as order_id1_1_0_, orders1_.address_id as address_2_1_0_, userprofil2_.user_profile_id as user_pro1_5_1_, userprofil2_.email_address as email_ad2_5_1_, userprofil2_.name as name3_5_1_, userprofil2_.phone_number as phone_nu4_5_1_, userprofil2_.surname as surname5_5_1_ from user user0_ left outer join `order` orders1_ on user0_.user_id=orders1_.user_id inner join user_profile userprofil2_ on user0_.user_profile_id=userprofil2_.user_profile_id where user0_.user_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_REFRESH on entity ro.estore.model.entitiy.User: select user0_.user_id as user_id1_4_2_, user0_.password as password2_4_2_, user0_.user_profile_id as user_pro4_4_2_, user0_.username as username3_4_2_, orders1_.user_id as user_id3_1_4_, orders1_.order_id as order_id1_1_4_, orders1_.order_id as order_id1_1_0_, orders1_.address_id as address_2_1_0_, userprofil2_.user_profile_id as user_pro1_5_1_, userprofil2_.email_address as email_ad2_5_1_, userprofil2_.name as name3_5_1_, userprofil2_.phone_number as phone_nu4_5_1_, userprofil2_.surname as surname5_5_1_ from user user0_ left outer join `order` orders1_ on user0_.user_id=orders1_.user_id inner join user_profile userprofil2_ on user0_.user_profile_id=userprofil2_.user_profile_id where user0_.user_id=?
 [main] DEBUG entity.AbstractEntityPersister - Static SQL for entity: ro.estore.model.entitiy.Address
 [main] DEBUG entity.AbstractEntityPersister -  Version select: select address_id from address where address_id =?
 [main] DEBUG entity.AbstractEntityPersister -  Snapshot select: select address_.address_id, address_.address_line_1 as address_2_0_, address_.address_line_2 as address_3_0_, address_.address_name as address_4_0_, address_.city as city5_0_, address_.postcode as postcode6_0_ from address address_ where address_.address_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Insert 0: insert into address (address_line_1, address_line_2, address_name, city, postcode, address_id) values (?, ?, ?, ?, ?, ?)
 [main] DEBUG logging.DelegatingBasicLogger -  Update 0: update address set address_line_1=?, address_line_2=?, address_name=?, city=?, postcode=? where address_id=?
 [main] DEBUG logging.DelegatingBasicLogger -  Delete 0: delete from address where address_id=?
 [main] DEBUG entity.AbstractEntityPersister -  Identity insert: insert into address (address_line_1, address_line_2, address_name, city, postcode) values (?, ?, ?, ?, ?)
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c904f1e]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4eb30d44
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=address, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4eb30d44
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Address
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine1, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine1, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine2, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine2, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressName, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressName, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=city, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4eb30d44
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Address
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [NONE]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d56aaa6]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6972c30a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=address, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6972c30a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Address
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine1, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine1, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine2, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine2, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressName, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressName, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=city, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6972c30a
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Address
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [READ]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57a48985]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1ab6718
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=address, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1ab6718
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Address
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine1, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine1, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine2, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine2, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressName, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressName, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=city, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1ab6718
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Address
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [UPGRADE]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3910fe11]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@460510aa
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=address, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@460510aa
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Address
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine1, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine1, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine2, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine2, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressName, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressName, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=city, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@460510aa
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Address
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [UPGRADE_NOWAIT]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@351e414e]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6fd77352
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=address, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6fd77352
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Address
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine1, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine1, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine2, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine2, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressName, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressName, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=city, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6fd77352
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Address
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [UPGRADE_SKIPLOCKED]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5109e8cf]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3f672204
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=address, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3f672204
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Address
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine1, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine1, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine2, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine2, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressName, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressName, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=city, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3f672204
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Address
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [FORCE]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78b41097]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2c2db130
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=address, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2c2db130
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Address
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine1, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine1, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine2, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine2, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressName, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressName, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=city, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2c2db130
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Address
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [PESSIMISTIC_READ]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=? lock in share mode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@327c7bea]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@348d18a3
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=address, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@348d18a3
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Address
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine1, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine1, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine2, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine2, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressName, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressName, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=city, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@348d18a3
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Address
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [PESSIMISTIC_WRITE]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c65860d]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2d000e80
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=address, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2d000e80
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Address
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine1, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine1, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine2, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine2, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressName, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressName, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=city, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2d000e80
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Address
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [PESSIMISTIC_FORCE_INCREMENT]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=? for update
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cf283e1]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@20e6c4dc
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=address, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@20e6c4dc
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Address
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine1, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine1, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine2, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine2, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressName, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressName, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=city, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@20e6c4dc
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Address
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [OPTIMISTIC]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root entity : ro.estore.model.entitiy.Address
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60737b23]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4d2a1da3
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .. Registering AssociationKey : AssociationKey(table=address, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4d2a1da3
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Address
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine1, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine1, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine2, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine2, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressName, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressName, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=city, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4d2a1da3
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root entity : ro.estore.model.entitiy.Address
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(entity=ro.estore.model.entitiy.Address)
    - Returns
       - EntityReturnImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:0>, path=ro.estore.model.entitiy.Address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ro.estore.model.entitiy.Address)
          - SQL table alias mapping - address0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_0_0_}

 [main] DEBUG plan.EntityLoader - Static select for entity ro.estore.model.entitiy.Address [OPTIMISTIC_FORCE_INCREMENT]: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_MERGE on entity ro.estore.model.entitiy.Address: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=?
 [main] DEBUG entity.CascadeEntityLoader - Static select for action ACTION_REFRESH on entity ro.estore.model.entitiy.Address: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root collection : ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@24361cfc]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34e20e6b]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@15ac59c2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Registering AssociationKey : AssociationKey(table=address, columns={user_profile_id}) -> null
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting collection element graph : ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@2f2d52ef
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Address
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine1, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine1, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressLine2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressLine2, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressLine2, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : addressName
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=addressName, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=addressName, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : city
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=city, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=city, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : postcode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@2f2d52ef
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished collection element graph : ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@15ac59c2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root collection : ro.estore.model.entitiy.UserProfile.addresses
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(collection=ro.estore.model.entitiy.UserProfile.addresses)
    - Returns
       - CollectionReturnImpl(collection=ro.estore.model.entitiy.UserProfile.addresses, querySpaceUid=<gen:0>, path=[ro.estore.model.entitiy.UserProfile.addresses])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:1>, path=[ro.estore.model.entitiy.UserProfile.addresses].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ro.estore.model.entitiy.UserProfile.addresses)
          - SQL table alias mapping - addresses0_
          - alias suffix - 0_
          - suffixed key columns - {user_pro7_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - address_1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ro.estore.model.entitiy.Address)
                - SQL table alias mapping - addresses0_
                - alias suffix - 1_
                - suffixed key columns - {address_1_0_1_}

 [main] DEBUG plan.CollectionLoader - Static select for collection ro.estore.model.entitiy.UserProfile.addresses: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root collection : ro.estore.model.entitiy.User.orders
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56d93692]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1686f0b4]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@76c548f
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Registering AssociationKey : AssociationKey(table=`order`, columns={user_id}) -> null
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting collection element graph : ro.estore.model.entitiy.User.orders
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@3900fa71
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Order
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26722665]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@7d0614f
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .... Registering AssociationKey : AssociationKey(table=`order`, columns={address_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@7d0614f
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting entity identifier : ro.estore.model.entitiy.Address
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.addressLine1
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=addressLine1, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=addressLine1, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.addressLine2
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=addressLine2, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=addressLine2, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.addressName
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=addressName, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=addressName, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.city
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=city, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=city, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : address.postcode
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=postcode, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@7d0614f
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=address, type=ro.estore.model.entitiy.Address [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : purchases
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@627d8516]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c10285a]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=purchases, type=java.util.Collection(ro.estore.model.entitiy.Order.purchases) [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _orders_user_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_orders_user_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@3900fa71
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished collection element graph : ro.estore.model.entitiy.User.orders
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@76c548f
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root collection : ro.estore.model.entitiy.User.orders
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(collection=ro.estore.model.entitiy.User.orders)
    - Returns
       - CollectionReturnImpl(collection=ro.estore.model.entitiy.User.orders, querySpaceUid=<gen:0>, path=[ro.estore.model.entitiy.User.orders])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Order, querySpaceUid=<gen:1>, path=[ro.estore.model.entitiy.User.orders].<elements>)
             - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Address, querySpaceUid=<gen:2>, path=[ro.estore.model.entitiy.User.orders].<elements>.address)
             - CollectionAttributeFetchImpl(collection=ro.estore.model.entitiy.Order.purchases, querySpaceUid=<gen:3>, path=[ro.estore.model.entitiy.User.orders].<elements>.purchases)
                - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:4>, path=[ro.estore.model.entitiy.User.orders].<elements>.purchases.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ro.estore.model.entitiy.User.orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - order_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ro.estore.model.entitiy.Order)
                - SQL table alias mapping - orders0_
                - alias suffix - 1_
                - suffixed key columns - {order_id1_1_1_}
                - JOIN (JoinDefinedByMetadata(address)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ro.estore.model.entitiy.Address)
                      - SQL table alias mapping - address1_
                      - alias suffix - 2_
                      - suffixed key columns - {address_1_0_2_}

 [main] DEBUG plan.CollectionLoader - Static select for collection ro.estore.model.entitiy.User.orders: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=?
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting root collection : ro.estore.model.entitiy.Order.purchases
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6b667cb3]
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f38a289]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@61e3cf4d
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Registering AssociationKey : AssociationKey(table=purchase, columns={order_id}) -> null
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Starting collection element graph : ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@3cec79d3
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting entity identifier : ro.estore.model.entitiy.Purchase
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64b70919]
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@4e31c3ec
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - .... Registering AssociationKey : AssociationKey(table=purchase, columns={product_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@4e31c3ec
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting entity identifier : ro.estore.model.entitiy.Product
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.brand
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=brand, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=brand, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.description
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=description, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=description, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.name
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=name, type=string [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.price
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=price, type=double [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=price, type=double [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : product.stock
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >>>> Starting attribute Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - <<<< Finishing up attribute : Attribute(name=stock, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@4e31c3ec
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=product, type=ro.estore.model.entitiy.Product [non-identifier,association])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : quantity
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=quantity, type=integer [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=quantity, type=integer [non-identifier])
 [main] DEBUG spi.MetamodelGraphWalker - Visiting attribute path : _purchases_order_idBackref
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - >> Starting attribute Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - << Finishing up attribute : Attribute(name=_purchases_order_idBackref, type=long [non-identifier])
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@3cec79d3
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished collection element graph : ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy - Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@61e3cf4d
 [main] TRACE internal.AbstractLoadPlanBuildingAssociationVisitationStrategy -  Finished root collection : ro.estore.model.entitiy.Order.purchases
 [main] DEBUG internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
 [main] DEBUG internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
 [main] DEBUG spi.LoadPlanTreePrinter - LoadPlan(collection=ro.estore.model.entitiy.Order.purchases)
    - Returns
       - CollectionReturnImpl(collection=ro.estore.model.entitiy.Order.purchases, querySpaceUid=<gen:0>, path=[ro.estore.model.entitiy.Order.purchases])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ro.estore.model.entitiy.Purchase, querySpaceUid=<gen:1>, path=[ro.estore.model.entitiy.Order.purchases].<elements>)
             - EntityAttributeFetchImpl(entity=ro.estore.model.entitiy.Product, querySpaceUid=<gen:2>, path=[ro.estore.model.entitiy.Order.purchases].<elements>.product)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ro.estore.model.entitiy.Order.purchases)
          - SQL table alias mapping - purchases0_
          - alias suffix - 0_
          - suffixed key columns - {order_id4_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - purchase1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ro.estore.model.entitiy.Purchase)
                - SQL table alias mapping - purchases0_
                - alias suffix - 1_
                - suffixed key columns - {purchase1_3_1_}
                - JOIN (JoinDefinedByMetadata(product)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ro.estore.model.entitiy.Product)
                      - SQL table alias mapping - product1_
                      - alias suffix - 2_
                      - suffixed key columns - {product_1_2_2_}

 [main] DEBUG plan.CollectionLoader - Static select for collection ro.estore.model.entitiy.Order.purchases: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=?
 [main] TRACE internal.MetadataContext - Wrapping up metadata context...
 [main] TRACE internal.MetadataContext - Starting entity [ro.estore.model.entitiy.Product]
 [main] TRACE internal.AttributeFactory - Building identifier attribute [ro.estore.model.entitiy.Product.id]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [id]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.Long ro.estore.model.entitiy.Product.id]
 [main] TRACE internal.AttributeFactory -     Determined type [name=long, class=org.hibernate.type.LongType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.Product.brand]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [brand]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.String ro.estore.model.entitiy.Product.brand]
 [main] TRACE internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.StringType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.Product.description]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [description]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.String ro.estore.model.entitiy.Product.description]
 [main] TRACE internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.StringType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.Product.name]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [name]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.String ro.estore.model.entitiy.Product.name]
 [main] TRACE internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.StringType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.Product.price]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [price]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.Double ro.estore.model.entitiy.Product.price]
 [main] TRACE internal.AttributeFactory -     Determined type [name=double, class=org.hibernate.type.DoubleType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.Product.stock]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [stock]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.Integer ro.estore.model.entitiy.Product.stock]
 [main] TRACE internal.AttributeFactory -     Determined type [name=integer, class=org.hibernate.type.IntegerType]
 [main] TRACE internal.MetadataContext - Completed entity [ro.estore.model.entitiy.Product]
 [main] TRACE internal.MetadataContext - Starting entity [ro.estore.model.entitiy.UserProfile]
 [main] TRACE internal.AttributeFactory - Building identifier attribute [ro.estore.model.entitiy.UserProfile.id]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [id]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.Long ro.estore.model.entitiy.UserProfile.id]
 [main] TRACE internal.AttributeFactory -     Determined type [name=long, class=org.hibernate.type.LongType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.UserProfile.addresses]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [addresses]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.util.List ro.estore.model.entitiy.UserProfile.addresses]
 [main] TRACE internal.AttributeFactory -     Determined type [name=java.util.Collection(ro.estore.model.entitiy.UserProfile.addresses), class=org.hibernate.type.BagType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.UserProfile.emailAddress]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [emailAddress]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.String ro.estore.model.entitiy.UserProfile.emailAddress]
 [main] TRACE internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.StringType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.UserProfile.name]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [name]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.String ro.estore.model.entitiy.UserProfile.name]
 [main] TRACE internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.StringType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.UserProfile.phoneNumber]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [phoneNumber]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.String ro.estore.model.entitiy.UserProfile.phoneNumber]
 [main] TRACE internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.StringType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.UserProfile.surname]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [surname]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.String ro.estore.model.entitiy.UserProfile.surname]
 [main] TRACE internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.StringType]
 [main] TRACE internal.MetadataContext - Completed entity [ro.estore.model.entitiy.UserProfile]
 [main] TRACE internal.MetadataContext - Starting entity [ro.estore.model.entitiy.Purchase]
 [main] TRACE internal.AttributeFactory - Building identifier attribute [ro.estore.model.entitiy.Purchase.id]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [id]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.Long ro.estore.model.entitiy.Purchase.id]
 [main] TRACE internal.AttributeFactory -     Determined type [name=long, class=org.hibernate.type.LongType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.Purchase.product]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [product]
 [main] TRACE internal.AttributeFactory -     Determined member [private ro.estore.model.entitiy.Product ro.estore.model.entitiy.Purchase.product]
 [main] TRACE internal.AttributeFactory -     Determined type [name=ro.estore.model.entitiy.Product, class=org.hibernate.type.ManyToOneType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.Purchase.quantity]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [quantity]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.Integer ro.estore.model.entitiy.Purchase.quantity]
 [main] TRACE internal.AttributeFactory -     Determined type [name=integer, class=org.hibernate.type.IntegerType]
 [main] TRACE internal.AttributeFactory - Skipping synthetic property ro.estore.model.entitiy.Purchase(_purchases_order_idBackref)
 [main] TRACE internal.MetadataContext - Completed entity [ro.estore.model.entitiy.Purchase]
 [main] TRACE internal.MetadataContext - Starting entity [ro.estore.model.entitiy.Order]
 [main] TRACE internal.AttributeFactory - Building identifier attribute [ro.estore.model.entitiy.Order.id]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [id]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.Long ro.estore.model.entitiy.Order.id]
 [main] TRACE internal.AttributeFactory -     Determined type [name=long, class=org.hibernate.type.LongType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.Order.address]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [address]
 [main] TRACE internal.AttributeFactory -     Determined member [private ro.estore.model.entitiy.Address ro.estore.model.entitiy.Order.address]
 [main] TRACE internal.AttributeFactory -     Determined type [name=ro.estore.model.entitiy.Address, class=org.hibernate.type.ManyToOneType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.Order.purchases]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [purchases]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.util.List ro.estore.model.entitiy.Order.purchases]
 [main] TRACE internal.AttributeFactory -     Determined type [name=java.util.Collection(ro.estore.model.entitiy.Order.purchases), class=org.hibernate.type.BagType]
 [main] TRACE internal.AttributeFactory - Skipping synthetic property ro.estore.model.entitiy.Order(_orders_user_idBackref)
 [main] TRACE internal.MetadataContext - Completed entity [ro.estore.model.entitiy.Order]
 [main] TRACE internal.MetadataContext - Starting entity [ro.estore.model.entitiy.User]
 [main] TRACE internal.AttributeFactory - Building identifier attribute [ro.estore.model.entitiy.User.id]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [id]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.Long ro.estore.model.entitiy.User.id]
 [main] TRACE internal.AttributeFactory -     Determined type [name=long, class=org.hibernate.type.LongType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.User.orders]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [orders]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.util.List ro.estore.model.entitiy.User.orders]
 [main] TRACE internal.AttributeFactory -     Determined type [name=java.util.Collection(ro.estore.model.entitiy.User.orders), class=org.hibernate.type.BagType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.User.password]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [password]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.String ro.estore.model.entitiy.User.password]
 [main] TRACE internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.StringType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.User.userProfile]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [userProfile]
 [main] TRACE internal.AttributeFactory -     Determined member [private ro.estore.model.entitiy.UserProfile ro.estore.model.entitiy.User.userProfile]
 [main] TRACE internal.AttributeFactory -     Determined type [name=ro.estore.model.entitiy.UserProfile, class=org.hibernate.type.ManyToOneType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.User.username]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [username]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.String ro.estore.model.entitiy.User.username]
 [main] TRACE internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.StringType]
 [main] TRACE internal.MetadataContext - Completed entity [ro.estore.model.entitiy.User]
 [main] TRACE internal.MetadataContext - Starting entity [ro.estore.model.entitiy.Address]
 [main] TRACE internal.AttributeFactory - Building identifier attribute [ro.estore.model.entitiy.Address.id]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [id]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.Long ro.estore.model.entitiy.Address.id]
 [main] TRACE internal.AttributeFactory -     Determined type [name=long, class=org.hibernate.type.LongType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.Address.addressLine1]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [addressLine1]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.String ro.estore.model.entitiy.Address.addressLine1]
 [main] TRACE internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.StringType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.Address.addressLine2]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [addressLine2]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.String ro.estore.model.entitiy.Address.addressLine2]
 [main] TRACE internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.StringType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.Address.addressName]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [addressName]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.String ro.estore.model.entitiy.Address.addressName]
 [main] TRACE internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.StringType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.Address.city]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [city]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.String ro.estore.model.entitiy.Address.city]
 [main] TRACE internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.StringType]
 [main] TRACE internal.AttributeFactory - Building attribute [ro.estore.model.entitiy.Address.postcode]
 [main] TRACE internal.AttributeFactory - Starting attribute metadata determination [postcode]
 [main] TRACE internal.AttributeFactory -     Determined member [private java.lang.String ro.estore.model.entitiy.Address.postcode]
 [main] TRACE internal.AttributeFactory -     Determined type [name=string, class=org.hibernate.type.StringType]
 [main] TRACE internal.MetadataContext - Completed entity [ro.estore.model.entitiy.Address]
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.tool.schema.spi.SchemaManagementTool]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [address]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [address] in lower case for use in DatabaseMetaData
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [null]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [address]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [address] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [address_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [address_id] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [address]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [address] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [address_line_1]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [address_line_1] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_line_1]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [address]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [address] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [address_line_2]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [address_line_2] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_line_2]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [address]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [address] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [address_name]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [address_name] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_name]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [address]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [address] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [city]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [city] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [city]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [address]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [address] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [postcode]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [postcode] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [postcode]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [address]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [address] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user_profile_id] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [`order`]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering quoted identifier [`order`] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [`order`]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [null]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [`order`]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering quoted identifier [`order`] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [order_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [order_id] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [order_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [`order`]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering quoted identifier [`order`] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [address_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [address_id] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [address_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [`order`]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering quoted identifier [`order`] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user_id] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [product]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [product] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [product]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [null]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [product]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [product] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [product_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [product_id] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [product_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [product]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [product] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [brand]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [brand] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [brand]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [product]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [product] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [description]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [description] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [description]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [product]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [product] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [name]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [name] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [name]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [product]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [product] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [price]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [price] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [price]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [product]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [product] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [stock]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [stock] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [stock]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [purchase]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [purchase] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [purchase]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [null]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [purchase]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [purchase] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [purchase_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [purchase_id] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [purchase_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [purchase]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [purchase] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [quantity]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [quantity] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [quantity]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [purchase]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [purchase] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [product_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [product_id] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [product_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [purchase]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [purchase] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [order_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [order_id] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [order_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [null]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user_id] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [password]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [password] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [password]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [username]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [username] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [username]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user_profile_id] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user_profile]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user_profile] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [null]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user_profile]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user_profile] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user_profile_id] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [user_profile_id]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user_profile]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user_profile] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [email_address]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [email_address] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [email_address]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user_profile]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user_profile] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [name]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [name] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [name]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user_profile]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user_profile] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [phone_number]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [phone_number] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [phone_number]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [estore_test]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [estore_test] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [user_profile]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [user_profile] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting for object name [surname]
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Rendering unquoted identifier [surname] in lower case for use in DatabaseMetaData
 [main] TRACE internal.NormalizingIdentifierHelperImpl - Normalizing identifier quoting [surname]
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform]
 [main] DEBUG internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformResolver]
 [main] DEBUG internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
 [main] DEBUG internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
 [main] DEBUG spi.NamedQueryRepository - Checking 0 named HQL queries
 [main] DEBUG spi.NamedQueryRepository - Checking 0 named SQL queries
 [main] DEBUG internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@363a3d15
 [main] DEBUG internal.SessionFactoryRegistry - Registering SessionFactory: 65ec62ac-c29d-4b22-ac3f-3880180864f2 (<unnamed>)
 [main] DEBUG internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
 [main] INFO  jpa.AbstractEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'entityManagerFactory'
 [main] DEBUG support.DefaultListableBeanFactory - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@146044d7: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,jpaHibernateTestConfig,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor,addressConverter,orderConverter,productConverter,purchaseConverter,userConverter,userProfileConverter,addressRepositoryJpaImpl,orderRepositoryJpaImpl,productRepositoryJpaImpl,purchaseRepositoryJpaImpl,userProfileRepositoryJpaImpl,userRepositoryJpaImpl,addressServiceImpl,orderServiceImpl,productServiceImpl,purchaseServiceImpl,userProfileServiceImpl,userServiceImpl,loggingAspect,testUtils,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,org.springframework.transaction.config.internalTransactionalEventListenerFactory,ro.estore.model.config.RootJpaHibernateConfig,transactionManager,entityManagerFactory,dataSource,org.springframework.aop.config.internalAutoProxyCreator]; root of factory hierarchy
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.context.event.internalEventListenerProcessor' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.context.event.EventListenerMethodProcessor]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.context.event.EventListenerMethodProcessor]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'applicationContext' of type [org.springframework.context.ApplicationContext]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.context.event.internalEventListenerFactory' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.context.event.DefaultEventListenerFactory]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.context.event.DefaultEventListenerFactory]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'order' of type [int]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'jpaHibernateTestConfig'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'jpaHibernateTestConfig'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'jpaHibernateTestConfig' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.model.config.JpaHibernateTestConfig$$EnhancerBySpringCGLIB$$c7431311]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.model.config.JpaHibernateTestConfig$$EnhancerBySpringCGLIB$$c7431311]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'beanFactory' of type [org.springframework.beans.factory.BeanFactory]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'jpaHibernateTestConfig' with 0 common interceptors and 3 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.config.JpaHibernateTestConfig$$EnhancerBySpringCGLIB$$c7431311@1a891add]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public abstract void org.springframework.beans.factory.BeanFactoryAware.setBeanFactory(org.springframework.beans.factory.BeanFactory) throws org.springframework.beans.BeansException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'jpaHibernateTestConfig'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'addressConverter'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'addressConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'addressConverter' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.converter.AddressConverter]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.converter.AddressConverter]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'addressConverter' with 0 common interceptors and 3 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.converter.AddressConverter@387bf2d9]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.domain.converter.AddressConverter.toDto(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.AddressDTO ro.estore.domain.converter.AddressConverter.toDto(ro.estore.model.entitiy.Address)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.domain.converter.AddressConverter.toEntity(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Address ro.estore.domain.converter.AddressConverter.toEntity(ro.estore.domain.object.AddressDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'addressConverter'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'orderConverter'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'orderConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.converter.OrderConverter]: AutowiredFieldElement for private ro.estore.domain.converter.AddressConverter ro.estore.domain.converter.OrderConverter.addressConverter
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.converter.OrderConverter]: AutowiredFieldElement for private ro.estore.domain.converter.PurchaseConverter ro.estore.domain.converter.OrderConverter.purchaseConverter
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'orderConverter' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.converter.OrderConverter]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.converter.OrderConverter]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'orderConverter': AutowiredFieldElement for private ro.estore.domain.converter.AddressConverter ro.estore.domain.converter.OrderConverter.addressConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'orderConverter' to bean named 'addressConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'orderConverter': AutowiredFieldElement for private ro.estore.domain.converter.PurchaseConverter ro.estore.domain.converter.OrderConverter.purchaseConverter
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'purchaseConverter'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'purchaseConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.converter.PurchaseConverter]: AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.converter.PurchaseConverter.productConverter
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'purchaseConverter' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.converter.PurchaseConverter]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.converter.PurchaseConverter]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'purchaseConverter': AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.converter.PurchaseConverter.productConverter
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'productConverter'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'productConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'productConverter' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.converter.ProductConverter]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.converter.ProductConverter]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'productConverter' with 0 common interceptors and 3 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.converter.ProductConverter@2a32fb6]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.domain.converter.ProductConverter.toDto(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.ProductDTO ro.estore.domain.converter.ProductConverter.toDto(ro.estore.model.entitiy.Product)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.domain.converter.ProductConverter.toEntity(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Product ro.estore.domain.converter.ProductConverter.toEntity(ro.estore.domain.object.ProductDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'productConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'purchaseConverter' to bean named 'productConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'purchaseConverter' with 0 common interceptors and 3 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.converter.PurchaseConverter@11ebb1b6]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.domain.converter.PurchaseConverter.toDto(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(ro.estore.model.entitiy.Purchase)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.domain.converter.PurchaseConverter.toEntity(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(ro.estore.domain.object.PurchaseDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'purchaseConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'orderConverter' to bean named 'purchaseConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'orderConverter' with 0 common interceptors and 3 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.converter.OrderConverter@4aaae508]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.domain.converter.OrderConverter.toDto(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.OrderDTO ro.estore.domain.converter.OrderConverter.toDto(ro.estore.model.entitiy.Order)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.domain.converter.OrderConverter.toEntity(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Order ro.estore.domain.converter.OrderConverter.toEntity(ro.estore.domain.object.OrderDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'orderConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseConverter'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'userConverter'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'userConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.converter.UserConverter]: AutowiredFieldElement for private ro.estore.domain.converter.OrderConverter ro.estore.domain.converter.UserConverter.orderConverter
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.converter.UserConverter]: AutowiredFieldElement for private ro.estore.domain.converter.UserProfileConverter ro.estore.domain.converter.UserConverter.userProfileConverter
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'userConverter' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.converter.UserConverter]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.converter.UserConverter]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userConverter': AutowiredFieldElement for private ro.estore.domain.converter.OrderConverter ro.estore.domain.converter.UserConverter.orderConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'userConverter' to bean named 'orderConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userConverter': AutowiredFieldElement for private ro.estore.domain.converter.UserProfileConverter ro.estore.domain.converter.UserConverter.userProfileConverter
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'userProfileConverter'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'userProfileConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.converter.UserProfileConverter]: AutowiredFieldElement for private ro.estore.domain.converter.AddressConverter ro.estore.domain.converter.UserProfileConverter.addressConverter
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'userProfileConverter' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.converter.UserProfileConverter]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.converter.UserProfileConverter]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userProfileConverter': AutowiredFieldElement for private ro.estore.domain.converter.AddressConverter ro.estore.domain.converter.UserProfileConverter.addressConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'userProfileConverter' to bean named 'addressConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'userProfileConverter' with 0 common interceptors and 3 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.converter.UserProfileConverter@431f1eaf]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.domain.converter.UserProfileConverter.toDto(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(ro.estore.model.entitiy.UserProfile)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.domain.converter.UserProfileConverter.toEntity(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.UserProfile ro.estore.domain.converter.UserProfileConverter.toEntity(ro.estore.domain.object.UserProfileDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'userProfileConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'userConverter' to bean named 'userProfileConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'userConverter' with 0 common interceptors and 3 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.converter.UserConverter@58ec7116]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.domain.converter.UserConverter.toDto(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.UserDTO ro.estore.domain.converter.UserConverter.toDto(ro.estore.model.entitiy.User)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.domain.converter.UserConverter.toEntity(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.User ro.estore.domain.converter.UserConverter.toEntity(ro.estore.domain.object.UserDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'userConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileConverter'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'addressRepositoryJpaImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'addressRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.model.repository.impl.AddressRepositoryJpaImpl]: PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'addressRepositoryJpaImpl' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.model.repository.impl.AddressRepositoryJpaImpl]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.model.repository.impl.AddressRepositoryJpaImpl]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'addressRepositoryJpaImpl': PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'addressRepositoryJpaImpl' with 0 common interceptors and 3 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.AddressRepositoryJpaImpl@55e3d6c3]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Address ro.estore.model.repository.impl.AddressRepositoryJpaImpl.findById(ro.estore.model.entitiy.Address)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.AddressRepositoryJpaImpl.findById(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Integer ro.estore.model.repository.impl.GenericRepositoryJpaImpl.count()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(java.io.Serializable)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findAll()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'addressRepositoryJpaImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'orderRepositoryJpaImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'orderRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.model.repository.impl.OrderRepositoryJpaImpl]: PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'orderRepositoryJpaImpl' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.model.repository.impl.OrderRepositoryJpaImpl]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.model.repository.impl.OrderRepositoryJpaImpl]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'orderRepositoryJpaImpl': PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'orderRepositoryJpaImpl' with 0 common interceptors and 3 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.OrderRepositoryJpaImpl@38320e34]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Order ro.estore.model.repository.impl.OrderRepositoryJpaImpl.findById(ro.estore.model.entitiy.Order)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.OrderRepositoryJpaImpl.findById(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Integer ro.estore.model.repository.impl.GenericRepositoryJpaImpl.count()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(java.io.Serializable)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findAll()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'orderRepositoryJpaImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'productRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.model.repository.impl.ProductRepositoryJpaImpl]: PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'productRepositoryJpaImpl' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.model.repository.impl.ProductRepositoryJpaImpl]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.model.repository.impl.ProductRepositoryJpaImpl]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'productRepositoryJpaImpl': PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'productRepositoryJpaImpl' with 0 common interceptors and 3 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.ProductRepositoryJpaImpl@3cff0139]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.ProductRepositoryJpaImpl.findById(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Product ro.estore.model.repository.impl.ProductRepositoryJpaImpl.findById(ro.estore.model.entitiy.Product)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Product ro.estore.model.repository.impl.ProductRepositoryJpaImpl.findMatching(ro.estore.model.entitiy.Product)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.model.repository.impl.ProductRepositoryJpaImpl.findByFilter(ro.estore.domain.filter.SearchProductFilter)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Integer ro.estore.model.repository.impl.GenericRepositoryJpaImpl.count()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(java.io.Serializable)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findAll()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'productRepositoryJpaImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'purchaseRepositoryJpaImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'purchaseRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImpl]: PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'purchaseRepositoryJpaImpl' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImpl]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImpl]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'purchaseRepositoryJpaImpl': PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'purchaseRepositoryJpaImpl' with 0 common interceptors and 3 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.PurchaseRepositoryJpaImpl@3effd4f3]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Purchase ro.estore.model.repository.impl.PurchaseRepositoryJpaImpl.findById(ro.estore.model.entitiy.Purchase)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.PurchaseRepositoryJpaImpl.findById(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Integer ro.estore.model.repository.impl.GenericRepositoryJpaImpl.count()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(java.io.Serializable)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findAll()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'purchaseRepositoryJpaImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'userProfileRepositoryJpaImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'userProfileRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImpl]: PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'userProfileRepositoryJpaImpl' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImpl]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImpl]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userProfileRepositoryJpaImpl': PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'userProfileRepositoryJpaImpl' with 0 common interceptors and 3 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserProfileRepositoryJpaImpl@11d4dbd6]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.UserProfile ro.estore.model.repository.impl.UserProfileRepositoryJpaImpl.findById(ro.estore.model.entitiy.UserProfile)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.UserProfileRepositoryJpaImpl.findById(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Integer ro.estore.model.repository.impl.GenericRepositoryJpaImpl.count()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(java.io.Serializable)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findAll()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'userProfileRepositoryJpaImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'userRepositoryJpaImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'userRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.model.repository.impl.UserRepositoryJpaImpl]: PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'userRepositoryJpaImpl' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.model.repository.impl.UserRepositoryJpaImpl]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.model.repository.impl.UserRepositoryJpaImpl]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userRepositoryJpaImpl': PersistenceElement for protected javax.persistence.EntityManager ro.estore.model.repository.impl.GenericRepositoryJpaImpl.entityManager
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'userRepositoryJpaImpl' with 0 common interceptors and 3 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserRepositoryJpaImpl@390877d2]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsernameAndPassword(java.lang.String,java.lang.String)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findById(ro.estore.model.entitiy.User)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.UserRepositoryJpaImpl.findById(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsername(java.lang.String)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Integer ro.estore.model.repository.impl.GenericRepositoryJpaImpl.count()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(java.io.Serializable)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findAll()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'userRepositoryJpaImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'addressServiceImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'addressServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.AddressServiceImpl]: AutowiredFieldElement for private ro.estore.model.repository.AddressRepository ro.estore.domain.service.impl.AddressServiceImpl.addressRepository
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.AddressServiceImpl]: AutowiredFieldElement for private ro.estore.domain.converter.AddressConverter ro.estore.domain.service.impl.AddressServiceImpl.addressConverter
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'addressServiceImpl' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.service.impl.AddressServiceImpl]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.service.impl.AddressServiceImpl]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'addressServiceImpl': AutowiredFieldElement for private ro.estore.model.repository.AddressRepository ro.estore.domain.service.impl.AddressServiceImpl.addressRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'addressServiceImpl' to bean named 'addressRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'addressServiceImpl': AutowiredFieldElement for private ro.estore.domain.converter.AddressConverter ro.estore.domain.service.impl.AddressServiceImpl.addressConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'addressServiceImpl' to bean named 'addressConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'addressServiceImpl' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.AddressServiceImpl@7c9bdee9]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.GenericRepository ro.estore.domain.service.impl.AddressServiceImpl.getRepository()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.AddressRepository ro.estore.domain.service.impl.AddressServiceImpl.getRepository()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.GenericEntityConverter ro.estore.domain.service.impl.AddressServiceImpl.getEntityConverter()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.AddressConverter ro.estore.domain.service.impl.AddressServiceImpl.getEntityConverter()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.GenericServiceImpl.remove(ro.estore.domain.object.DomainDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Integer ro.estore.domain.service.impl.GenericServiceImpl.count()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImpl.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(ro.estore.domain.object.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.create(ro.estore.domain.object.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(java.io.Serializable)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.domain.service.impl.GenericServiceImpl.findAll()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'addressServiceImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'orderServiceImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'orderServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.OrderServiceImpl]: AutowiredFieldElement for private ro.estore.model.repository.OrderRepository ro.estore.domain.service.impl.OrderServiceImpl.orderRepository
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.OrderServiceImpl]: AutowiredFieldElement for private ro.estore.domain.converter.OrderConverter ro.estore.domain.service.impl.OrderServiceImpl.orderConverter
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'orderServiceImpl' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.service.impl.OrderServiceImpl]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.service.impl.OrderServiceImpl]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'orderServiceImpl': AutowiredFieldElement for private ro.estore.model.repository.OrderRepository ro.estore.domain.service.impl.OrderServiceImpl.orderRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'orderServiceImpl' to bean named 'orderRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'orderServiceImpl': AutowiredFieldElement for private ro.estore.domain.converter.OrderConverter ro.estore.domain.service.impl.OrderServiceImpl.orderConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'orderServiceImpl' to bean named 'orderConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'orderServiceImpl' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.OrderServiceImpl@221dad51]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.GenericRepository ro.estore.domain.service.impl.OrderServiceImpl.getRepository()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.OrderRepository ro.estore.domain.service.impl.OrderServiceImpl.getRepository()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.GenericEntityConverter ro.estore.domain.service.impl.OrderServiceImpl.getEntityConverter()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.OrderConverter ro.estore.domain.service.impl.OrderServiceImpl.getEntityConverter()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.GenericServiceImpl.remove(ro.estore.domain.object.DomainDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Integer ro.estore.domain.service.impl.GenericServiceImpl.count()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImpl.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(ro.estore.domain.object.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.create(ro.estore.domain.object.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(java.io.Serializable)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.domain.service.impl.GenericServiceImpl.findAll()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'orderServiceImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'productServiceImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'productServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.ProductServiceImpl]: AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.domain.service.impl.ProductServiceImpl.productRepository
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.ProductServiceImpl]: AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.service.impl.ProductServiceImpl.productConverter
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'productServiceImpl' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.service.impl.ProductServiceImpl]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.service.impl.ProductServiceImpl]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'productServiceImpl': AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.domain.service.impl.ProductServiceImpl.productRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'productServiceImpl' to bean named 'productRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'productServiceImpl': AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.service.impl.ProductServiceImpl.productConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'productServiceImpl' to bean named 'productConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'productServiceImpl' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.ProductServiceImpl@64693226]
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.ProductDTO ro.estore.domain.service.impl.ProductServiceImpl.create(ro.estore.domain.object.ProductDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.ProductServiceImpl.create(ro.estore.domain.object.DomainDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.domain.service.impl.ProductServiceImpl.findByFilter(ro.estore.domain.filter.SearchProductFilter)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.GenericRepository ro.estore.domain.service.impl.ProductServiceImpl.getRepository()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.ProductRepository ro.estore.domain.service.impl.ProductServiceImpl.getRepository()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.ProductConverter ro.estore.domain.service.impl.ProductServiceImpl.getEntityConverter()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.GenericEntityConverter ro.estore.domain.service.impl.ProductServiceImpl.getEntityConverter()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.GenericServiceImpl.remove(ro.estore.domain.object.DomainDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Integer ro.estore.domain.service.impl.GenericServiceImpl.count()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImpl.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(ro.estore.domain.object.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(java.io.Serializable)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.domain.service.impl.GenericServiceImpl.findAll()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'productServiceImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'purchaseServiceImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'purchaseServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.PurchaseServiceImpl]: AutowiredFieldElement for private ro.estore.model.repository.PurchaseRepository ro.estore.domain.service.impl.PurchaseServiceImpl.purchaseRepository
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.PurchaseServiceImpl]: AutowiredFieldElement for private ro.estore.domain.converter.PurchaseConverter ro.estore.domain.service.impl.PurchaseServiceImpl.purchaseConverter
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'purchaseServiceImpl' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.service.impl.PurchaseServiceImpl]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.service.impl.PurchaseServiceImpl]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'purchaseServiceImpl': AutowiredFieldElement for private ro.estore.model.repository.PurchaseRepository ro.estore.domain.service.impl.PurchaseServiceImpl.purchaseRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'purchaseServiceImpl' to bean named 'purchaseRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'purchaseServiceImpl': AutowiredFieldElement for private ro.estore.domain.converter.PurchaseConverter ro.estore.domain.service.impl.PurchaseServiceImpl.purchaseConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'purchaseServiceImpl' to bean named 'purchaseConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'purchaseServiceImpl' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.PurchaseServiceImpl@470a659f]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.GenericRepository ro.estore.domain.service.impl.PurchaseServiceImpl.getRepository()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.PurchaseRepository ro.estore.domain.service.impl.PurchaseServiceImpl.getRepository()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.GenericEntityConverter ro.estore.domain.service.impl.PurchaseServiceImpl.getEntityConverter()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.PurchaseConverter ro.estore.domain.service.impl.PurchaseServiceImpl.getEntityConverter()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.GenericServiceImpl.remove(ro.estore.domain.object.DomainDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Integer ro.estore.domain.service.impl.GenericServiceImpl.count()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImpl.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(ro.estore.domain.object.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.create(ro.estore.domain.object.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(java.io.Serializable)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.domain.service.impl.GenericServiceImpl.findAll()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'purchaseServiceImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'userProfileServiceImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'userProfileServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.UserProfileServiceImpl]: AutowiredFieldElement for private ro.estore.model.repository.UserProfileRepository ro.estore.domain.service.impl.UserProfileServiceImpl.userProfileRepository
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.UserProfileServiceImpl]: AutowiredFieldElement for private ro.estore.domain.converter.UserProfileConverter ro.estore.domain.service.impl.UserProfileServiceImpl.userProfileConverter
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'userProfileServiceImpl' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.service.impl.UserProfileServiceImpl]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.service.impl.UserProfileServiceImpl]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userProfileServiceImpl': AutowiredFieldElement for private ro.estore.model.repository.UserProfileRepository ro.estore.domain.service.impl.UserProfileServiceImpl.userProfileRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'userProfileServiceImpl' to bean named 'userProfileRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userProfileServiceImpl': AutowiredFieldElement for private ro.estore.domain.converter.UserProfileConverter ro.estore.domain.service.impl.UserProfileServiceImpl.userProfileConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'userProfileServiceImpl' to bean named 'userProfileConverter'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'userProfileServiceImpl' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserProfileServiceImpl@7bebcd65]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.GenericRepository ro.estore.domain.service.impl.UserProfileServiceImpl.getRepository()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.UserProfileRepository ro.estore.domain.service.impl.UserProfileServiceImpl.getRepository()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.GenericEntityConverter ro.estore.domain.service.impl.UserProfileServiceImpl.getEntityConverter()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.UserProfileConverter ro.estore.domain.service.impl.UserProfileServiceImpl.getEntityConverter()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.GenericServiceImpl.remove(ro.estore.domain.object.DomainDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Integer ro.estore.domain.service.impl.GenericServiceImpl.count()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImpl.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(ro.estore.domain.object.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.create(ro.estore.domain.object.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(java.io.Serializable)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.domain.service.impl.GenericServiceImpl.findAll()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'userProfileServiceImpl'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'userServiceImpl'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'userServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.UserServiceImpl]: AutowiredFieldElement for private ro.estore.model.repository.UserRepository ro.estore.domain.service.impl.UserServiceImpl.userRepository
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.UserServiceImpl]: AutowiredFieldElement for private ro.estore.domain.converter.UserConverter ro.estore.domain.service.impl.UserServiceImpl.userConverter
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.UserServiceImpl]: AutowiredFieldElement for private ro.estore.domain.service.AddressService ro.estore.domain.service.impl.UserServiceImpl.addressService
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.domain.service.impl.UserServiceImpl]: AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.UserServiceImpl.productService
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'userServiceImpl' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.service.impl.UserServiceImpl]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.service.impl.UserServiceImpl]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userServiceImpl': AutowiredFieldElement for private ro.estore.model.repository.UserRepository ro.estore.domain.service.impl.UserServiceImpl.userRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'userServiceImpl' to bean named 'userRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userServiceImpl': AutowiredFieldElement for private ro.estore.domain.converter.UserConverter ro.estore.domain.service.impl.UserServiceImpl.userConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'userServiceImpl' to bean named 'userConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userServiceImpl': AutowiredFieldElement for private ro.estore.domain.service.AddressService ro.estore.domain.service.impl.UserServiceImpl.addressService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressServiceImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'userServiceImpl' to bean named 'addressServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'userServiceImpl': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.UserServiceImpl.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'userServiceImpl' to bean named 'productServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImpl.findByUsernameAndPassword' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'userServiceImpl' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserServiceImpl@4b1a43d8]
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImpl.findByUsernameAndPassword' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.UserDTO ro.estore.domain.service.impl.UserServiceImpl.findByUsernameAndPassword(java.lang.String,java.lang.String)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImpl.findByUsername' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.UserDTO ro.estore.domain.service.impl.UserServiceImpl.findByUsername(java.lang.String)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImpl.addOrder' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.OrderDTO ro.estore.domain.service.impl.UserServiceImpl.addOrder(java.lang.Long,ro.estore.domain.object.OrderDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.GenericRepository ro.estore.domain.service.impl.UserServiceImpl.getRepository()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.model.repository.UserRepository ro.estore.domain.service.impl.UserServiceImpl.getRepository()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.GenericEntityConverter ro.estore.domain.service.impl.UserServiceImpl.getEntityConverter()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected ro.estore.domain.converter.UserConverter ro.estore.domain.service.impl.UserServiceImpl.getEntityConverter()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImpl.remove' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.GenericServiceImpl.remove(ro.estore.domain.object.DomainDTO)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.Integer ro.estore.domain.service.impl.GenericServiceImpl.count()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImpl.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(ro.estore.domain.object.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImpl.create' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.create(ro.estore.domain.object.DomainDTO)
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImpl.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(java.io.Serializable)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.util.List ro.estore.domain.service.impl.GenericServiceImpl.findAll()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'userServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'loggingAspect'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG annotation.InitDestroyAnnotationBeanPostProcessor$1 - Found init method on class [ro.estore.util.TestUtils]: public void ro.estore.util.TestUtils.init()
 [main] DEBUG annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata - Registered init method on class [ro.estore.util.TestUtils]: org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement@316510
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.util.TestUtils]: AutowiredFieldElement for private ro.estore.domain.converter.UserConverter ro.estore.util.TestUtils.userConverter
 [main] DEBUG annotation.InjectionMetadata - Registered injected element on class [ro.estore.util.TestUtils]: AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.util.TestUtils.env
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'testUtils' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.util.TestUtils]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.util.TestUtils]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'testUtils': AutowiredFieldElement for private ro.estore.domain.converter.UserConverter ro.estore.util.TestUtils.userConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'testUtils' to bean named 'userConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'testUtils': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.util.TestUtils.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'testUtils' to bean named 'environment'
 [main] DEBUG annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata - Invoking init method on bean 'testUtils': public void ro.estore.util.TestUtils.init()
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.username' in [class path resource [test.properties]] with type [String] and value 'username'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.username' in [class path resource [test.properties]] with type [String] and value 'username'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.name' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.name' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.name' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.name' in [class path resource [test.properties]] with type [String] and value 'name'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.surname' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.surname' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.surname' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.surname' in [class path resource [test.properties]] with type [String] and value 'surname'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.phone_number' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.phone_number' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.phone_number' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.phone_number' in [class path resource [test.properties]] with type [String] and value '0123456789'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.email_address' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.email_address' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.email_address' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.email_address' in [class path resource [test.properties]] with type [String] and value 'ceva@email.com'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.email_address' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.email_address' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.email_address' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.email_address' in [class path resource [test.properties]] with type [String] and value 'ceva@email.com'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.city' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.city' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.city' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.city' in [class path resource [test.properties]] with type [String] and value 'city'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.postcode' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.postcode' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.postcode' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.postcode' in [class path resource [test.properties]] with type [String] and value 'postcode'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.addr_line_1' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.addr_line_1' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.addr_line_1' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.addr_line_1' in [class path resource [test.properties]] with type [String] and value 'addr line 1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.addr_line_2' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.addr_line_2' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.addr_line_2' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.addr_line_2' in [class path resource [test.properties]] with type [String] and value 'addr line 2'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.quantity' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.quantity' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.quantity' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.quantity' in [class path resource [test.properties]] with type [String] and value '23'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.product_name' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.product_name' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.product_name' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.product_name' in [class path resource [test.properties]] with type [String] and value 'prod name'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.description' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.description' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.description' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.description' in [class path resource [test.properties]] with type [String] and value 'desc'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.price' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.price' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.price' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.price' in [class path resource [test.properties]] with type [String] and value '21.542'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.stock' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.stock' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.stock' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.stock' in [class path resource [test.properties]] with type [String] and value '543'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.brand' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.brand' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.util.brand' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.util.brand' in [class path resource [test.properties]] with type [String] and value 'brand'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'testUtils' with 0 common interceptors and 3 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.util.TestUtils@b174a73]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.util.TestUtils.init()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Order ro.estore.util.TestUtils.createOrderWithoutUserAndAddress()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Purchase ro.estore.util.TestUtils.createPurchaseWithNoRelation()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Address ro.estore.util.TestUtils.createAddressWithNoRelation(java.lang.String)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.UserProfile ro.estore.util.TestUtils.createUserProfile(java.lang.String)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.User ro.estore.util.TestUtils.createUserWithNoRelation(java.lang.String)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.UserProfile ro.estore.util.TestUtils.createUserProfileWithNoRelation(java.lang.String)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Product ro.estore.util.TestUtils.createProduct(java.lang.String)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Address ro.estore.util.TestUtils.createAddress(java.lang.String)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.domain.object.UserDTO ro.estore.util.TestUtils.createUserDTO(java.lang.String)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Order ro.estore.util.TestUtils.createOrder(java.lang.String)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.User ro.estore.util.TestUtils.createUser(java.lang.String)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public ro.estore.model.entitiy.Purchase ro.estore.util.TestUtils.createPurchase(java.lang.String)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionAttributeSource'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionInterceptor'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.transaction.event.TransactionalEventListenerFactory]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.transaction.event.TransactionalEventListenerFactory]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'order' of type [int]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'ro.estore.model.config.RootJpaHibernateConfig'
 [main] DEBUG support.DefaultSingletonBeanRegistry - Creating shared instance of singleton bean 'transactionManager'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Creating instance of bean 'transactionManager'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'ro.estore.model.config.RootJpaHibernateConfig'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
 [main] DEBUG support.ConstructorResolver - Autowiring by type from bean name 'transactionManager' via factory method to bean named 'entityManagerFactory'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PlatformTransactionManager ro.estore.model.config.RootJpaHibernateConfig.transactionManager(EntityManagerFactory)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PlatformTransactionManager ro.estore.model.config.RootJpaHibernateConfig.transactionManager(EntityManagerFactory) took 13ms to execute.
	=====================================================================
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [org.springframework.orm.jpa.JpaTransactionManager]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [org.springframework.orm.jpa.JpaTransactionManager]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'beanFactory' of type [org.springframework.beans.factory.BeanFactory]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'dataSource' of type [javax.sql.DataSource]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'defaultTimeout' of type [int]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'entityManagerFactory' of type [javax.persistence.EntityManagerFactory]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'failEarlyOnGlobalRollbackOnly' of type [boolean]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'globalRollbackOnParticipationFailure' of type [boolean]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'jpaDialect' of type [org.springframework.orm.jpa.JpaDialect]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'jpaProperties' of type [java.util.Properties]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'jpaPropertyMap' of type [java.util.Map]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'nestedTransactionAllowed' of type [boolean]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'persistenceUnitName' of type [java.lang.String]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'resourceFactory' of type [java.lang.Object]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'rollbackOnCommitFailure' of type [boolean]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'transactionSynchronization' of type [int]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'transactionSynchronizationName' of type [java.lang.String]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'validateExistingTransaction' of type [boolean]
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Invoking afterPropertiesSet() on bean with name 'transactionManager'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractAutowireCapableBeanFactory - Finished creating instance of bean 'transactionManager'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'dataSource'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.context.annotation.ConfigurationClassPostProcessor
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.context.annotation.CommonAnnotationBeanPostProcessor
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.context.event.EventListenerMethodProcessor
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.context.event.DefaultEventListenerFactory
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.model.config.JpaHibernateTestConfig$$EnhancerBySpringCGLIB$$c7431311
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.context.annotation.ConfigurationClassPostProcessor$EnhancedConfigurationBeanPostProcessor
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.domain.converter.AddressConverter
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.domain.converter.OrderConverter
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.domain.converter.ProductConverter
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.domain.converter.PurchaseConverter
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.domain.converter.UserConverter
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.domain.converter.UserProfileConverter
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.model.repository.impl.AddressRepositoryJpaImpl
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.model.repository.impl.OrderRepositoryJpaImpl
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.model.repository.impl.ProductRepositoryJpaImpl
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.model.repository.impl.PurchaseRepositoryJpaImpl
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.model.repository.impl.UserProfileRepositoryJpaImpl
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.model.repository.impl.UserRepositoryJpaImpl
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.domain.service.impl.AddressServiceImpl
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.domain.service.impl.OrderServiceImpl
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.domain.service.impl.ProductServiceImpl
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.domain.service.impl.PurchaseServiceImpl
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.domain.service.impl.UserProfileServiceImpl
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.domain.service.impl.UserServiceImpl
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.aspect.LoggingAspect
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.util.TestUtils
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fc81ebb
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.transaction.annotation.AnnotationTransactionAttributeSource
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.transaction.interceptor.TransactionInterceptor
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.transaction.event.TransactionalEventListenerFactory
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class ro.estore.model.config.RootJpaHibernateConfig$$EnhancerBySpringCGLIB$$1c77cde1
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.orm.jpa.JpaTransactionManager
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class com.sun.proxy.$Proxy44
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.jdbc.datasource.DriverManagerDataSource
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.core.env.StandardEnvironment
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class java.util.Properties
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class java.util.Collections$UnmodifiableMap
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.context.annotation.ConfigurationClassParser$ImportStack
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.context.support.DelegatingMessageSource
 [main] TRACE event.EventListenerMethodProcessor - No @EventListener annotations found on bean class: class org.springframework.context.event.SimpleApplicationEventMulticaster
 [main] DEBUG support.AbstractApplicationContext - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@7acfb656]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'lifecycleProcessor'
 [main] TRACE support.AbstractApplicationContext - Publishing event in org.springframework.context.support.GenericApplicationContext@6321e813: org.springframework.context.event.ContextRefreshedEvent[source=org.springframework.context.support.GenericApplicationContext@6321e813: startup date [Tue Jul 19 15:49:08 EEST 2016]; root of context hierarchy]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Storing ApplicationContext in cache under key [[MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 0, missCount = 1]
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.AddressServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.AddressServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.AddressServiceImplTest' to bean named 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.AddressServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.AddressService ro.estore.domain.service.impl.AddressServiceImplTest.addressService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressServiceImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.AddressServiceImplTest' to bean named 'addressServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImplTest.findAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.AddressServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.AddressServiceImplTest@6f1fba17]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.AddressServiceImplTest.findAddressTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImplTest.setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.AddressServiceImplTest.setUp()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImplTest.deleteAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.AddressServiceImplTest.deleteAddressTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImplTest.updateAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.AddressServiceImplTest.updateAddressTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.AddressServiceImplTest@6f1fba17], method [public void ro.estore.domain.service.impl.AddressServiceImplTest.deleteAddressTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@13a5fe33 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@6f1fba17, testMethod = deleteAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImplTest.deleteAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@13a5fe33 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@6f1fba17, testMethod = deleteAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.domain.service.impl.AddressServiceImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@6c806c8b transactionManagerName = '', defaultRollback = true] for test class [ro.estore.domain.service.impl.AddressServiceImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 1, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@13a5fe33 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@6f1fba17, testMethod = deleteAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.AddressServiceImplTest.deleteAddressTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder]
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
 [main] DEBUG internal.StatisticsInitiator - Statistics initialized [enabled=false]
 [main] TRACE internal.SessionImpl - Opened Session [ef82ab07-1146-413e-a346-0ddb5fa4c2a4] at timestamp: 14689325565
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@778d82e9]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@408e96d9] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@168cd36b] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@13a5fe33 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@6f1fba17, testMethod = deleteAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@168cd36b] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@408e96d9] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.AddressServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@168cd36b] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Address#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        address0_.address_id as address_1_0_0_,
        address0_.address_line_1 as address_2_0_0_,
        address0_.address_line_2 as address_3_0_0_,
        address0_.address_name as address_4_0_0_,
        address0_.city as city5_0_0_,
        address0_.postcode as postcode6_0_0_ 
    from
        address address0_ 
    where
        address0_.address_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@14229fa7: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@14229fa7: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@3ee69ad8]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_0_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_0_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_0_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_0_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_0_] : [VARCHAR]) - [00000]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@3ee69ad8]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@3ee69ad8]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@14229fa7: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@14229fa7: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Address#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 154ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 17ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 191ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.AddressServiceImpl.findById]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@168cd36b] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@408e96d9] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.AddressServiceImpl.remove]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.domain.service.impl.GenericServiceImpl.remove(DomainDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@168cd36b] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@168cd36b] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@168cd36b] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Address#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object) took 26ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.domain.service.impl.GenericServiceImpl.remove(DomainDTO) took 30ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.AddressServiceImpl.remove]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@168cd36b] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=1} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@408e96d9] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.AddressServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@168cd36b] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 6ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.AddressServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.AddressServiceImplTest@6f1fba17], method [public void ro.estore.domain.service.impl.AddressServiceImplTest.deleteAddressTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@13a5fe33 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@6f1fba17, testMethod = deleteAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@1cec219f]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=1} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@168cd36b] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@408e96d9] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [ef82ab07-1146-413e-a346-0ddb5fa4c2a4]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@5c8e67b9]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@13a5fe33 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@6f1fba17, testMethod = deleteAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@13a5fe33 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@6f1fba17, testMethod = deleteAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.AddressServiceImplTest@608bc8f8]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@13a5fe33 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@608bc8f8, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 2, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.AddressServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.AddressServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.AddressServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.AddressService ro.estore.domain.service.impl.AddressServiceImplTest.addressService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.AddressServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.AddressServiceImplTest@608bc8f8]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.AddressServiceImplTest@608bc8f8], method [public void ro.estore.domain.service.impl.AddressServiceImplTest.findAddressTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@13a5fe33 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@608bc8f8, testMethod = findAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImplTest.findAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@13a5fe33 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@608bc8f8, testMethod = findAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 3, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@13a5fe33 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@608bc8f8, testMethod = findAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.AddressServiceImplTest.findAddressTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [6320b268-9f3d-4fef-8fd3-383a18e9597b] at timestamp: 14689325570
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@79316f3a]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@381d7219] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@49fe3142] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@13a5fe33 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@608bc8f8, testMethod = findAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@49fe3142] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@381d7219] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.AddressServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@49fe3142] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Address#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        address0_.address_id as address_1_0_0_,
        address0_.address_line_1 as address_2_0_0_,
        address0_.address_line_2 as address_3_0_0_,
        address0_.address_name as address_4_0_0_,
        address0_.city as city5_0_0_,
        address0_.postcode as postcode6_0_0_ 
    from
        address address0_ 
    where
        address0_.address_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@13fed1ec: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@13fed1ec: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@61c42416]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_0_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_0_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_0_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_0_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_0_] : [VARCHAR]) - [00000]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@61c42416]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@61c42416]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@13fed1ec: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@13fed1ec: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Address#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 41ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 46ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.AddressServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.AddressServiceImplTest@608bc8f8], method [public void ro.estore.domain.service.impl.AddressServiceImplTest.findAddressTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@13a5fe33 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@608bc8f8, testMethod = findAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@a565cbd]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@49fe3142] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@381d7219] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [6320b268-9f3d-4fef-8fd3-383a18e9597b]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@6fc29daa]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@13a5fe33 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@608bc8f8, testMethod = findAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@13a5fe33 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@608bc8f8, testMethod = findAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.AddressServiceImplTest@2f66f0d0]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@13a5fe33 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@2f66f0d0, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 4, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.AddressServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.AddressServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.AddressServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.AddressService ro.estore.domain.service.impl.AddressServiceImplTest.addressService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.AddressServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.AddressServiceImplTest@2f66f0d0]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.AddressServiceImplTest@2f66f0d0], method [public void ro.estore.domain.service.impl.AddressServiceImplTest.updateAddressTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@13a5fe33 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@2f66f0d0, testMethod = updateAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressServiceImplTest.updateAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@13a5fe33 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@2f66f0d0, testMethod = updateAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 5, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@13a5fe33 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@2f66f0d0, testMethod = updateAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.AddressServiceImplTest.updateAddressTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [45cea562-4ab2-4fd8-af0e-ff5d40a92327] at timestamp: 14689325571
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4cdb8504]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@76db540e] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@10358c32] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@13a5fe33 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@2f66f0d0, testMethod = updateAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@10358c32] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@76db540e] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.AddressServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@10358c32] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Address#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        address0_.address_id as address_1_0_0_,
        address0_.address_line_1 as address_2_0_0_,
        address0_.address_line_2 as address_3_0_0_,
        address0_.address_name as address_4_0_0_,
        address0_.city as city5_0_0_,
        address0_.postcode as postcode6_0_0_ 
    from
        address address0_ 
    where
        address0_.address_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@2a2843ec: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@2a2843ec: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@2042ccce]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_0_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_0_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_0_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_0_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_0_] : [VARCHAR]) - [00000]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@2042ccce]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@2042ccce]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@2a2843ec: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@2a2843ec: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Address#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 39ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 41ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.AddressServiceImpl.findById]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@10358c32] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@76db540e] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.AddressServiceImpl.update]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(DomainDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@10358c32] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 4ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@10358c32] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG internal.DefaultMergeEventListener - EntityCopyObserver strategy: disallow
 [main] TRACE internal.DefaultMergeEventListener - Merging detached instance
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object) took 9ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(DomainDTO) took 17ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.AddressServiceImpl.update]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@10358c32] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@76db540e] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.AddressServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@10358c32] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 3ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.AddressServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.AddressServiceImplTest@2f66f0d0], method [public void ro.estore.domain.service.impl.AddressServiceImplTest.updateAddressTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@13a5fe33 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@2f66f0d0, testMethod = updateAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@6ff6efdc]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@10358c32] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@76db540e] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [45cea562-4ab2-4fd8-af0e-ff5d40a92327]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@2b289ac9]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@13a5fe33 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@2f66f0d0, testMethod = updateAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@13a5fe33 testClass = AddressServiceImplTest, testInstance = ro.estore.domain.service.impl.AddressServiceImplTest@2f66f0d0, testMethod = updateAddressTest@AddressServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] TRACE context.TestContextManager - afterTestClass(): class [ro.estore.domain.service.impl.AddressServiceImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@13a5fe33 testClass = AddressServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3108bc testClass = AddressServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.domain.service.impl.OrderServiceImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] TRACE support.ContextLoaderUtils - Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], classes=[class ro.estore.model.config.JpaHibernateTestConfig], loader=interface org.springframework.test.context.ContextLoader, inheritInitializers=true, locations=[], initializers=[], inheritLocations=true)] for declaring class [ro.estore.domain.service.impl.OrderServiceImplTest].
 [main] TRACE support.ContextLoaderUtils - Resolved context configuration attributes: [ContextConfigurationAttributes@18460128 declaringClass = 'ro.estore.domain.service.impl.OrderServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@18460128 declaringClass = 'ro.estore.domain.service.impl.OrderServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] TRACE support.AbstractTestContextBootstrapper - Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@18460128 declaringClass = 'ro.estore.domain.service.impl.OrderServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@18460128 declaringClass = 'ro.estore.domain.service.impl.OrderServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] TRACE support.SpringFactoriesLoader - Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]
 [main] TRACE support.ApplicationContextInitializerUtils - Processing context initializers for context configuration attributes [ContextConfigurationAttributes@18460128 declaringClass = 'ro.estore.domain.service.impl.OrderServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.domain.service.impl.OrderServiceImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@71b6d77f, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1866da85, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4cfa8227, org.springframework.test.context.transaction.TransactionalTestExecutionListener@78226c36, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3f685162]
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@71b6d77f
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1866da85
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@4cfa8227
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@78226c36
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3f685162
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] TRACE context.TestContextManager - beforeTestClass(): class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@11f406f8 testClass = OrderServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.OrderServiceImplTest@622fdb81]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@11f406f8 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@622fdb81, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 6, missCount = 1]
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.OrderService ro.estore.domain.service.impl.OrderServiceImplTest.orderService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderServiceImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.OrderServiceImplTest' to bean named 'orderServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.service.impl.OrderServiceImplTest.productConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.OrderServiceImplTest' to bean named 'productConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.OrderServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.OrderServiceImplTest' to bean named 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.OrderServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.OrderServiceImplTest' to bean named 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImplTest.updateOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.OrderServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.OrderServiceImplTest@622fdb81]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.OrderServiceImplTest.updateOrderTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImplTest.deleteOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.OrderServiceImplTest.deleteOrderTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImplTest.findOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.OrderServiceImplTest.findOrderTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.OrderServiceImplTest@622fdb81], method [public void ro.estore.domain.service.impl.OrderServiceImplTest.findOrderTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@11f406f8 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@622fdb81, testMethod = findOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImplTest.findOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@11f406f8 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@622fdb81, testMethod = findOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.domain.service.impl.OrderServiceImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@6c806c8b transactionManagerName = '', defaultRollback = true] for test class [ro.estore.domain.service.impl.OrderServiceImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 7, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@11f406f8 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@622fdb81, testMethod = findOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.OrderServiceImplTest.findOrderTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [92e878ee-ade5-4b43-bc4b-7e87386dcbd4] at timestamp: 14689325573
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@a7ad6e5]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@3b1ed14b] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@690bc15e] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@11f406f8 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@622fdb81, testMethod = findOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@690bc15e] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@3b1ed14b] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.OrderServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@690bc15e] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Order#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        order0_.order_id as order_id1_1_0_,
        order0_.address_id as address_2_1_0_,
        address1_.address_id as address_1_0_1_,
        address1_.address_line_1 as address_2_0_1_,
        address1_.address_line_2 as address_3_0_1_,
        address1_.address_name as address_4_0_1_,
        address1_.city as city5_0_1_,
        address1_.postcode as postcode6_0_1_ 
    from
        `
    order` order0_ inner join
        address address1_ 
            on order0_.address_id=address1_.address_id 
    where
        order0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@1bc776b7: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@1bc776b7: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@475646d4]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_1_0_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_1_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_1_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_1_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_1_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_1_] : [VARCHAR]) - [00000]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@475646d4]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@475646d4]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@1bc776b7: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@1bc776b7: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Order#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 72ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchases0_.order_id as order_id4_3_0_,
        purchases0_.purchase_id as purchase1_3_0_,
        purchases0_.purchase_id as purchase1_3_1_,
        purchases0_.product_id as product_3_3_1_,
        purchases0_.quantity as quantity2_3_1_,
        product1_.product_id as product_1_2_2_,
        product1_.brand as brand2_2_2_,
        product1_.description as descript3_2_2_,
        product1_.name as name4_2_2_,
        product1_.price as price5_2_2_,
        product1_.stock as stock6_2_2_ 
    from
        purchase purchases0_ 
    inner join
        product product1_ 
            on purchases0_.product_id=product1_.product_id 
    where
        purchases0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@1a2909ae: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@1a2909ae: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@e042c99]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@e042c99]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_1_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_2_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_2_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_2_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_2_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_2_] : [INTEGER]) - [14]
 [main] TRACE sql.BasicExtractor - extracted value ([order_id4_3_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@e042c99, coll=[ro.estore.model.entitiy.Order.purchases#1]>@a0db585]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@e042c99, coll=[ro.estore.model.entitiy.Order.purchases#1]>@a0db585]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@e042c99]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@e042c99]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@1a2909ae: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@1a2909ae: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 11ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 26ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 111ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 197ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.OrderServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.OrderServiceImplTest@622fdb81], method [public void ro.estore.domain.service.impl.OrderServiceImplTest.findOrderTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@11f406f8 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@622fdb81, testMethod = findOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@7fd26ad8]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@690bc15e] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@3b1ed14b] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [92e878ee-ade5-4b43-bc4b-7e87386dcbd4]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@10823d72]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@11f406f8 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@622fdb81, testMethod = findOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@11f406f8 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@622fdb81, testMethod = findOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.OrderServiceImplTest@7cea0110]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@11f406f8 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@7cea0110, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 8, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.OrderService ro.estore.domain.service.impl.OrderServiceImplTest.orderService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.service.impl.OrderServiceImplTest.productConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.OrderServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.OrderServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.OrderServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.OrderServiceImplTest@7cea0110]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.OrderServiceImplTest@7cea0110], method [public void ro.estore.domain.service.impl.OrderServiceImplTest.deleteOrderTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@11f406f8 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@7cea0110, testMethod = deleteOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImplTest.deleteOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@11f406f8 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@7cea0110, testMethod = deleteOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 9, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@11f406f8 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@7cea0110, testMethod = deleteOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.OrderServiceImplTest.deleteOrderTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [45e37fae-8b0d-4086-a948-9b211ad79d18] at timestamp: 14689325575
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@78010562]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@50756c76] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@38aafb53] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@11f406f8 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@7cea0110, testMethod = deleteOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@38aafb53] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@50756c76] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.OrderServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@38aafb53] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Order#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        order0_.order_id as order_id1_1_0_,
        order0_.address_id as address_2_1_0_,
        address1_.address_id as address_1_0_1_,
        address1_.address_line_1 as address_2_0_1_,
        address1_.address_line_2 as address_3_0_1_,
        address1_.address_name as address_4_0_1_,
        address1_.city as city5_0_1_,
        address1_.postcode as postcode6_0_1_ 
    from
        `
    order` order0_ inner join
        address address1_ 
            on order0_.address_id=address1_.address_id 
    where
        order0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@1729ec00: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@1729ec00: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@1c9e07c6]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_1_0_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_1_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_1_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_1_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_1_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_1_] : [VARCHAR]) - [00000]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@1c9e07c6]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@1c9e07c6]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@1729ec00: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@1729ec00: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Order#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 35ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchases0_.order_id as order_id4_3_0_,
        purchases0_.purchase_id as purchase1_3_0_,
        purchases0_.purchase_id as purchase1_3_1_,
        purchases0_.product_id as product_3_3_1_,
        purchases0_.quantity as quantity2_3_1_,
        product1_.product_id as product_1_2_2_,
        product1_.brand as brand2_2_2_,
        product1_.description as descript3_2_2_,
        product1_.name as name4_2_2_,
        product1_.price as price5_2_2_,
        product1_.stock as stock6_2_2_ 
    from
        purchase purchases0_ 
    inner join
        product product1_ 
            on purchases0_.product_id=product1_.product_id 
    where
        purchases0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@3eda0aeb: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@3eda0aeb: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@459b187a]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@459b187a]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_1_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_2_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_2_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_2_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_2_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_2_] : [INTEGER]) - [14]
 [main] TRACE sql.BasicExtractor - extracted value ([order_id4_3_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@459b187a, coll=[ro.estore.model.entitiy.Order.purchases#1]>@636bbbbb]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@459b187a, coll=[ro.estore.model.entitiy.Order.purchases#1]>@636bbbbb]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@459b187a]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@459b187a]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@3eda0aeb: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@3eda0aeb: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 55ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 93ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.OrderServiceImpl.findById]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@38aafb53] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@50756c76] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.OrderServiceImpl.remove]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.domain.service.impl.GenericServiceImpl.remove(DomainDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Order ro.estore.domain.converter.OrderConverter.toEntity(OrderDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO) took 4ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Order ro.estore.domain.converter.OrderConverter.toEntity(OrderDTO) took 8ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@38aafb53] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@38aafb53] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Order#1]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@38aafb53] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Cascade ACTION_DELETE for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE spi.CascadingActions$1 - Cascading to delete: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.Cascade - Done cascade ACTION_DELETE for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object) took 11ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.domain.service.impl.GenericServiceImpl.remove(DomainDTO) took 22ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.OrderServiceImpl.remove]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@38aafb53] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=2} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@50756c76] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.OrderServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@38aafb53] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 5ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.OrderServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.OrderServiceImplTest@7cea0110], method [public void ro.estore.domain.service.impl.OrderServiceImplTest.deleteOrderTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@11f406f8 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@7cea0110, testMethod = deleteOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@10dc7d6]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=2} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@38aafb53] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@50756c76] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [45e37fae-8b0d-4086-a948-9b211ad79d18]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@4f668f29]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@11f406f8 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@7cea0110, testMethod = deleteOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@11f406f8 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@7cea0110, testMethod = deleteOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.OrderServiceImplTest@716e431d]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@11f406f8 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@716e431d, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 10, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.OrderService ro.estore.domain.service.impl.OrderServiceImplTest.orderService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.service.impl.OrderServiceImplTest.productConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.OrderServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.OrderServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.OrderServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.OrderServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.OrderServiceImplTest@716e431d]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.OrderServiceImplTest@716e431d], method [public void ro.estore.domain.service.impl.OrderServiceImplTest.updateOrderTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@11f406f8 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@716e431d, testMethod = updateOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderServiceImplTest.updateOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@11f406f8 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@716e431d, testMethod = updateOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 11, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@11f406f8 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@716e431d, testMethod = updateOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.OrderServiceImplTest.updateOrderTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [2ed6a00b-3420-485e-ae79-3964fdc0db00] at timestamp: 14689325577
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@35eb4a3b]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@64b3b1ce] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@6884f0d9] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@11f406f8 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@716e431d, testMethod = updateOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@6884f0d9] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@64b3b1ce] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.OrderServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@6884f0d9] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Order#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        order0_.order_id as order_id1_1_0_,
        order0_.address_id as address_2_1_0_,
        address1_.address_id as address_1_0_1_,
        address1_.address_line_1 as address_2_0_1_,
        address1_.address_line_2 as address_3_0_1_,
        address1_.address_name as address_4_0_1_,
        address1_.city as city5_0_1_,
        address1_.postcode as postcode6_0_1_ 
    from
        `
    order` order0_ inner join
        address address1_ 
            on order0_.address_id=address1_.address_id 
    where
        order0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@49ec6a9f: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@49ec6a9f: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@26b95b0b]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_1_0_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_1_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_1_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_1_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_1_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_1_] : [VARCHAR]) - [00000]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@26b95b0b]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@26b95b0b]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@49ec6a9f: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@49ec6a9f: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Order#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 28ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchases0_.order_id as order_id4_3_0_,
        purchases0_.purchase_id as purchase1_3_0_,
        purchases0_.purchase_id as purchase1_3_1_,
        purchases0_.product_id as product_3_3_1_,
        purchases0_.quantity as quantity2_3_1_,
        product1_.product_id as product_1_2_2_,
        product1_.brand as brand2_2_2_,
        product1_.description as descript3_2_2_,
        product1_.name as name4_2_2_,
        product1_.price as price5_2_2_,
        product1_.stock as stock6_2_2_ 
    from
        purchase purchases0_ 
    inner join
        product product1_ 
            on purchases0_.product_id=product1_.product_id 
    where
        purchases0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@56afdf9a: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@56afdf9a: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@64fe9da7]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@64fe9da7]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_1_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_2_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_2_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_2_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_2_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_2_] : [INTEGER]) - [14]
 [main] TRACE sql.BasicExtractor - extracted value ([order_id4_3_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@64fe9da7, coll=[ro.estore.model.entitiy.Order.purchases#1]>@77ec6a3d]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@64fe9da7, coll=[ro.estore.model.entitiy.Order.purchases#1]>@77ec6a3d]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@64fe9da7]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@64fe9da7]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@56afdf9a: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@56afdf9a: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 48ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 79ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.OrderServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.util.TestUtils.createProduct(String)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.util.TestUtils.createProduct(String) took 16ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@6884f0d9] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@64b3b1ce] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.ProductServiceImpl.create]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.service.impl.ProductServiceImpl.create(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.model.repository.impl.ProductRepositoryJpaImpl.findMatching(Product)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@6884f0d9] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG internal.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Product as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.brand=:param1 ) and ( generatedAlias0.description=:param2 ) and ( generatedAlias0.price=21.542D )
 [main] TRACE spi.QueryPlanCache - Unable to locate HQL query plan in cache; generating (select generatedAlias0 from Product as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.brand=:param1 ) and ( generatedAlias0.description=:param2 ) and ( generatedAlias0.price=21.542D ))
 [main] TRACE internal.AbstractServiceRegistryImpl - Initializing service [role=org.hibernate.hql.spi.QueryTranslatorFactory]
 [main] DEBUG internal.QueryTranslatorFactoryInitiator - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4af70944
 [main] INFO  internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
 [main] DEBUG ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from ro.estore.model.entitiy.Product as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.brand=:param1 ) and ( generatedAlias0.description=:param2 ) and ( generatedAlias0.price=21.542D )
 [main] DEBUG ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'ro'
    |  |     |  |  |  |  \-[IDENT] Node: 'estore'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'entitiy'
    |  |     |  \-[IDENT] Node: 'Product'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  \-[IDENT] Node: 'name'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'param0'
          |  |  \-[EQ] Node: '='
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'brand'
          |  |     \-[COLON] Node: ':'
          |  |        \-[IDENT] Node: 'param1'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'description'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param2'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'price'
             \-[NUM_DOUBLE] Node: '21.542D'

 [main] DEBUG ast.ErrorCounter - throwQueryException() : no errors
 [main] DEBUG antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
 [main] DEBUG tree.FromElement - FromClause{level=1} : ro.estore.model.entitiy.Product (generatedAlias0) -> product0_
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0 -> product0_.product_id
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0 -> product0_.product_id
 [main] TRACE tree.FromElement - Handling property dereference [ro.estore.model.entitiy.Product (generatedAlias0) -> name (class)]
 [main] DEBUG tree.DotNode - getDataType() : name -> org.hibernate.type.StringType@788fcafb
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0.name -> product0_.name
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0 -> product0_.product_id
 [main] TRACE tree.FromElement - Handling property dereference [ro.estore.model.entitiy.Product (generatedAlias0) -> brand (class)]
 [main] DEBUG tree.DotNode - getDataType() : brand -> org.hibernate.type.StringType@788fcafb
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0.brand -> product0_.brand
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0 -> product0_.product_id
 [main] TRACE tree.FromElement - Handling property dereference [ro.estore.model.entitiy.Product (generatedAlias0) -> description (class)]
 [main] DEBUG tree.DotNode - getDataType() : description -> org.hibernate.type.StringType@788fcafb
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0.description -> product0_.description
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0 -> product0_.product_id
 [main] TRACE tree.FromElement - Handling property dereference [ro.estore.model.entitiy.Product (generatedAlias0) -> price (class)]
 [main] DEBUG tree.DotNode - getDataType() : price -> org.hibernate.type.DoubleType@58c34bb3
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0.price -> product0_.price
 [main] DEBUG antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
 [main] DEBUG ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} product0_.product_id ) ( FromClause{level=1} product product0_ ) ( where ( and ( and ( and ( = ( product0_.name product0_.product_id name ) ? ) ( = ( product0_.brand product0_.product_id brand ) ? ) ) ( = ( product0_.description product0_.product_id description ) ? ) ) ( = ( product0_.price product0_.product_id price ) 21.542 ) ) ) )
 [main] DEBUG util.JoinProcessor - Using FROM fragment [product product0_]
 [main] DEBUG antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
 [main] DEBUG ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (product)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'product0_.product_id as product_1_2_' {alias=generatedAlias0, className=ro.estore.model.entitiy.Product, tableAlias=product0_}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.brand as brand2_2_, product0_.description as descript3_2_, product0_.name as name4_2_, product0_.price as price5_2_, product0_.stock as stock6_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=product,tableAlias=product0_,origin=null,columns={,className=ro.estore.model.entitiy.Product}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'product0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias0.name,tableAlias=product0_,className=ro.estore.model.entitiy.Product,classAlias=generatedAlias0}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'product0_.product_id' {alias=generatedAlias0, className=ro.estore.model.entitiy.Product, tableAlias=product0_}
          |  |  |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@788fcafb}
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[DOT] DotNode: 'product0_.brand' {propertyName=brand,dereferenceType=PRIMITIVE,getPropertyPath=brand,path=generatedAlias0.brand,tableAlias=product0_,className=ro.estore.model.entitiy.Product,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'product0_.product_id' {alias=generatedAlias0, className=ro.estore.model.entitiy.Product, tableAlias=product0_}
          |  |     |  \-[IDENT] IdentNode: 'brand' {originalText=brand}
          |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@788fcafb}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'product0_.description' {propertyName=description,dereferenceType=PRIMITIVE,getPropertyPath=description,path=generatedAlias0.description,tableAlias=product0_,className=ro.estore.model.entitiy.Product,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'product0_.product_id' {alias=generatedAlias0, className=ro.estore.model.entitiy.Product, tableAlias=product0_}
          |     |  \-[IDENT] IdentNode: 'description' {originalText=description}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@788fcafb}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'product0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=product0_,className=ro.estore.model.entitiy.Product,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'product0_.product_id' {alias=generatedAlias0, className=ro.estore.model.entitiy.Product, tableAlias=product0_}
             |  \-[IDENT] IdentNode: 'price' {originalText=price}
             \-[NUM_DOUBLE] LiteralNode: '21.542'

 [main] DEBUG ast.ErrorCounter - throwQueryException() : no errors
 [main] DEBUG ast.QueryTranslatorImpl - HQL: select generatedAlias0 from ro.estore.model.entitiy.Product as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.brand=:param1 ) and ( generatedAlias0.description=:param2 ) and ( generatedAlias0.price=21.542D )
 [main] DEBUG ast.QueryTranslatorImpl - SQL: select product0_.product_id as product_1_2_, product0_.brand as brand2_2_, product0_.description as descript3_2_, product0_.name as name4_2_, product0_.price as price5_2_, product0_.stock as stock6_2_ from product product0_ where product0_.name=? and product0_.brand=? and product0_.description=? and product0_.price=21.542
 [main] DEBUG ast.ErrorCounter - throwQueryException() : no errors
 [main] TRACE spi.HQLQueryPlan - HQL param location recognition took 2.394.008 nanoseconds (select generatedAlias0 from Product as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.brand=:param1 ) and ( generatedAlias0.description=:param2 ) and ( generatedAlias0.price=21.542D ))
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from Product as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.brand=:param1 ) and ( generatedAlias0.description=:param2 ) and ( generatedAlias0.price=21.542D ))
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@6884f0d9] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from Product as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.brand=:param1 ) and ( generatedAlias0.description=:param2 ) and ( generatedAlias0.price=21.542D ))
 [main] TRACE internal.AbstractFlushingEventListener - Flushing session
 [main] DEBUG internal.AbstractFlushingEventListener - Processing flush-time cascades
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Order
 [main] TRACE spi.CascadingActions$8 - Cascading to persist on flush: ro.estore.model.entitiy.Address
 [main] TRACE internal.AbstractSaveEventListener - Persistent instance of: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultPersistEventListener - Ignoring persistent instance
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Address
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Address
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Address
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Address
 [main] TRACE internal.Cascade - Cascade ACTION_PERSIST_ON_FLUSH for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE spi.CascadingActions$8 - Cascading to persist on flush: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.AbstractSaveEventListener - Persistent instance of: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultPersistEventListener - Ignoring persistent instance
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.Cascade - Done cascade ACTION_PERSIST_ON_FLUSH for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Address
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Address
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Product
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_ON_FLUSH for: ro.estore.model.entitiy.Product
 [main] DEBUG internal.AbstractFlushingEventListener - Dirty checking collections
 [main] TRACE internal.AbstractFlushingEventListener - Flushing entities and processing referenced collections
 [main] DEBUG internal.Collections - Collection found: [ro.estore.model.entitiy.Order.purchases#1], was: [ro.estore.model.entitiy.Order.purchases#1] (initialized)
 [main] TRACE internal.AbstractFlushingEventListener - Processing unreferenced collections
 [main] TRACE internal.AbstractFlushingEventListener - Scheduling collection removes/(re)creates/updates
 [main] DEBUG internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
 [main] DEBUG internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
 [main] DEBUG util.EntityPrinter - Listing entities:
 [main] DEBUG util.EntityPrinter - ro.estore.model.entitiy.Order{address=ro.estore.model.entitiy.Address#1, purchases=[ro.estore.model.entitiy.Purchase#1], id=1}
 [main] DEBUG util.EntityPrinter - ro.estore.model.entitiy.Product{price=2.34, name=prod0, description=prod0 desc, id=1, stock=14, brand=brand0}
 [main] DEBUG util.EntityPrinter - ro.estore.model.entitiy.Purchase{product=ro.estore.model.entitiy.Product#1, quantity=4, id=1}
 [main] DEBUG util.EntityPrinter - ro.estore.model.entitiy.Address{city=city0, postcode=00000, addressLine1=addr line 1_0, addressLine2=addr line 2_0, addressName=addr name 0, id=1}
 [main] TRACE internal.DefaultAutoFlushEventListener - Don't need to execute flush
 [main] TRACE spi.HQLQueryPlan - Find: select generatedAlias0 from Product as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.brand=:param1 ) and ( generatedAlias0.description=:param2 ) and ( generatedAlias0.price=21.542D )
 [main] TRACE spi.QueryParameters - Named parameters: {param0=prod name_1, param1=brand, param2=desc_1}
 [main] DEBUG spi.SqlStatementLogger - 
    select
        product0_.product_id as product_1_2_,
        product0_.brand as brand2_2_,
        product0_.description as descript3_2_,
        product0_.name as name4_2_,
        product0_.price as price5_2_,
        product0_.stock as stock6_2_ 
    from
        product product0_ 
    where
        product0_.name=? 
        and product0_.brand=? 
        and product0_.description=? 
        and product0_.price=21.542
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@74174a23: select product0_.product_id as product_1_2_, product0_.brand as brand2_2_, product0_.description as descript3_2_, product0_.name as name4_2_, product0_.price as price5_2_, product0_.stock as stock6_2_ from product product0_ where product0_.name=** NOT SPECIFIED ** and product0_.brand=** NOT SPECIFIED ** and product0_.description=** NOT SPECIFIED ** and product0_.price=21.542]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@74174a23: select product0_.product_id as product_1_2_, product0_.brand as brand2_2_, product0_.description as descript3_2_, product0_.name as name4_2_, product0_.price as price5_2_, product0_.stock as stock6_2_ from product product0_ where product0_.name=** NOT SPECIFIED ** and product0_.brand=** NOT SPECIFIED ** and product0_.description=** NOT SPECIFIED ** and product0_.price=21.542]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [prod name_1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [brand]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [desc_1]
 [main] TRACE loader.Loader - Bound [4] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@434514d8]
 [main] TRACE loader.Loader - Processing result set
 [main] TRACE loader.Loader - Done processing result set (0 rows)
 [main] TRACE loader.Loader - Total objects hydrated: 0
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@74174a23: select product0_.product_id as product_1_2_, product0_.brand as brand2_2_, product0_.description as descript3_2_, product0_.name as name4_2_, product0_.price as price5_2_, product0_.stock as stock6_2_ from product product0_ where product0_.name='prod name_1' and product0_.brand='brand' and product0_.description='desc_1' and product0_.price=21.542]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@434514d8]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@74174a23: select product0_.product_id as product_1_2_, product0_.brand as brand2_2_, product0_.description as descript3_2_, product0_.name as name4_2_, product0_.price as price5_2_, product0_.stock as stock6_2_ from product product0_ where product0_.name='prod name_1' and product0_.brand='brand' and product0_.description='desc_1' and product0_.price=21.542]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] ERROR impl.ProductRepositoryJpaImpl - No product was found (No entity found for query)
javax.persistence.NoResultException: No entity found for query
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1422)
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getSingleResult(CriteriaQueryTypeQueryAdapter.java:59)
	at ro.estore.model.repository.impl.ProductRepositoryJpaImpl.findMatching(ProductRepositoryJpaImpl.java:50)
	at ro.estore.model.repository.impl.ProductRepositoryJpaImpl$$FastClassBySpringCGLIB$$9ccc7612.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at ro.estore.aspect.LoggingAspect.logMethodExecutionTime(LoggingAspect.java:46)
	at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at ro.estore.model.repository.impl.ProductRepositoryJpaImpl$$EnhancerBySpringCGLIB$$58077b6d.findMatching(<generated>)
	at ro.estore.domain.service.impl.ProductServiceImpl.create(ProductServiceImpl.java:39)
	at ro.estore.domain.service.impl.ProductServiceImpl.create(ProductServiceImpl.java:17)
	at ro.estore.domain.service.impl.ProductServiceImpl$$FastClassBySpringCGLIB$$242497f2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at ro.estore.aspect.LoggingAspect.logMethodExecutionTime(LoggingAspect.java:46)
	at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at ro.estore.domain.service.impl.ProductServiceImpl$$EnhancerBySpringCGLIB$$81d6024b.create(<generated>)
	at ro.estore.domain.service.impl.OrderServiceImplTest.updateOrderTest(OrderServiceImplTest.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:252)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:94)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:191)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.model.repository.impl.ProductRepositoryJpaImpl.findMatching(Product) took 725ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@6884f0d9] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Product
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Product#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Product] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Product#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Product#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Product (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        product
        (brand, description, name, price, stock) 
    values
        (?, ?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@1305c126: insert into product (brand, description, name, price, stock) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Product#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [brand]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [desc_1]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [prod name_1]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [DOUBLE] - [21.542]
 [main] TRACE sql.BasicBinder - binding parameter [5] as [INTEGER] - [543]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 5
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@252a8aae]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@252a8aae]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@1305c126: insert into product (brand, description, name, price, stock) values ('brand', 'desc_1', 'prod name_1', 21.542, 543)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@1305c126: insert into product (brand, description, name, price, stock) values ('brand', 'desc_1', 'prod name_1', 21.542, 543)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object) took 62ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.service.impl.ProductServiceImpl.create(ProductDTO) took 810ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.ProductServiceImpl.create]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@6884f0d9] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#5], EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@64b3b1ce] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.OrderServiceImpl.update]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(DomainDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@6884f0d9] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Order#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 5ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Order ro.estore.domain.converter.OrderConverter.toEntity(OrderDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Order ro.estore.domain.converter.OrderConverter.toEntity(OrderDTO) took 9ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@6884f0d9] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultMergeEventListener - Merging detached instance
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.Cascade - Processing cascade ACTION_MERGE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Cascade ACTION_MERGE for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE spi.CascadingActions$6 - Cascading to merge: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultMergeEventListener - Merging detached instance
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] TRACE spi.CascadingActions$6 - Cascading to merge: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultMergeEventListener - Merging transient instance
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#5]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#5]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#5]
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Purchase#<null>]
 [main] DEBUG internal.StatefulPersistenceContext - Detached object being merged (corresponding with a managed entity) has a collection that [contains] the detached child.
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Purchase] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Purchase (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        purchase
        (product_id, quantity, order_id) 
    values
        (?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@7d44a19: insert into purchase (product_id, quantity, order_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [5]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [INTEGER] - [2]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [BIGINT] - [1]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 11
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@1fb2d5e]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@1fb2d5e]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@7d44a19: insert into purchase (product_id, quantity, order_id) values (5, 2, 1)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@7d44a19: insert into purchase (product_id, quantity, order_id) values (5, 2, 1)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Done cascade ACTION_MERGE for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.Cascade - Done processing cascade ACTION_MERGE for: ro.estore.model.entitiy.Order
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object) took 62ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 9ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(DomainDTO) took 93ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.OrderServiceImpl.update]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@6884f0d9] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#5], EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1], EntityKey[ro.estore.model.entitiy.Purchase#11]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@64b3b1ce] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.OrderServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@6884f0d9] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Order#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 6ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 12ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.OrderServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.OrderServiceImplTest@716e431d], method [public void ro.estore.domain.service.impl.OrderServiceImplTest.updateOrderTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@11f406f8 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@716e431d, testMethod = updateOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@4052c8c2]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#5], EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1], EntityKey[ro.estore.model.entitiy.Purchase#11]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@6884f0d9] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@64b3b1ce] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [2ed6a00b-3420-485e-ae79-3964fdc0db00]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@181b8c4b]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@11f406f8 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@716e431d, testMethod = updateOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@11f406f8 testClass = OrderServiceImplTest, testInstance = ro.estore.domain.service.impl.OrderServiceImplTest@716e431d, testMethod = updateOrderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] TRACE context.TestContextManager - afterTestClass(): class [ro.estore.domain.service.impl.OrderServiceImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@11f406f8 testClass = OrderServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@987455b testClass = OrderServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.domain.service.impl.ProductServiceImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] TRACE support.ContextLoaderUtils - Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], classes=[class ro.estore.model.config.JpaHibernateTestConfig], loader=interface org.springframework.test.context.ContextLoader, inheritInitializers=true, locations=[], initializers=[], inheritLocations=true)] for declaring class [ro.estore.domain.service.impl.ProductServiceImplTest].
 [main] TRACE support.ContextLoaderUtils - Resolved context configuration attributes: [ContextConfigurationAttributes@317a118b declaringClass = 'ro.estore.domain.service.impl.ProductServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@317a118b declaringClass = 'ro.estore.domain.service.impl.ProductServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] TRACE support.AbstractTestContextBootstrapper - Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@317a118b declaringClass = 'ro.estore.domain.service.impl.ProductServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@317a118b declaringClass = 'ro.estore.domain.service.impl.ProductServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] TRACE support.SpringFactoriesLoader - Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]
 [main] TRACE support.ApplicationContextInitializerUtils - Processing context initializers for context configuration attributes [ContextConfigurationAttributes@317a118b declaringClass = 'ro.estore.domain.service.impl.ProductServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.domain.service.impl.ProductServiceImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1687eb01, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@748d2277, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2f897dab, org.springframework.test.context.transaction.TransactionalTestExecutionListener@d5d5353, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@242b6e1a]
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1687eb01
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@748d2277
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@2f897dab
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@d5d5353
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@242b6e1a
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] TRACE context.TestContextManager - beforeTestClass(): class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.ProductServiceImplTest@3a082ff4]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@3a082ff4, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 12, missCount = 1]
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.ProductServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.ProductServiceImplTest' to bean named 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.ProductServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.ProductServiceImplTest' to bean named 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.service.impl.ProductServiceImplTest.productConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.ProductServiceImplTest' to bean named 'productConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.ProductServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.ProductServiceImplTest' to bean named 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImplTest.setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.ProductServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.ProductServiceImplTest@3a082ff4]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.ProductServiceImplTest.setUp()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImplTest.updateProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.ProductServiceImplTest.updateProductTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImplTest.createProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.ProductServiceImplTest.createProductTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImplTest.deleteProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.ProductServiceImplTest.deleteProductTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImplTest.findProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.ProductServiceImplTest.findProductTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.ProductServiceImplTest@3a082ff4], method [public void ro.estore.domain.service.impl.ProductServiceImplTest.deleteProductTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@3a082ff4, testMethod = deleteProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImplTest.deleteProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@3a082ff4, testMethod = deleteProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.domain.service.impl.ProductServiceImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@6c806c8b transactionManagerName = '', defaultRollback = true] for test class [ro.estore.domain.service.impl.ProductServiceImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 13, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@3a082ff4, testMethod = deleteProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.ProductServiceImplTest.deleteProductTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [ad4cfd11-a441-4f9c-a8cf-697bdff13b49] at timestamp: 14689325588
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@22eaa86e]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@561b7d53] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@1cc680e] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@3a082ff4, testMethod = deleteProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1cc680e] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@561b7d53] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1cc680e] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        product0_.product_id as product_1_2_0_,
        product0_.brand as brand2_2_0_,
        product0_.description as descript3_2_0_,
        product0_.name as name4_2_0_,
        product0_.price as price5_2_0_,
        product0_.stock as stock6_2_0_ 
    from
        product product0_ 
    where
        product0_.product_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@1dc3502b: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@1dc3502b: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@6a1d3225]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_0_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_0_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_0_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_0_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_0_] : [INTEGER]) - [14]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@6a1d3225]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@6a1d3225]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@1dc3502b: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@1dc3502b: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Product#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 38ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 41ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1cc680e] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@561b7d53] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.ProductServiceImpl.remove]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.domain.service.impl.GenericServiceImpl.remove(DomainDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1cc680e] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1cc680e] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1cc680e] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Product#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object) took 7ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.domain.service.impl.GenericServiceImpl.remove(DomainDTO) took 10ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.ProductServiceImpl.remove]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1cc680e] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=1} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@561b7d53] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1cc680e] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 5ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.ProductServiceImplTest@3a082ff4], method [public void ro.estore.domain.service.impl.ProductServiceImplTest.deleteProductTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@3a082ff4, testMethod = deleteProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@1457fde]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=1} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@1cc680e] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@561b7d53] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [ad4cfd11-a441-4f9c-a8cf-697bdff13b49]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@6f94fb9d]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@3a082ff4, testMethod = deleteProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@3a082ff4, testMethod = deleteProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.ProductServiceImplTest@17fa1336]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@17fa1336, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 14, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.ProductServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.ProductServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.service.impl.ProductServiceImplTest.productConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.ProductServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.ProductServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.ProductServiceImplTest@17fa1336]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.ProductServiceImplTest@17fa1336], method [public void ro.estore.domain.service.impl.ProductServiceImplTest.createProductTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@17fa1336, testMethod = createProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImplTest.createProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@17fa1336, testMethod = createProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 15, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@17fa1336, testMethod = createProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.ProductServiceImplTest.createProductTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [92ea436b-cd86-4d76-be10-0fbce7b50662] at timestamp: 14689325590
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@671d1157]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@60c8a093] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@44cffc25] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@17fa1336, testMethod = createProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.util.TestUtils.createProduct(String)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.util.TestUtils.createProduct(String) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@44cffc25] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@60c8a093] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.ProductServiceImpl.create]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.service.impl.ProductServiceImpl.create(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.model.repository.impl.ProductRepositoryJpaImpl.findMatching(Product)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@44cffc25] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG internal.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Product as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.brand=:param1 ) and ( generatedAlias0.description=:param2 ) and ( generatedAlias0.price=21.542D )
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from Product as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.brand=:param1 ) and ( generatedAlias0.description=:param2 ) and ( generatedAlias0.price=21.542D ))
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from Product as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.brand=:param1 ) and ( generatedAlias0.description=:param2 ) and ( generatedAlias0.price=21.542D ))
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@44cffc25] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from Product as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.brand=:param1 ) and ( generatedAlias0.description=:param2 ) and ( generatedAlias0.price=21.542D ))
 [main] TRACE spi.HQLQueryPlan - Find: select generatedAlias0 from Product as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.brand=:param1 ) and ( generatedAlias0.description=:param2 ) and ( generatedAlias0.price=21.542D )
 [main] TRACE spi.QueryParameters - Named parameters: {param0=prod name_1, param1=brand, param2=desc_1}
 [main] DEBUG spi.SqlStatementLogger - 
    select
        product0_.product_id as product_1_2_,
        product0_.brand as brand2_2_,
        product0_.description as descript3_2_,
        product0_.name as name4_2_,
        product0_.price as price5_2_,
        product0_.stock as stock6_2_ 
    from
        product product0_ 
    where
        product0_.name=? 
        and product0_.brand=? 
        and product0_.description=? 
        and product0_.price=21.542
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@25aeb5ac: select product0_.product_id as product_1_2_, product0_.brand as brand2_2_, product0_.description as descript3_2_, product0_.name as name4_2_, product0_.price as price5_2_, product0_.stock as stock6_2_ from product product0_ where product0_.name=** NOT SPECIFIED ** and product0_.brand=** NOT SPECIFIED ** and product0_.description=** NOT SPECIFIED ** and product0_.price=21.542]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@25aeb5ac: select product0_.product_id as product_1_2_, product0_.brand as brand2_2_, product0_.description as descript3_2_, product0_.name as name4_2_, product0_.price as price5_2_, product0_.stock as stock6_2_ from product product0_ where product0_.name=** NOT SPECIFIED ** and product0_.brand=** NOT SPECIFIED ** and product0_.description=** NOT SPECIFIED ** and product0_.price=21.542]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [prod name_1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [brand]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [desc_1]
 [main] TRACE loader.Loader - Bound [4] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@c755b2]
 [main] TRACE loader.Loader - Processing result set
 [main] TRACE loader.Loader - Done processing result set (0 rows)
 [main] TRACE loader.Loader - Total objects hydrated: 0
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@25aeb5ac: select product0_.product_id as product_1_2_, product0_.brand as brand2_2_, product0_.description as descript3_2_, product0_.name as name4_2_, product0_.price as price5_2_, product0_.stock as stock6_2_ from product product0_ where product0_.name='prod name_1' and product0_.brand='brand' and product0_.description='desc_1' and product0_.price=21.542]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@c755b2]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@25aeb5ac: select product0_.product_id as product_1_2_, product0_.brand as brand2_2_, product0_.description as descript3_2_, product0_.name as name4_2_, product0_.price as price5_2_, product0_.stock as stock6_2_ from product product0_ where product0_.name='prod name_1' and product0_.brand='brand' and product0_.description='desc_1' and product0_.price=21.542]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] ERROR impl.ProductRepositoryJpaImpl - No product was found (No entity found for query)
javax.persistence.NoResultException: No entity found for query
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1422)
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getSingleResult(CriteriaQueryTypeQueryAdapter.java:59)
	at ro.estore.model.repository.impl.ProductRepositoryJpaImpl.findMatching(ProductRepositoryJpaImpl.java:50)
	at ro.estore.model.repository.impl.ProductRepositoryJpaImpl$$FastClassBySpringCGLIB$$9ccc7612.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at ro.estore.aspect.LoggingAspect.logMethodExecutionTime(LoggingAspect.java:46)
	at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at ro.estore.model.repository.impl.ProductRepositoryJpaImpl$$EnhancerBySpringCGLIB$$58077b6d.findMatching(<generated>)
	at ro.estore.domain.service.impl.ProductServiceImpl.create(ProductServiceImpl.java:39)
	at ro.estore.domain.service.impl.ProductServiceImpl.create(ProductServiceImpl.java:17)
	at ro.estore.domain.service.impl.ProductServiceImpl$$FastClassBySpringCGLIB$$242497f2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at ro.estore.aspect.LoggingAspect.logMethodExecutionTime(LoggingAspect.java:46)
	at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at ro.estore.domain.service.impl.ProductServiceImpl$$EnhancerBySpringCGLIB$$81d6024b.create(<generated>)
	at ro.estore.domain.service.impl.ProductServiceImplTest.createProductTest(ProductServiceImplTest.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:252)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:94)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:191)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.model.repository.impl.ProductRepositoryJpaImpl.findMatching(Product) took 34ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@44cffc25] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Product
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Product#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Product] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Product#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Product#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Product (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        product
        (brand, description, name, price, stock) 
    values
        (?, ?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@75d982d3: insert into product (brand, description, name, price, stock) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Product#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [brand]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [desc_1]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [prod name_1]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [DOUBLE] - [21.542]
 [main] TRACE sql.BasicBinder - binding parameter [5] as [INTEGER] - [543]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 6
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@4f89331f]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@4f89331f]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@75d982d3: insert into product (brand, description, name, price, stock) values ('brand', 'desc_1', 'prod name_1', 21.542, 543)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@75d982d3: insert into product (brand, description, name, price, stock) values ('brand', 'desc_1', 'prod name_1', 21.542, 543)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object) took 29ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.service.impl.ProductServiceImpl.create(ProductDTO) took 70ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.ProductServiceImpl.create]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.ProductServiceImplTest@17fa1336], method [public void ro.estore.domain.service.impl.ProductServiceImplTest.createProductTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@17fa1336, testMethod = createProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@16727bf0]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#6]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@44cffc25] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@60c8a093] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [92ea436b-cd86-4d76-be10-0fbce7b50662]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@2f84acf7]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@17fa1336, testMethod = createProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@17fa1336, testMethod = createProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.ProductServiceImplTest@291373d3]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@291373d3, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 16, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.ProductServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.ProductServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.service.impl.ProductServiceImplTest.productConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.ProductServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.ProductServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.ProductServiceImplTest@291373d3]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.ProductServiceImplTest@291373d3], method [public void ro.estore.domain.service.impl.ProductServiceImplTest.findProductTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@291373d3, testMethod = findProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImplTest.findProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@291373d3, testMethod = findProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 17, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@291373d3, testMethod = findProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.ProductServiceImplTest.findProductTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [2ce2e98c-7d4f-4a87-996e-fd7dfd4e280f] at timestamp: 14689325591
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@a5272be]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@58ba5b30] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@4dba773d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@291373d3, testMethod = findProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@4dba773d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@58ba5b30] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@4dba773d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        product0_.product_id as product_1_2_0_,
        product0_.brand as brand2_2_0_,
        product0_.description as descript3_2_0_,
        product0_.name as name4_2_0_,
        product0_.price as price5_2_0_,
        product0_.stock as stock6_2_0_ 
    from
        product product0_ 
    where
        product0_.product_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@4c58255: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@4c58255: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@eac3a26]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_0_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_0_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_0_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_0_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_0_] : [INTEGER]) - [14]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@eac3a26]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@eac3a26]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@4c58255: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@4c58255: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Product#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 45ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 48ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.ProductServiceImplTest@291373d3], method [public void ro.estore.domain.service.impl.ProductServiceImplTest.findProductTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@291373d3, testMethod = findProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@53cf9c99]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@4dba773d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@58ba5b30] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [2ce2e98c-7d4f-4a87-996e-fd7dfd4e280f]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@7b306b9f]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@291373d3, testMethod = findProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@291373d3, testMethod = findProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.ProductServiceImplTest@142213d5]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@142213d5, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 18, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.ProductServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.ProductServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.ProductConverter ro.estore.domain.service.impl.ProductServiceImplTest.productConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.ProductServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.ProductServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.ProductServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.ProductServiceImplTest@142213d5]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.ProductServiceImplTest@142213d5], method [public void ro.estore.domain.service.impl.ProductServiceImplTest.updateProductTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@142213d5, testMethod = updateProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductServiceImplTest.updateProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@142213d5, testMethod = updateProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 19, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@142213d5, testMethod = updateProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.ProductServiceImplTest.updateProductTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [a20812d2-e3f7-4805-868d-c916b85a1308] at timestamp: 14689325592
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5a1c3cb4]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@76ad6715] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@56637cff] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@142213d5, testMethod = updateProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@56637cff] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@76ad6715] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@56637cff] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        product0_.product_id as product_1_2_0_,
        product0_.brand as brand2_2_0_,
        product0_.description as descript3_2_0_,
        product0_.name as name4_2_0_,
        product0_.price as price5_2_0_,
        product0_.stock as stock6_2_0_ 
    from
        product product0_ 
    where
        product0_.product_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@2938127d: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@2938127d: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@127a7272]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_0_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_0_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_0_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_0_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_0_] : [INTEGER]) - [14]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@127a7272]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@127a7272]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@2938127d: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@2938127d: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Product#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 32ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 35ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@56637cff] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@76ad6715] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.ProductServiceImpl.update]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(DomainDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@56637cff] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@56637cff] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultMergeEventListener - Merging detached instance
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object) took 5ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(DomainDTO) took 13ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.ProductServiceImpl.update]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@56637cff] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@76ad6715] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@56637cff] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 5ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.ProductServiceImplTest@142213d5], method [public void ro.estore.domain.service.impl.ProductServiceImplTest.updateProductTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@142213d5, testMethod = updateProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@2b7962a2]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@56637cff] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@76ad6715] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [a20812d2-e3f7-4805-868d-c916b85a1308]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@6ad16c5d]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@142213d5, testMethod = updateProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = ro.estore.domain.service.impl.ProductServiceImplTest@142213d5, testMethod = updateProductTest@ProductServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] TRACE context.TestContextManager - afterTestClass(): class [ro.estore.domain.service.impl.ProductServiceImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@39a87e72 testClass = ProductServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5d2828c9 testClass = ProductServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.domain.service.impl.PurchaseServiceImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] TRACE support.ContextLoaderUtils - Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], classes=[class ro.estore.model.config.JpaHibernateTestConfig], loader=interface org.springframework.test.context.ContextLoader, inheritInitializers=true, locations=[], initializers=[], inheritLocations=true)] for declaring class [ro.estore.domain.service.impl.PurchaseServiceImplTest].
 [main] TRACE support.ContextLoaderUtils - Resolved context configuration attributes: [ContextConfigurationAttributes@f1d0004 declaringClass = 'ro.estore.domain.service.impl.PurchaseServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@f1d0004 declaringClass = 'ro.estore.domain.service.impl.PurchaseServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] TRACE support.AbstractTestContextBootstrapper - Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@f1d0004 declaringClass = 'ro.estore.domain.service.impl.PurchaseServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@f1d0004 declaringClass = 'ro.estore.domain.service.impl.PurchaseServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] TRACE support.SpringFactoriesLoader - Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]
 [main] TRACE support.ApplicationContextInitializerUtils - Processing context initializers for context configuration attributes [ContextConfigurationAttributes@f1d0004 declaringClass = 'ro.estore.domain.service.impl.PurchaseServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.domain.service.impl.PurchaseServiceImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4596f8f3, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@ccf91df, org.springframework.test.context.support.DirtiesContextTestExecutionListener@117d32e, org.springframework.test.context.transaction.TransactionalTestExecutionListener@51d387d3, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2370ac7a]
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4596f8f3
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@ccf91df
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@117d32e
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@51d387d3
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2370ac7a
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] TRACE context.TestContextManager - beforeTestClass(): class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@534180a2 testClass = PurchaseServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.PurchaseServiceImplTest@21505815]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@534180a2 testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@21505815, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 20, missCount = 1]
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.PurchaseServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.PurchaseServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.PurchaseServiceImplTest' to bean named 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.PurchaseServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.PurchaseService ro.estore.domain.service.impl.PurchaseServiceImplTest.purchaseService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseServiceImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.PurchaseServiceImplTest' to bean named 'purchaseServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImplTest.setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.PurchaseServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.PurchaseServiceImplTest@21505815]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.PurchaseServiceImplTest.setUp()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImplTest.updatePurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.PurchaseServiceImplTest.updatePurchaseTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImplTest.deletePurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.PurchaseServiceImplTest.deletePurchaseTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImplTest.findPurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.PurchaseServiceImplTest.findPurchaseTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.PurchaseServiceImplTest@21505815], method [public void ro.estore.domain.service.impl.PurchaseServiceImplTest.findPurchaseTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@534180a2 testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@21505815, testMethod = findPurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImplTest.findPurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@534180a2 testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@21505815, testMethod = findPurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.domain.service.impl.PurchaseServiceImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@6c806c8b transactionManagerName = '', defaultRollback = true] for test class [ro.estore.domain.service.impl.PurchaseServiceImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 21, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@534180a2 testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@21505815, testMethod = findPurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.PurchaseServiceImplTest.findPurchaseTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [c7b97d9a-eb5e-4e9b-8345-afa75fd4ee87] at timestamp: 14689325594
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@75de6341]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@74170687] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@68f0f72c] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@534180a2 testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@21505815, testMethod = findPurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@68f0f72c] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@74170687] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.PurchaseServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@68f0f72c] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchase0_.purchase_id as purchase1_3_0_,
        purchase0_.product_id as product_3_3_0_,
        purchase0_.quantity as quantity2_3_0_,
        product1_.product_id as product_1_2_1_,
        product1_.brand as brand2_2_1_,
        product1_.description as descript3_2_1_,
        product1_.name as name4_2_1_,
        product1_.price as price5_2_1_,
        product1_.stock as stock6_2_1_ 
    from
        purchase purchase0_ 
    inner join
        product product1_ 
            on purchase0_.product_id=product1_.product_id 
    where
        purchase0_.purchase_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@3d96fa9e: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@3d96fa9e: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@3b545206]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_0_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_0_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_1_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_1_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_1_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_1_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_1_] : [INTEGER]) - [14]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@3b545206]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@3b545206]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@3d96fa9e: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@3d96fa9e: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Purchase#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 73ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 91ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.PurchaseServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.PurchaseServiceImplTest@21505815], method [public void ro.estore.domain.service.impl.PurchaseServiceImplTest.findPurchaseTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@534180a2 testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@21505815, testMethod = findPurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@12d5c30e]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@68f0f72c] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@74170687] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [c7b97d9a-eb5e-4e9b-8345-afa75fd4ee87]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@b887730]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@534180a2 testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@21505815, testMethod = findPurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@534180a2 testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@21505815, testMethod = findPurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.PurchaseServiceImplTest@26586b74]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@534180a2 testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@26586b74, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 22, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.PurchaseServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.PurchaseServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.PurchaseServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.PurchaseService ro.estore.domain.service.impl.PurchaseServiceImplTest.purchaseService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.PurchaseServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.PurchaseServiceImplTest@26586b74]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.PurchaseServiceImplTest@26586b74], method [public void ro.estore.domain.service.impl.PurchaseServiceImplTest.deletePurchaseTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@534180a2 testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@26586b74, testMethod = deletePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImplTest.deletePurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@534180a2 testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@26586b74, testMethod = deletePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 23, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@534180a2 testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@26586b74, testMethod = deletePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.PurchaseServiceImplTest.deletePurchaseTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [9ae62072-8446-42fa-94db-5371d307948f] at timestamp: 14689325595
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@439b15f2]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@3aa41da1] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@74fab04a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@534180a2 testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@26586b74, testMethod = deletePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@74fab04a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@3aa41da1] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.PurchaseServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@74fab04a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchase0_.purchase_id as purchase1_3_0_,
        purchase0_.product_id as product_3_3_0_,
        purchase0_.quantity as quantity2_3_0_,
        product1_.product_id as product_1_2_1_,
        product1_.brand as brand2_2_1_,
        product1_.description as descript3_2_1_,
        product1_.name as name4_2_1_,
        product1_.price as price5_2_1_,
        product1_.stock as stock6_2_1_ 
    from
        purchase purchase0_ 
    inner join
        product product1_ 
            on purchase0_.product_id=product1_.product_id 
    where
        purchase0_.purchase_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@3c83468e: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@3c83468e: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@272ce069]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_0_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_0_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_1_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_1_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_1_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_1_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_1_] : [INTEGER]) - [14]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@272ce069]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@272ce069]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@3c83468e: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@3c83468e: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Purchase#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 57ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 63ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.PurchaseServiceImpl.findById]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@74fab04a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@3aa41da1] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.PurchaseServiceImpl.remove]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.domain.service.impl.GenericServiceImpl.remove(DomainDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@74fab04a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@74fab04a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@74fab04a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Purchase#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object) took 11ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.domain.service.impl.GenericServiceImpl.remove(DomainDTO) took 18ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.PurchaseServiceImpl.remove]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@74fab04a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=1} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@3aa41da1] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.PurchaseServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@74fab04a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 7ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 12ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.PurchaseServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.PurchaseServiceImplTest@26586b74], method [public void ro.estore.domain.service.impl.PurchaseServiceImplTest.deletePurchaseTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@534180a2 testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@26586b74, testMethod = deletePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@7a583586]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=1} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@74fab04a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@3aa41da1] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [9ae62072-8446-42fa-94db-5371d307948f]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@3a26ec8d]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@534180a2 testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@26586b74, testMethod = deletePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@534180a2 testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@26586b74, testMethod = deletePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.PurchaseServiceImplTest@17143b3b]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@534180a2 testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@17143b3b, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 24, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.PurchaseServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.PurchaseServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.PurchaseServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.PurchaseService ro.estore.domain.service.impl.PurchaseServiceImplTest.purchaseService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseServiceImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.PurchaseServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.PurchaseServiceImplTest@17143b3b]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.PurchaseServiceImplTest@17143b3b], method [public void ro.estore.domain.service.impl.PurchaseServiceImplTest.updatePurchaseTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@534180a2 testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@17143b3b, testMethod = updatePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseServiceImplTest.updatePurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@534180a2 testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@17143b3b, testMethod = updatePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 25, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@534180a2 testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@17143b3b, testMethod = updatePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.PurchaseServiceImplTest.updatePurchaseTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [040a763c-87f2-4e75-b8cf-4444e8525d04] at timestamp: 14689325597
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@10f7918f]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@64d4f7c7] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@54e02f6a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@534180a2 testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@17143b3b, testMethod = updatePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@54e02f6a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@64d4f7c7] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.PurchaseServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@54e02f6a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchase0_.purchase_id as purchase1_3_0_,
        purchase0_.product_id as product_3_3_0_,
        purchase0_.quantity as quantity2_3_0_,
        product1_.product_id as product_1_2_1_,
        product1_.brand as brand2_2_1_,
        product1_.description as descript3_2_1_,
        product1_.name as name4_2_1_,
        product1_.price as price5_2_1_,
        product1_.stock as stock6_2_1_ 
    from
        purchase purchase0_ 
    inner join
        product product1_ 
            on purchase0_.product_id=product1_.product_id 
    where
        purchase0_.purchase_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@17f3eefb: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@17f3eefb: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@3ba46e63]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_0_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_0_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_1_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_1_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_1_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_1_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_1_] : [INTEGER]) - [14]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@3ba46e63]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@3ba46e63]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@17f3eefb: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@17f3eefb: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Purchase#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 53ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 59ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.PurchaseServiceImpl.findById]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@54e02f6a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@64d4f7c7] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.PurchaseServiceImpl.update]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(DomainDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@54e02f6a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 4ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@54e02f6a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultMergeEventListener - Merging detached instance
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object) took 8ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(DomainDTO) took 21ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.PurchaseServiceImpl.update]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@54e02f6a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@64d4f7c7] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.PurchaseServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@54e02f6a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 8ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.PurchaseServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.PurchaseServiceImplTest@17143b3b], method [public void ro.estore.domain.service.impl.PurchaseServiceImplTest.updatePurchaseTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@534180a2 testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@17143b3b, testMethod = updatePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@2bfb6b49]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@54e02f6a] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@64d4f7c7] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [040a763c-87f2-4e75-b8cf-4444e8525d04]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@1f346ad2]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@534180a2 testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@17143b3b, testMethod = updatePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@534180a2 testClass = PurchaseServiceImplTest, testInstance = ro.estore.domain.service.impl.PurchaseServiceImplTest@17143b3b, testMethod = updatePurchaseTest@PurchaseServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] TRACE context.TestContextManager - afterTestClass(): class [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@534180a2 testClass = PurchaseServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6cf0a747 testClass = PurchaseServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] TRACE support.ContextLoaderUtils - Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], classes=[class ro.estore.model.config.JpaHibernateTestConfig], loader=interface org.springframework.test.context.ContextLoader, inheritInitializers=true, locations=[], initializers=[], inheritLocations=true)] for declaring class [ro.estore.domain.service.impl.UserProfileServiceImplTest].
 [main] TRACE support.ContextLoaderUtils - Resolved context configuration attributes: [ContextConfigurationAttributes@1a1f5f71 declaringClass = 'ro.estore.domain.service.impl.UserProfileServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@1a1f5f71 declaringClass = 'ro.estore.domain.service.impl.UserProfileServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] TRACE support.AbstractTestContextBootstrapper - Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@1a1f5f71 declaringClass = 'ro.estore.domain.service.impl.UserProfileServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@1a1f5f71 declaringClass = 'ro.estore.domain.service.impl.UserProfileServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] TRACE support.SpringFactoriesLoader - Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]
 [main] TRACE support.ApplicationContextInitializerUtils - Processing context initializers for context configuration attributes [ContextConfigurationAttributes@1a1f5f71 declaringClass = 'ro.estore.domain.service.impl.UserProfileServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.domain.service.impl.UserProfileServiceImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7f5538a1, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@72fd8a3c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1f9f381d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@34780cd9, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@623ebac7]
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7f5538a1
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@72fd8a3c
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@1f9f381d
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@34780cd9
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@623ebac7
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] TRACE context.TestContextManager - beforeTestClass(): class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.UserProfileServiceImplTest@6edf29c1]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@6edf29c1, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 26, missCount = 1]
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.UserProfileServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.UserProfileServiceImplTest' to bean named 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserProfileService ro.estore.domain.service.impl.UserProfileServiceImplTest.userProfileService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileServiceImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.UserProfileServiceImplTest' to bean named 'userProfileServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.UserProfileConverter ro.estore.domain.service.impl.UserProfileServiceImplTest.userProfileConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileConverter'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.UserProfileServiceImplTest' to bean named 'userProfileConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.UserProfileServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.UserProfileServiceImplTest' to bean named 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImplTest.setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserProfileServiceImplTest@6edf29c1]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserProfileServiceImplTest.setUp()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImplTest.createUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserProfileServiceImplTest.createUserProfileTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImplTest.deleteUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserProfileServiceImplTest.deleteUserProfileTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImplTest.findUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserProfileServiceImplTest.findUserProfileTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImplTest.updateUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserProfileServiceImplTest.updateUserProfileTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.UserProfileServiceImplTest@6edf29c1], method [public void ro.estore.domain.service.impl.UserProfileServiceImplTest.findUserProfileTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@6edf29c1, testMethod = findUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImplTest.findUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@6edf29c1, testMethod = findUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@6c806c8b transactionManagerName = '', defaultRollback = true] for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 27, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@6edf29c1, testMethod = findUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserProfileServiceImplTest.findUserProfileTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [a13e2df8-d944-45de-af89-ed4b9b15be2c] at timestamp: 14689325600
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3240b2a4]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@58434b19] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@7d3fb0ef] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@6edf29c1, testMethod = findUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@7d3fb0ef] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@58434b19] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@7d3fb0ef] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        userprofil0_.user_profile_id as user_pro1_5_0_,
        userprofil0_.email_address as email_ad2_5_0_,
        userprofil0_.name as name3_5_0_,
        userprofil0_.phone_number as phone_nu4_5_0_,
        userprofil0_.surname as surname5_5_0_ 
    from
        user_profile userprofil0_ 
    where
        userprofil0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@7dbe2ebf: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@7dbe2ebf: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@4adc663e]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_0_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_0_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_0_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_0_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@4adc663e]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@4adc663e]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@7dbe2ebf: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@7dbe2ebf: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.UserProfile#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 79ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        addresses0_.user_profile_id as user_pro7_0_0_,
        addresses0_.address_id as address_1_0_0_,
        addresses0_.address_id as address_1_0_1_,
        addresses0_.address_line_1 as address_2_0_1_,
        addresses0_.address_line_2 as address_3_0_1_,
        addresses0_.address_name as address_4_0_1_,
        addresses0_.city as city5_0_1_,
        addresses0_.postcode as postcode6_0_1_ 
    from
        address addresses0_ 
    where
        addresses0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@4fa9ab6: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@4fa9ab6: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@2d3ef181]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@2d3ef181]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_1_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_1_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_1_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_1_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_1_] : [VARCHAR]) - [00000]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro7_0_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@2d3ef181, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@6e4c0d8c]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@2d3ef181, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@6e4c0d8c]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@2d3ef181]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@2d3ef181]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@4fa9ab6: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@4fa9ab6: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 68ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 162ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.UserProfileServiceImplTest@6edf29c1], method [public void ro.estore.domain.service.impl.UserProfileServiceImplTest.findUserProfileTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@6edf29c1, testMethod = findUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@3e3315d9]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@7d3fb0ef] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@58434b19] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [a13e2df8-d944-45de-af89-ed4b9b15be2c]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@64db4967]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@6edf29c1, testMethod = findUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@6edf29c1, testMethod = findUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.UserProfileServiceImplTest@74e6094b]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@74e6094b, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 28, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.UserProfileServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserProfileService ro.estore.domain.service.impl.UserProfileServiceImplTest.userProfileService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.UserProfileConverter ro.estore.domain.service.impl.UserProfileServiceImplTest.userProfileConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.UserProfileServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserProfileServiceImplTest@74e6094b]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.UserProfileServiceImplTest@74e6094b], method [public void ro.estore.domain.service.impl.UserProfileServiceImplTest.updateUserProfileTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@74e6094b, testMethod = updateUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImplTest.updateUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@74e6094b, testMethod = updateUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 29, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@74e6094b, testMethod = updateUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserProfileServiceImplTest.updateUserProfileTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [106f2107-f7fe-4b91-99c4-fb6774c1196a] at timestamp: 14689325602
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@26350ea2]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@1e9469b8] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@5a08efdc] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@74e6094b, testMethod = updateUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5a08efdc] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@1e9469b8] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5a08efdc] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        userprofil0_.user_profile_id as user_pro1_5_0_,
        userprofil0_.email_address as email_ad2_5_0_,
        userprofil0_.name as name3_5_0_,
        userprofil0_.phone_number as phone_nu4_5_0_,
        userprofil0_.surname as surname5_5_0_ 
    from
        user_profile userprofil0_ 
    where
        userprofil0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@57272109: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@57272109: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@59696551]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_0_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_0_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_0_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_0_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@59696551]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@59696551]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@57272109: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@57272109: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.UserProfile#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 18ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        addresses0_.user_profile_id as user_pro7_0_0_,
        addresses0_.address_id as address_1_0_0_,
        addresses0_.address_id as address_1_0_1_,
        addresses0_.address_line_1 as address_2_0_1_,
        addresses0_.address_line_2 as address_3_0_1_,
        addresses0_.address_name as address_4_0_1_,
        addresses0_.city as city5_0_1_,
        addresses0_.postcode as postcode6_0_1_ 
    from
        address addresses0_ 
    where
        addresses0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@17273273: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@17273273: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@5f69e2b]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@5f69e2b]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_1_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_1_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_1_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_1_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_1_] : [VARCHAR]) - [00000]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro7_0_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@5f69e2b, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@43f1bb92]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@5f69e2b, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@43f1bb92]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@5f69e2b]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@5f69e2b]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@17273273: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@17273273: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 44ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 63ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.findById]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5a08efdc] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@1e9469b8] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.update]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(DomainDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5a08efdc] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfile ro.estore.domain.converter.UserProfileConverter.toEntity(UserProfileDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfile ro.estore.domain.converter.UserProfileConverter.toEntity(UserProfileDTO) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5a08efdc] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultMergeEventListener - Merging detached instance
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.Cascade - Processing cascade ACTION_MERGE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Cascade ACTION_MERGE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE spi.CascadingActions$6 - Cascading to merge: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultMergeEventListener - Merging detached instance
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.Cascade - Done cascade ACTION_MERGE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done processing cascade ACTION_MERGE for: ro.estore.model.entitiy.UserProfile
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object) took 6ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(DomainDTO) took 13ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.update]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5a08efdc] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@1e9469b8] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5a08efdc] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 4ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.UserProfileServiceImplTest@74e6094b], method [public void ro.estore.domain.service.impl.UserProfileServiceImplTest.updateUserProfileTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@74e6094b, testMethod = updateUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@7544ac86]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@5a08efdc] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@1e9469b8] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [106f2107-f7fe-4b91-99c4-fb6774c1196a]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@3b27b497]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@74e6094b, testMethod = updateUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@74e6094b, testMethod = updateUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.UserProfileServiceImplTest@b1534d3]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@b1534d3, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 30, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.UserProfileServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserProfileService ro.estore.domain.service.impl.UserProfileServiceImplTest.userProfileService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.UserProfileConverter ro.estore.domain.service.impl.UserProfileServiceImplTest.userProfileConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.UserProfileServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserProfileServiceImplTest@b1534d3]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.UserProfileServiceImplTest@b1534d3], method [public void ro.estore.domain.service.impl.UserProfileServiceImplTest.deleteUserProfileTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@b1534d3, testMethod = deleteUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImplTest.deleteUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@b1534d3, testMethod = deleteUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 31, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@b1534d3, testMethod = deleteUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserProfileServiceImplTest.deleteUserProfileTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [585b1a29-01bf-4efe-a064-e5666b8e49c7] at timestamp: 14689325603
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7b122839]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@3743539f] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@d277579] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@b1534d3, testMethod = deleteUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@d277579] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@3743539f] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@d277579] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        userprofil0_.user_profile_id as user_pro1_5_0_,
        userprofil0_.email_address as email_ad2_5_0_,
        userprofil0_.name as name3_5_0_,
        userprofil0_.phone_number as phone_nu4_5_0_,
        userprofil0_.surname as surname5_5_0_ 
    from
        user_profile userprofil0_ 
    where
        userprofil0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@5db6b845: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@5db6b845: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@378f002a]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_0_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_0_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_0_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_0_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@378f002a]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@378f002a]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@5db6b845: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@5db6b845: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.UserProfile#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 28ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        addresses0_.user_profile_id as user_pro7_0_0_,
        addresses0_.address_id as address_1_0_0_,
        addresses0_.address_id as address_1_0_1_,
        addresses0_.address_line_1 as address_2_0_1_,
        addresses0_.address_line_2 as address_3_0_1_,
        addresses0_.address_name as address_4_0_1_,
        addresses0_.city as city5_0_1_,
        addresses0_.postcode as postcode6_0_1_ 
    from
        address addresses0_ 
    where
        addresses0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@445bb139: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@445bb139: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@b9a77c8]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@b9a77c8]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_1_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_1_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_1_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_1_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_1_] : [VARCHAR]) - [00000]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro7_0_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@b9a77c8, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@6cd3ad8a]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@b9a77c8, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@6cd3ad8a]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@b9a77c8]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@b9a77c8]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@445bb139: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@445bb139: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 49ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 79ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.findById]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@d277579] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@3743539f] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.remove]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.domain.service.impl.GenericServiceImpl.remove(DomainDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfile ro.estore.domain.converter.UserProfileConverter.toEntity(UserProfileDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfile ro.estore.domain.converter.UserProfileConverter.toEntity(UserProfileDTO) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@d277579] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@d277579] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@d277579] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Cascade ACTION_DELETE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE spi.CascadingActions$1 - Cascading to delete: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.Cascade - Done cascade ACTION_DELETE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Deleting orphans for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done deleting orphans for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object) took 10ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.domain.service.impl.GenericServiceImpl.remove(DomainDTO) took 14ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.remove]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@d277579] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=2} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@3743539f] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@d277579] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 3ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.UserProfileServiceImplTest@b1534d3], method [public void ro.estore.domain.service.impl.UserProfileServiceImplTest.deleteUserProfileTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@b1534d3, testMethod = deleteUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@5f254608]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=2} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@d277579] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@3743539f] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [585b1a29-01bf-4efe-a064-e5666b8e49c7]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@2eeb0f9b]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@b1534d3, testMethod = deleteUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@b1534d3, testMethod = deleteUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.UserProfileServiceImplTest@1b1c538d]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@1b1c538d, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 32, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.UserProfileServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserProfileService ro.estore.domain.service.impl.UserProfileServiceImplTest.userProfileService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.domain.converter.UserProfileConverter ro.estore.domain.service.impl.UserProfileServiceImplTest.userProfileConverter
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileConverter'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.UserProfileServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserProfileServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserProfileServiceImplTest@1b1c538d]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.UserProfileServiceImplTest@1b1c538d], method [public void ro.estore.domain.service.impl.UserProfileServiceImplTest.createUserProfileTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@1b1c538d, testMethod = createUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileServiceImplTest.createUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@1b1c538d, testMethod = createUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 33, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@1b1c538d, testMethod = createUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserProfileServiceImplTest.createUserProfileTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [1b446e73-ae06-4537-a1de-1c82ad80d294] at timestamp: 14689325605
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6cbd0674]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@55d58825] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@19a64eae] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@1b1c538d, testMethod = createUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfile ro.estore.util.TestUtils.createUserProfile(String)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfile ro.estore.util.TestUtils.createUserProfile(String) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 2ms to execute.
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@19a64eae] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@55d58825] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.create]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.create(DomainDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfile ro.estore.domain.converter.UserProfileConverter.toEntity(UserProfileDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfile ro.estore.domain.converter.UserProfileConverter.toEntity(UserProfileDTO) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@19a64eae] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.UserProfile#<null>]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.WrapVisitor - Wrapped collection in role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.UserProfile] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.UserProfile#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.UserProfile#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.UserProfile (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        user_profile
        (email_address, name, phone_number, surname) 
    values
        (?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@7fb66650: insert into user_profile (email_address, name, phone_number, surname) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.UserProfile#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [ceva@email.com_1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [name_1]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [0123456789_1]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [VARCHAR] - [surname_1]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 6
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@1a96d94c]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@1a96d94c]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@7fb66650: insert into user_profile (email_address, name, phone_number, surname) values ('ceva@email.com_1', 'name_1', '0123456789_1', 'surname_1')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@7fb66650: insert into user_profile (email_address, name, phone_number, surname) values ('ceva@email.com_1', 'name_1', '0123456789_1', 'surname_1')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Address
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Address] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Address (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        address
        (address_line_1, address_line_2, address_name, city, postcode) 
    values
        (?, ?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@46aa712c: insert into address (address_line_1, address_line_2, address_name, city, postcode) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [addr line 1_1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [addr line 2_1]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [ceva@email.com_1]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [VARCHAR] - [city_1]
 [main] TRACE sql.BasicBinder - binding parameter [5] as [VARCHAR] - [postcode_1]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 12
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@6ada9c0c]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@6ada9c0c]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@46aa712c: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1', 'addr line 2_1', 'ceva@email.com_1', 'city_1', 'postcode_1')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@46aa712c: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1', 'addr line 2_1', 'ceva@email.com_1', 'city_1', 'postcode_1')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Address
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Address] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Address (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        address
        (address_line_1, address_line_2, address_name, city, postcode) 
    values
        (?, ?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@7b4a0aef: insert into address (address_line_1, address_line_2, address_name, city, postcode) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [addr line 1_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [addr line 2_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [ceva@email.com_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [VARCHAR] - [city_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [5] as [VARCHAR] - [postcode_1_2]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 13
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@45cec376]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@45cec376]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@7b4a0aef: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1_2', 'addr line 2_1_2', 'ceva@email.com_1_2', 'city_1_2', 'postcode_1_2')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@7b4a0aef: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1_2', 'addr line 2_1_2', 'ceva@email.com_1_2', 'city_1_2', 'postcode_1_2')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Done cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object) took 74ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.create(DomainDTO) took 81ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserProfileServiceImpl.create]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.UserProfileServiceImplTest@1b1c538d], method [public void ro.estore.domain.service.impl.UserProfileServiceImplTest.createUserProfileTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@1b1c538d, testMethod = createUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@298f0a0b]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Address#13], EntityKey[ro.estore.model.entitiy.Address#12], EntityKey[ro.estore.model.entitiy.UserProfile#6]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@19a64eae] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@55d58825] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [1b446e73-ae06-4537-a1de-1c82ad80d294]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@2b960a7]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@1b1c538d, testMethod = createUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = ro.estore.domain.service.impl.UserProfileServiceImplTest@1b1c538d, testMethod = createUserProfileTest@UserProfileServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] TRACE context.TestContextManager - afterTestClass(): class [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@7c8c70d6 testClass = UserProfileServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ab5f08a testClass = UserProfileServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.domain.service.impl.UserServiceImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] TRACE support.ContextLoaderUtils - Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], classes=[class ro.estore.model.config.JpaHibernateTestConfig], loader=interface org.springframework.test.context.ContextLoader, inheritInitializers=true, locations=[], initializers=[], inheritLocations=true)] for declaring class [ro.estore.domain.service.impl.UserServiceImplTest].
 [main] TRACE support.ContextLoaderUtils - Resolved context configuration attributes: [ContextConfigurationAttributes@60e9c3a5 declaringClass = 'ro.estore.domain.service.impl.UserServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@60e9c3a5 declaringClass = 'ro.estore.domain.service.impl.UserServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] TRACE support.AbstractTestContextBootstrapper - Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@60e9c3a5 declaringClass = 'ro.estore.domain.service.impl.UserServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@60e9c3a5 declaringClass = 'ro.estore.domain.service.impl.UserServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] TRACE support.SpringFactoriesLoader - Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]
 [main] TRACE support.ApplicationContextInitializerUtils - Processing context initializers for context configuration attributes [ContextConfigurationAttributes@60e9c3a5 declaringClass = 'ro.estore.domain.service.impl.UserServiceImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.domain.service.impl.UserServiceImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@57f9b467, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6d5c2745, org.springframework.test.context.support.DirtiesContextTestExecutionListener@44b29496, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1947596f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3078cac]
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@57f9b467
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6d5c2745
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@44b29496
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@1947596f
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3078cac
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] TRACE context.TestContextManager - beforeTestClass(): class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.UserServiceImplTest@7c847072]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@7c847072, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 34, missCount = 1]
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.UserServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.UserServiceImplTest' to bean named 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserService ro.estore.domain.service.impl.UserServiceImplTest.userService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userServiceImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.UserServiceImplTest' to bean named 'userServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.UserServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.UserServiceImplTest' to bean named 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.UserServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.domain.service.impl.UserServiceImplTest' to bean named 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserServiceImplTest@7c847072]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserServiceImplTest.setUp()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.findUserByUsernameTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.findUserByUsernameFailTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameFailTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.findUserByUsernameAndPasswordFailTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameAndPasswordFailTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.saveAndFindUserByUsernameAndPasswordTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserServiceImplTest.saveAndFindUserByUsernameAndPasswordTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.updateUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserServiceImplTest.updateUserTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.findUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserServiceImplTest.findUserTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.deleteUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserServiceImplTest.deleteUserTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.createUser' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.domain.service.impl.UserServiceImplTest.createUser()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@7c847072], method [public void ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameAndPasswordFailTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@7c847072, testMethod = findUserByUsernameAndPasswordFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.findUserByUsernameAndPasswordFailTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@7c847072, testMethod = findUserByUsernameAndPasswordFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@6c806c8b transactionManagerName = '', defaultRollback = true] for test class [ro.estore.domain.service.impl.UserServiceImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 35, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@7c847072, testMethod = findUserByUsernameAndPasswordFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameAndPasswordFailTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [6d0429f0-1e6c-412a-837e-f9f07620ec51] at timestamp: 14689325607
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4cc36c19]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@5a3a1bf9] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@2100d047] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@7c847072, testMethod = findUserByUsernameAndPasswordFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@2100d047] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@5a3a1bf9] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserServiceImpl.findByUsernameAndPassword]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.service.impl.UserServiceImpl.findByUsernameAndPassword(String,String)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsernameAndPassword(String,String)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@2100d047] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG internal.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 )
 [main] TRACE spi.QueryPlanCache - Unable to locate HQL query plan in cache; generating (select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 ))
 [main] DEBUG ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from ro.estore.model.entitiy.User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 )
 [main] DEBUG ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'ro'
    |  |     |  |  |  |  \-[IDENT] Node: 'estore'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'entitiy'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'username'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'password'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

 [main] DEBUG ast.ErrorCounter - throwQueryException() : no errors
 [main] DEBUG antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
 [main] DEBUG tree.FromElement - FromClause{level=1} : ro.estore.model.entitiy.User (generatedAlias0) -> user0_
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
 [main] TRACE tree.FromElement - Handling property dereference [ro.estore.model.entitiy.User (generatedAlias0) -> username (class)]
 [main] DEBUG tree.DotNode - getDataType() : username -> org.hibernate.type.StringType@788fcafb
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0.username -> user0_.username
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
 [main] TRACE tree.FromElement - Handling property dereference [ro.estore.model.entitiy.User (generatedAlias0) -> password (class)]
 [main] DEBUG tree.DotNode - getDataType() : password -> org.hibernate.type.StringType@788fcafb
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0.password -> user0_.password
 [main] DEBUG antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
 [main] DEBUG ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} user user0_ ) ( where ( and ( = ( user0_.username user0_.user_id username ) ? ) ( = ( user0_.password user0_.user_id password ) ? ) ) ) )
 [main] DEBUG util.JoinProcessor - Using FROM fragment [user user0_]
 [main] DEBUG antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
 [main] DEBUG ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_4_' {alias=generatedAlias0, className=ro.estore.model.entitiy.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=ro.estore.model.entitiy.User}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=generatedAlias0.username,tableAlias=user0_,className=ro.estore.model.entitiy.User,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=generatedAlias0, className=ro.estore.model.entitiy.User, tableAlias=user0_}
          |  |  \-[IDENT] IdentNode: 'username' {originalText=username}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@788fcafb}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.password' {propertyName=password,dereferenceType=PRIMITIVE,getPropertyPath=password,path=generatedAlias0.password,tableAlias=user0_,className=ro.estore.model.entitiy.User,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=generatedAlias0, className=ro.estore.model.entitiy.User, tableAlias=user0_}
             |  \-[IDENT] IdentNode: 'password' {originalText=password}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@788fcafb}

 [main] DEBUG ast.ErrorCounter - throwQueryException() : no errors
 [main] DEBUG ast.QueryTranslatorImpl - HQL: select generatedAlias0 from ro.estore.model.entitiy.User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 )
 [main] DEBUG ast.QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=? and user0_.password=?
 [main] DEBUG ast.ErrorCounter - throwQueryException() : no errors
 [main] TRACE spi.HQLQueryPlan - HQL param location recognition took 112.473 nanoseconds (select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 ))
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 ))
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@2100d047] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 ))
 [main] TRACE spi.HQLQueryPlan - Find: select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 )
 [main] TRACE spi.QueryParameters - Named parameters: {param0=user0_0, param1=pass0_0}
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_,
        user0_.password as password2_4_,
        user0_.user_profile_id as user_pro4_4_,
        user0_.username as username3_4_ 
    from
        user user0_ 
    where
        user0_.username=? 
        and user0_.password=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@30ca0779: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED ** and user0_.password=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@30ca0779: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED ** and user0_.password=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [user0_0]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [pass0_0]
 [main] TRACE loader.Loader - Bound [3] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@58740366]
 [main] TRACE loader.Loader - Processing result set
 [main] TRACE loader.Loader - Done processing result set (0 rows)
 [main] TRACE loader.Loader - Total objects hydrated: 0
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@30ca0779: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0_0' and user0_.password='pass0_0']
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@58740366]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@30ca0779: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0_0' and user0_.password='pass0_0']
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] ERROR impl.UserRepositoryJpaImpl - No user was found (Index: 0, Size: 0)
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsernameAndPassword(UserRepositoryJpaImpl.java:54)
	at ro.estore.model.repository.impl.UserRepositoryJpaImpl$$FastClassBySpringCGLIB$$9dbde216.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at ro.estore.aspect.LoggingAspect.logMethodExecutionTime(LoggingAspect.java:46)
	at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at ro.estore.model.repository.impl.UserRepositoryJpaImpl$$EnhancerBySpringCGLIB$$e58d61f9.findByUsernameAndPassword(<generated>)
	at ro.estore.domain.service.impl.UserServiceImpl.findByUsernameAndPassword(UserServiceImpl.java:55)
	at ro.estore.domain.service.impl.UserServiceImpl$$FastClassBySpringCGLIB$$4208433e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at ro.estore.aspect.LoggingAspect.logMethodExecutionTime(LoggingAspect.java:46)
	at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at ro.estore.domain.service.impl.UserServiceImpl$$EnhancerBySpringCGLIB$$d7d073af.findByUsernameAndPassword(<generated>)
	at ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameAndPasswordFailTest(UserServiceImplTest.java:116)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:252)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:94)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:191)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsernameAndPassword(String,String) took 84ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User) took 13ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.service.impl.UserServiceImpl.findByUsernameAndPassword(String,String) took 110ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserServiceImpl.findByUsernameAndPassword]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@7c847072], method [public void ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameAndPasswordFailTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@7c847072, testMethod = findUserByUsernameAndPasswordFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@2bc426f0]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@2100d047] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@5a3a1bf9] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [6d0429f0-1e6c-412a-837e-f9f07620ec51]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@4bd51d3e]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@7c847072, testMethod = findUserByUsernameAndPasswordFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@7c847072, testMethod = findUserByUsernameAndPasswordFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.UserServiceImplTest@33425811]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@33425811, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 36, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.UserServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserService ro.estore.domain.service.impl.UserServiceImplTest.userService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.UserServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.UserServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserServiceImplTest@33425811]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@33425811], method [public void ro.estore.domain.service.impl.UserServiceImplTest.findUserTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@33425811, testMethod = findUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.findUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@33425811, testMethod = findUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 37, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@33425811, testMethod = findUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserServiceImplTest.findUserTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [07ceb498-e7dc-4ccf-b1c0-b2f2e049c228] at timestamp: 14689325608
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4cb2918c]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@72e295cc] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@c2584d3] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@33425811, testMethod = findUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@c2584d3] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@72e295cc] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@c2584d3] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.User#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.password as password2_4_0_,
        user0_.user_profile_id as user_pro4_4_0_,
        user0_.username as username3_4_0_,
        userprofil1_.user_profile_id as user_pro1_5_1_,
        userprofil1_.email_address as email_ad2_5_1_,
        userprofil1_.name as name3_5_1_,
        userprofil1_.phone_number as phone_nu4_5_1_,
        userprofil1_.surname as surname5_5_1_ 
    from
        user user0_ 
    inner join
        user_profile userprofil1_ 
            on user0_.user_profile_id=userprofil1_.user_profile_id 
    where
        user0_.user_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@6fa0450e: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@6fa0450e: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@37468787]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro1_5_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE sql.BasicExtractor - extracted value ([password2_4_0_] : [VARCHAR]) - [pass0]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro4_4_0_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([username3_4_0_] : [VARCHAR]) - [user0]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_1_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_1_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_1_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_1_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@37468787]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@37468787]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@6fa0450e: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@6fa0450e: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.User#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 27ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User)
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.User.orders#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        orders0_.user_id as user_id3_1_0_,
        orders0_.order_id as order_id1_1_0_,
        orders0_.order_id as order_id1_1_1_,
        orders0_.address_id as address_2_1_1_,
        address1_.address_id as address_1_0_2_,
        address1_.address_line_1 as address_2_0_2_,
        address1_.address_line_2 as address_3_0_2_,
        address1_.address_name as address_4_0_2_,
        address1_.city as city5_0_2_,
        address1_.postcode as postcode6_0_2_ 
    from
        `
    order` orders0_ inner join
        address address1_ 
            on orders0_.address_id=address1_.address_id 
    where
        orders0_.user_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@2fcd7d3f: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@2fcd7d3f: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@27e7c77f]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@27e7c77f]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.User.orders#1]]
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([order_id1_1_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_1_1_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_2_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_2_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_2_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_2_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_2_] : [VARCHAR]) - [00000]
 [main] TRACE sql.BasicExtractor - extracted value ([user_id3_1_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.User.orders#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.User.orders#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.User.orders#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([order_id1_1_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] not located in load context
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.User.orders#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.User.orders#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@27e7c77f, coll=[ro.estore.model.entitiy.User.orders#1]>@37c36608]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@27e7c77f, coll=[ro.estore.model.entitiy.User.orders#1]>@37c36608]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.User.orders#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@27e7c77f]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@27e7c77f]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@2fcd7d3f: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@2fcd7d3f: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchases0_.order_id as order_id4_3_0_,
        purchases0_.purchase_id as purchase1_3_0_,
        purchases0_.purchase_id as purchase1_3_1_,
        purchases0_.product_id as product_3_3_1_,
        purchases0_.quantity as quantity2_3_1_,
        product1_.product_id as product_1_2_2_,
        product1_.brand as brand2_2_2_,
        product1_.description as descript3_2_2_,
        product1_.name as name4_2_2_,
        product1_.price as price5_2_2_,
        product1_.stock as stock6_2_2_ 
    from
        purchase purchases0_ 
    inner join
        product product1_ 
            on purchases0_.product_id=product1_.product_id 
    where
        purchases0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@5d497a91: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@5d497a91: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@617389a]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@617389a]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] not located in load context
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_1_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_2_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_2_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_2_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_2_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_2_] : [INTEGER]) - [14]
 [main] TRACE sql.BasicExtractor - extracted value ([order_id4_3_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@617389a, coll=[ro.estore.model.entitiy.Order.purchases#1]>@265bd546]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@617389a, coll=[ro.estore.model.entitiy.Order.purchases#1]>@265bd546]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@617389a]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@617389a]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@5d497a91: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@5d497a91: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 49ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        addresses0_.user_profile_id as user_pro7_0_0_,
        addresses0_.address_id as address_1_0_0_,
        addresses0_.address_id as address_1_0_1_,
        addresses0_.address_line_1 as address_2_0_1_,
        addresses0_.address_line_2 as address_3_0_1_,
        addresses0_.address_name as address_4_0_1_,
        addresses0_.city as city5_0_1_,
        addresses0_.postcode as postcode6_0_1_ 
    from
        address addresses0_ 
    where
        addresses0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@1937eaff: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@1937eaff: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@7e0bc8a3]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@7e0bc8a3]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] not located in load context
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro7_0_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 0
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@7e0bc8a3, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@4b0f2299]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@7e0bc8a3, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@4b0f2299]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@7e0bc8a3]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@7e0bc8a3]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@1937eaff: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@1937eaff: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 49ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User) took 141ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 171ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@33425811], method [public void ro.estore.domain.service.impl.UserServiceImplTest.findUserTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@33425811, testMethod = findUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@33063f5b]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.User#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1], CollectionKey[ro.estore.model.entitiy.User.orders#1], CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@c2584d3] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@72e295cc] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [07ceb498-e7dc-4ccf-b1c0-b2f2e049c228]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@15405bd6]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@33425811, testMethod = findUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@33425811, testMethod = findUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.UserServiceImplTest@352ed70d]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@352ed70d, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 38, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.UserServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserService ro.estore.domain.service.impl.UserServiceImplTest.userService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.UserServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.UserServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserServiceImplTest@352ed70d]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@352ed70d], method [public void ro.estore.domain.service.impl.UserServiceImplTest.saveAndFindUserByUsernameAndPasswordTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@352ed70d, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.saveAndFindUserByUsernameAndPasswordTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@352ed70d, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 39, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@352ed70d, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserServiceImplTest.saveAndFindUserByUsernameAndPasswordTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [88fdf737-a55a-407b-b4a3-faf69999cd94] at timestamp: 14689325611
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@512575e9]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@6f1a16fe] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@2373ad99] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@352ed70d, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@2373ad99] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@6f1a16fe] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserServiceImpl.findByUsernameAndPassword]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.service.impl.UserServiceImpl.findByUsernameAndPassword(String,String)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsernameAndPassword(String,String)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@2373ad99] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG internal.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 )
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 ))
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 ))
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@2373ad99] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 ))
 [main] TRACE spi.HQLQueryPlan - Find: select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 )
 [main] TRACE spi.QueryParameters - Named parameters: {param0=user0, param1=pass0}
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_,
        user0_.password as password2_4_,
        user0_.user_profile_id as user_pro4_4_,
        user0_.username as username3_4_ 
    from
        user user0_ 
    where
        user0_.username=? 
        and user0_.password=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@4993febc: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED ** and user0_.password=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@4993febc: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED ** and user0_.password=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [user0]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [pass0]
 [main] TRACE loader.Loader - Bound [3] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@7601bc96]
 [main] TRACE loader.Loader - Processing result set
 [main] DEBUG logging.DelegatingBasicLogger - Result set row: 0
 [main] TRACE sql.BasicExtractor - extracted value ([user_id1_4_] : [BIGINT]) - [1]
 [main] DEBUG loader.Loader - Result row: EntityKey[ro.estore.model.entitiy.User#1]
 [main] TRACE loader.Loader - Initializing object from ResultSet: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE sql.BasicExtractor - extracted value ([password2_4_] : [VARCHAR]) - [pass0]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro4_4_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([username3_4_] : [VARCHAR]) - [user0]
 [main] TRACE loader.Loader - Done processing result set (1 rows)
 [main] TRACE loader.Loader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        userprofil0_.user_profile_id as user_pro1_5_0_,
        userprofil0_.email_address as email_ad2_5_0_,
        userprofil0_.name as name3_5_0_,
        userprofil0_.phone_number as phone_nu4_5_0_,
        userprofil0_.surname as surname5_5_0_ 
    from
        user_profile userprofil0_ 
    where
        userprofil0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@3722c145: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@3722c145: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@4cbc2e3b]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_0_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_0_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_0_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_0_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@4cbc2e3b]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@4cbc2e3b]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@3722c145: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@3722c145: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.UserProfile#1
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@4993febc: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0' and user0_.password='pass0']
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@7601bc96]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@4993febc: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0' and user0_.password='pass0']
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsernameAndPassword(String,String) took 51ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User)
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.User.orders#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        orders0_.user_id as user_id3_1_0_,
        orders0_.order_id as order_id1_1_0_,
        orders0_.order_id as order_id1_1_1_,
        orders0_.address_id as address_2_1_1_,
        address1_.address_id as address_1_0_2_,
        address1_.address_line_1 as address_2_0_2_,
        address1_.address_line_2 as address_3_0_2_,
        address1_.address_name as address_4_0_2_,
        address1_.city as city5_0_2_,
        address1_.postcode as postcode6_0_2_ 
    from
        `
    order` orders0_ inner join
        address address1_ 
            on orders0_.address_id=address1_.address_id 
    where
        orders0_.user_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@57562473: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@57562473: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@7a360554]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@7a360554]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.User.orders#1]]
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([order_id1_1_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_1_1_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_2_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_2_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_2_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_2_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_2_] : [VARCHAR]) - [00000]
 [main] TRACE sql.BasicExtractor - extracted value ([user_id3_1_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.User.orders#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.User.orders#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.User.orders#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([order_id1_1_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] not located in load context
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.User.orders#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.User.orders#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@7a360554, coll=[ro.estore.model.entitiy.User.orders#1]>@67064bdc]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@7a360554, coll=[ro.estore.model.entitiy.User.orders#1]>@67064bdc]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.User.orders#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@7a360554]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@7a360554]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@57562473: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@57562473: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchases0_.order_id as order_id4_3_0_,
        purchases0_.purchase_id as purchase1_3_0_,
        purchases0_.purchase_id as purchase1_3_1_,
        purchases0_.product_id as product_3_3_1_,
        purchases0_.quantity as quantity2_3_1_,
        product1_.product_id as product_1_2_2_,
        product1_.brand as brand2_2_2_,
        product1_.description as descript3_2_2_,
        product1_.name as name4_2_2_,
        product1_.price as price5_2_2_,
        product1_.stock as stock6_2_2_ 
    from
        purchase purchases0_ 
    inner join
        product product1_ 
            on purchases0_.product_id=product1_.product_id 
    where
        purchases0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@4a7fd0c9: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@4a7fd0c9: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@18578491]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@18578491]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] not located in load context
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_1_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_2_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_2_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_2_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_2_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_2_] : [INTEGER]) - [14]
 [main] TRACE sql.BasicExtractor - extracted value ([order_id4_3_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@18578491, coll=[ro.estore.model.entitiy.Order.purchases#1]>@53d13cd4]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@18578491, coll=[ro.estore.model.entitiy.Order.purchases#1]>@53d13cd4]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@18578491]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@18578491]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@4a7fd0c9: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@4a7fd0c9: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 35ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        addresses0_.user_profile_id as user_pro7_0_0_,
        addresses0_.address_id as address_1_0_0_,
        addresses0_.address_id as address_1_0_1_,
        addresses0_.address_line_1 as address_2_0_1_,
        addresses0_.address_line_2 as address_3_0_1_,
        addresses0_.address_name as address_4_0_1_,
        addresses0_.city as city5_0_1_,
        addresses0_.postcode as postcode6_0_1_ 
    from
        address addresses0_ 
    where
        addresses0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@77865933: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@77865933: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@480ad82c]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@480ad82c]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] not located in load context
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro7_0_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 0
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@480ad82c, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@4d18b73a]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@480ad82c, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@4d18b73a]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@480ad82c]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@480ad82c]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@77865933: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@77865933: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 25ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User) took 101ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.service.impl.UserServiceImpl.findByUsernameAndPassword(String,String) took 154ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserServiceImpl.findByUsernameAndPassword]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@352ed70d], method [public void ro.estore.domain.service.impl.UserServiceImplTest.saveAndFindUserByUsernameAndPasswordTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@352ed70d, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@177515d1]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.User#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1], CollectionKey[ro.estore.model.entitiy.User.orders#1], CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@2373ad99] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@6f1a16fe] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [88fdf737-a55a-407b-b4a3-faf69999cd94]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@52ff99cd]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@352ed70d, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@352ed70d, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.UserServiceImplTest@4c2af006]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@4c2af006, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 40, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.UserServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserService ro.estore.domain.service.impl.UserServiceImplTest.userService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.UserServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.UserServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserServiceImplTest@4c2af006]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@4c2af006], method [public void ro.estore.domain.service.impl.UserServiceImplTest.updateUserTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@4c2af006, testMethod = updateUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.updateUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@4c2af006, testMethod = updateUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 41, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@4c2af006, testMethod = updateUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserServiceImplTest.updateUserTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [9960c58c-9806-40f4-b991-febadee2e9fa] at timestamp: 14689325613
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4e49ce2b]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@136965e3] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@53c6f96d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@4c2af006, testMethod = updateUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@53c6f96d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@136965e3] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@53c6f96d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.User#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.password as password2_4_0_,
        user0_.user_profile_id as user_pro4_4_0_,
        user0_.username as username3_4_0_,
        userprofil1_.user_profile_id as user_pro1_5_1_,
        userprofil1_.email_address as email_ad2_5_1_,
        userprofil1_.name as name3_5_1_,
        userprofil1_.phone_number as phone_nu4_5_1_,
        userprofil1_.surname as surname5_5_1_ 
    from
        user user0_ 
    inner join
        user_profile userprofil1_ 
            on user0_.user_profile_id=userprofil1_.user_profile_id 
    where
        user0_.user_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@435cc7f9: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@435cc7f9: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@4364712f]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro1_5_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE sql.BasicExtractor - extracted value ([password2_4_0_] : [VARCHAR]) - [pass0]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro4_4_0_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([username3_4_0_] : [VARCHAR]) - [user0]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_1_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_1_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_1_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_1_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@4364712f]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@4364712f]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@435cc7f9: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@435cc7f9: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.User#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 31ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User)
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.User.orders#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        orders0_.user_id as user_id3_1_0_,
        orders0_.order_id as order_id1_1_0_,
        orders0_.order_id as order_id1_1_1_,
        orders0_.address_id as address_2_1_1_,
        address1_.address_id as address_1_0_2_,
        address1_.address_line_1 as address_2_0_2_,
        address1_.address_line_2 as address_3_0_2_,
        address1_.address_name as address_4_0_2_,
        address1_.city as city5_0_2_,
        address1_.postcode as postcode6_0_2_ 
    from
        `
    order` orders0_ inner join
        address address1_ 
            on orders0_.address_id=address1_.address_id 
    where
        orders0_.user_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@737d100a: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@737d100a: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@12e5da86]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@12e5da86]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.User.orders#1]]
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([order_id1_1_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_1_1_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_2_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_2_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_2_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_2_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_2_] : [VARCHAR]) - [00000]
 [main] TRACE sql.BasicExtractor - extracted value ([user_id3_1_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.User.orders#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.User.orders#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.User.orders#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([order_id1_1_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] not located in load context
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.User.orders#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.User.orders#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@12e5da86, coll=[ro.estore.model.entitiy.User.orders#1]>@3af7d855]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@12e5da86, coll=[ro.estore.model.entitiy.User.orders#1]>@3af7d855]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.User.orders#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@12e5da86]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@12e5da86]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@737d100a: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@737d100a: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchases0_.order_id as order_id4_3_0_,
        purchases0_.purchase_id as purchase1_3_0_,
        purchases0_.purchase_id as purchase1_3_1_,
        purchases0_.product_id as product_3_3_1_,
        purchases0_.quantity as quantity2_3_1_,
        product1_.product_id as product_1_2_2_,
        product1_.brand as brand2_2_2_,
        product1_.description as descript3_2_2_,
        product1_.name as name4_2_2_,
        product1_.price as price5_2_2_,
        product1_.stock as stock6_2_2_ 
    from
        purchase purchases0_ 
    inner join
        product product1_ 
            on purchases0_.product_id=product1_.product_id 
    where
        purchases0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@77049094: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@77049094: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@f88bfbe]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@f88bfbe]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] not located in load context
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_1_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_2_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_2_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_2_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_2_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_2_] : [INTEGER]) - [14]
 [main] TRACE sql.BasicExtractor - extracted value ([order_id4_3_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@f88bfbe, coll=[ro.estore.model.entitiy.Order.purchases#1]>@ed91d8d]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@f88bfbe, coll=[ro.estore.model.entitiy.Order.purchases#1]>@ed91d8d]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@f88bfbe]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@f88bfbe]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@77049094: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@77049094: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 54ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        addresses0_.user_profile_id as user_pro7_0_0_,
        addresses0_.address_id as address_1_0_0_,
        addresses0_.address_id as address_1_0_1_,
        addresses0_.address_line_1 as address_2_0_1_,
        addresses0_.address_line_2 as address_3_0_1_,
        addresses0_.address_name as address_4_0_1_,
        addresses0_.city as city5_0_1_,
        addresses0_.postcode as postcode6_0_1_ 
    from
        address addresses0_ 
    where
        addresses0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@446626a7: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@446626a7: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@429f7919]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@429f7919]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] not located in load context
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro7_0_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 0
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@429f7919, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@4a2929a4]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@429f7919, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@4a2929a4]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@429f7919]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@429f7919]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@446626a7: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@446626a7: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 35ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User) took 133ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 166ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserServiceImpl.findById]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@53c6f96d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.User#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1], CollectionKey[ro.estore.model.entitiy.User.orders#1], CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@136965e3] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserServiceImpl.update]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(DomainDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@53c6f96d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.User#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: User ro.estore.domain.converter.UserConverter.toEntity(UserDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Order ro.estore.domain.converter.OrderConverter.toEntity(OrderDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Order ro.estore.domain.converter.OrderConverter.toEntity(OrderDTO) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfile ro.estore.domain.converter.UserProfileConverter.toEntity(UserProfileDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfile ro.estore.domain.converter.UserProfileConverter.toEntity(UserProfileDTO) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: User ro.estore.domain.converter.UserConverter.toEntity(UserDTO) took 6ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@53c6f96d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultMergeEventListener - Merging detached instance
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.Cascade - Processing cascade ACTION_MERGE for: ro.estore.model.entitiy.User
 [main] TRACE internal.Cascade - Cascade ACTION_MERGE for collection: ro.estore.model.entitiy.User.orders
 [main] TRACE spi.CascadingActions$6 - Cascading to merge: ro.estore.model.entitiy.Order
 [main] TRACE internal.DefaultMergeEventListener - Merging detached instance
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.Cascade - Processing cascade ACTION_MERGE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Cascade ACTION_MERGE for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE spi.CascadingActions$6 - Cascading to merge: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultMergeEventListener - Merging detached instance
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.Cascade - Done cascade ACTION_MERGE for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.Cascade - Done processing cascade ACTION_MERGE for: ro.estore.model.entitiy.Order
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.Cascade - Done cascade ACTION_MERGE for collection: ro.estore.model.entitiy.User.orders
 [main] TRACE spi.CascadingActions$6 - Cascading to merge: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.DefaultMergeEventListener - Merging detached instance
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.Cascade - Processing cascade ACTION_MERGE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Cascade ACTION_MERGE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE spi.CascadingActions$6 - Cascading to merge: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultMergeEventListener - Merging detached instance
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.Cascade - Done cascade ACTION_MERGE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done processing cascade ACTION_MERGE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Done processing cascade ACTION_MERGE for: ro.estore.model.entitiy.User
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object) took 30ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User) took 7ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.update(DomainDTO) took 48ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserServiceImpl.update]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@53c6f96d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.User#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1], CollectionKey[ro.estore.model.entitiy.User.orders#1], CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@136965e3] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@53c6f96d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.User#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User) took 5ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 9ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@4c2af006], method [public void ro.estore.domain.service.impl.UserServiceImplTest.updateUserTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@4c2af006, testMethod = updateUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@3c87fdf2]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.User#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1], CollectionKey[ro.estore.model.entitiy.User.orders#1], CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@53c6f96d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@136965e3] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [9960c58c-9806-40f4-b991-febadee2e9fa]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@26bbe604]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@4c2af006, testMethod = updateUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@4c2af006, testMethod = updateUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.UserServiceImplTest@fe34b86]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@fe34b86, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 42, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.UserServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserService ro.estore.domain.service.impl.UserServiceImplTest.userService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.UserServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.UserServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserServiceImplTest@fe34b86]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@fe34b86], method [public void ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameFailTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@fe34b86, testMethod = findUserByUsernameFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.findUserByUsernameFailTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@fe34b86, testMethod = findUserByUsernameFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 43, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@fe34b86, testMethod = findUserByUsernameFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameFailTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [ba209885-4826-4794-96f7-5c7e2a1f70eb] at timestamp: 14689325615
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@53abfc07]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@2c8c16c0] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@80bfa9d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@fe34b86, testMethod = findUserByUsernameFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@80bfa9d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@2c8c16c0] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserServiceImpl.findByUsername]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.service.impl.UserServiceImpl.findByUsername(String)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsername(String)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@80bfa9d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG internal.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0
 [main] TRACE spi.QueryPlanCache - Unable to locate HQL query plan in cache; generating (select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0)
 [main] DEBUG ast.QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from ro.estore.model.entitiy.User as generatedAlias0 where generatedAlias0.username=:param0
 [main] DEBUG ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'ro'
    |  |     |  |  |  |  \-[IDENT] Node: 'estore'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'entitiy'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

 [main] DEBUG ast.ErrorCounter - throwQueryException() : no errors
 [main] DEBUG antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
 [main] DEBUG tree.FromElement - FromClause{level=1} : ro.estore.model.entitiy.User (generatedAlias0) -> user0_
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
 [main] TRACE tree.FromElement - Handling property dereference [ro.estore.model.entitiy.User (generatedAlias0) -> username (class)]
 [main] DEBUG tree.DotNode - getDataType() : username -> org.hibernate.type.StringType@788fcafb
 [main] DEBUG tree.FromReferenceNode - Resolved : generatedAlias0.username -> user0_.username
 [main] DEBUG antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
 [main] DEBUG ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
 [main] DEBUG util.JoinProcessor - Using FROM fragment [user user0_]
 [main] DEBUG antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
 [main] DEBUG ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_4_' {alias=generatedAlias0, className=ro.estore.model.entitiy.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=ro.estore.model.entitiy.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=generatedAlias0.username,tableAlias=user0_,className=ro.estore.model.entitiy.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=generatedAlias0, className=ro.estore.model.entitiy.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@788fcafb}

 [main] DEBUG ast.ErrorCounter - throwQueryException() : no errors
 [main] DEBUG ast.QueryTranslatorImpl - HQL: select generatedAlias0 from ro.estore.model.entitiy.User as generatedAlias0 where generatedAlias0.username=:param0
 [main] DEBUG ast.QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=?
 [main] DEBUG ast.ErrorCounter - throwQueryException() : no errors
 [main] TRACE spi.HQLQueryPlan - HQL param location recognition took 54.740 nanoseconds (select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0)
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0)
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@80bfa9d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0)
 [main] TRACE spi.HQLQueryPlan - Find: select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0
 [main] TRACE spi.QueryParameters - Named parameters: {param0=user0_0}
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_,
        user0_.password as password2_4_,
        user0_.user_profile_id as user_pro4_4_,
        user0_.username as username3_4_ 
    from
        user user0_ 
    where
        user0_.username=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@507d64aa: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@507d64aa: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [user0_0]
 [main] TRACE loader.Loader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@37045b48]
 [main] TRACE loader.Loader - Processing result set
 [main] TRACE loader.Loader - Done processing result set (0 rows)
 [main] TRACE loader.Loader - Total objects hydrated: 0
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@507d64aa: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0_0']
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@37045b48]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@507d64aa: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0_0']
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] ERROR impl.UserRepositoryJpaImpl - No user was found (No entity found for query)
javax.persistence.NoResultException: No entity found for query
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1422)
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getSingleResult(CriteriaQueryTypeQueryAdapter.java:59)
	at ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsername(UserRepositoryJpaImpl.java:33)
	at ro.estore.model.repository.impl.UserRepositoryJpaImpl$$FastClassBySpringCGLIB$$9dbde216.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at ro.estore.aspect.LoggingAspect.logMethodExecutionTime(LoggingAspect.java:46)
	at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at ro.estore.model.repository.impl.UserRepositoryJpaImpl$$EnhancerBySpringCGLIB$$e58d61f9.findByUsername(<generated>)
	at ro.estore.domain.service.impl.UserServiceImpl.findByUsername(UserServiceImpl.java:49)
	at ro.estore.domain.service.impl.UserServiceImpl$$FastClassBySpringCGLIB$$4208433e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at ro.estore.aspect.LoggingAspect.logMethodExecutionTime(LoggingAspect.java:46)
	at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at ro.estore.domain.service.impl.UserServiceImpl$$EnhancerBySpringCGLIB$$d7d073af.findByUsername(<generated>)
	at ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameFailTest(UserServiceImplTest.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:252)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:94)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:191)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsername(String) took 44ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.service.impl.UserServiceImpl.findByUsername(String) took 47ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserServiceImpl.findByUsername]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@fe34b86], method [public void ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameFailTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@fe34b86, testMethod = findUserByUsernameFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@4aa21f9d]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@80bfa9d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@2c8c16c0] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [ba209885-4826-4794-96f7-5c7e2a1f70eb]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@71c17a57]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@fe34b86, testMethod = findUserByUsernameFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@fe34b86, testMethod = findUserByUsernameFailTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.UserServiceImplTest@640ab13c]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@640ab13c, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 44, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.UserServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserService ro.estore.domain.service.impl.UserServiceImplTest.userService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.UserServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.UserServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserServiceImplTest@640ab13c]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@640ab13c], method [public void ro.estore.domain.service.impl.UserServiceImplTest.createUser()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@640ab13c, testMethod = createUser@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.createUser' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@640ab13c, testMethod = createUser@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 45, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@640ab13c, testMethod = createUser@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserServiceImplTest.createUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [d7bf1f09-d572-4990-9eae-d60c48be4ca2] at timestamp: 14689325616
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@fd53053]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@4527f70a] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@707b1a44] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@640ab13c, testMethod = createUser@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.util.TestUtils.createUserDTO(String)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 7ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 4ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 11ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User) took 24ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.util.TestUtils.createUserDTO(String) took 26ms to execute.
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@707b1a44] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@4527f70a] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@707b1a44] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        product0_.product_id as product_1_2_0_,
        product0_.brand as brand2_2_0_,
        product0_.description as descript3_2_0_,
        product0_.name as name4_2_0_,
        product0_.price as price5_2_0_,
        product0_.stock as stock6_2_0_ 
    from
        product product0_ 
    where
        product0_.product_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@7132a9dc: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@7132a9dc: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@57435801]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_0_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_0_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_0_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_0_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_0_] : [INTEGER]) - [14]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@57435801]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@57435801]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@7132a9dc: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@7132a9dc: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Product#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 33ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 35ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@707b1a44] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@4527f70a] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@707b1a44] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 4ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 7ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@707b1a44] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@4527f70a] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@707b1a44] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 5ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@707b1a44] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@4527f70a] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@707b1a44] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 3ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.ProductServiceImpl.findById]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@707b1a44] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@4527f70a] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserServiceImpl.create]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.create(DomainDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: User ro.estore.domain.converter.UserConverter.toEntity(UserDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Order ro.estore.domain.converter.OrderConverter.toEntity(OrderDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Order ro.estore.domain.converter.OrderConverter.toEntity(OrderDTO) took 8ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Order ro.estore.domain.converter.OrderConverter.toEntity(OrderDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Order ro.estore.domain.converter.OrderConverter.toEntity(OrderDTO) took 7ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfile ro.estore.domain.converter.UserProfileConverter.toEntity(UserProfileDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfile ro.estore.domain.converter.UserProfileConverter.toEntity(UserProfileDTO) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: User ro.estore.domain.converter.UserConverter.toEntity(UserDTO) took 21ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@707b1a44] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.User
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.User#<null>]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.User
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.UserProfile#<null>]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.WrapVisitor - Wrapped collection in role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.UserProfile] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.UserProfile#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.UserProfile#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.UserProfile (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        user_profile
        (email_address, name, phone_number, surname) 
    values
        (?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@329bad59: insert into user_profile (email_address, name, phone_number, surname) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.UserProfile#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [ceva@email.com_1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [name_1]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [0123456789_1]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [VARCHAR] - [surname_1]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 7
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@862f408]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@862f408]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@329bad59: insert into user_profile (email_address, name, phone_number, surname) values ('ceva@email.com_1', 'name_1', '0123456789_1', 'surname_1')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@329bad59: insert into user_profile (email_address, name, phone_number, surname) values ('ceva@email.com_1', 'name_1', '0123456789_1', 'surname_1')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Address
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Address] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Address (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        address
        (address_line_1, address_line_2, address_name, city, postcode) 
    values
        (?, ?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@5c723f2d: insert into address (address_line_1, address_line_2, address_name, city, postcode) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [addr line 1_1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [addr line 2_1]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [ceva@email.com_1]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [VARCHAR] - [city_1]
 [main] TRACE sql.BasicBinder - binding parameter [5] as [VARCHAR] - [postcode_1]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 14
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@432f521f]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@432f521f]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@5c723f2d: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1', 'addr line 2_1', 'ceva@email.com_1', 'city_1', 'postcode_1')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@5c723f2d: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1', 'addr line 2_1', 'ceva@email.com_1', 'city_1', 'postcode_1')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Address
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Address] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Address (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        address
        (address_line_1, address_line_2, address_name, city, postcode) 
    values
        (?, ?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@366d8b97: insert into address (address_line_1, address_line_2, address_name, city, postcode) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [addr line 1_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [addr line 2_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [ceva@email.com_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [VARCHAR] - [city_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [5] as [VARCHAR] - [postcode_1_2]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 15
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@feb98ef]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@feb98ef]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@366d8b97: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1_2', 'addr line 2_1_2', 'ceva@email.com_1_2', 'city_1_2', 'postcode_1_2')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@366d8b97: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1_2', 'addr line 2_1_2', 'ceva@email.com_1_2', 'city_1_2', 'postcode_1_2')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Done cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.User
 [main] TRACE internal.WrapVisitor - Wrapped collection in role: ro.estore.model.entitiy.User.orders
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.User] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.User#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.User#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.User (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        user
        (password, user_profile_id, username) 
    values
        (?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@d7109be: insert into user (password, user_profile_id, username) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.User#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [username_1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [BIGINT] - [7]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [username_1]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 4
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@5e0ec41f]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@5e0ec41f]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@d7109be: insert into user (password, user_profile_id, username) values ('username_1', 7, 'username_1')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@d7109be: insert into user (password, user_profile_id, username) values ('username_1', 7, 'username_1')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.User
 [main] TRACE internal.Cascade - Cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.User.orders
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Order
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Order
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Order#<null>]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Address
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Address] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Address (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        address
        (address_line_1, address_line_2, address_name, city, postcode) 
    values
        (?, ?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@25673087: insert into address (address_line_1, address_line_2, address_name, city, postcode) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [addr line 1_1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [addr line 2_1]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [ceva@email.com_1]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [VARCHAR] - [city_1]
 [main] TRACE sql.BasicBinder - binding parameter [5] as [VARCHAR] - [postcode_1]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 16
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@7b27e8f4]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@7b27e8f4]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@25673087: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1', 'addr line 2_1', 'ceva@email.com_1', 'city_1', 'postcode_1')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@25673087: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1', 'addr line 2_1', 'ceva@email.com_1', 'city_1', 'postcode_1')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE internal.WrapVisitor - Wrapped collection in role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Order] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Order#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Order#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Order (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        `
        
    order` (
        address_id, user_id
    ) 
values
    (?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@2c88a3e8: insert into `order` (address_id, user_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Order#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [16]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [BIGINT] - [4]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 6
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@68ac9ec5]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@68ac9ec5]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@2c88a3e8: insert into `order` (address_id, user_id) values (16, 4)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@2c88a3e8: insert into `order` (address_id, user_id) values (16, 4)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Purchase
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Purchase] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Purchase (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        purchase
        (product_id, quantity, order_id) 
    values
        (?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@65f651eb: insert into purchase (product_id, quantity, order_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [INTEGER] - [23]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [BIGINT] - [6]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 12
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@69923ac3]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@69923ac3]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@65f651eb: insert into purchase (product_id, quantity, order_id) values (1, 23, 6)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@65f651eb: insert into purchase (product_id, quantity, order_id) values (1, 23, 6)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Purchase
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Purchase] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Purchase (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        purchase
        (product_id, quantity, order_id) 
    values
        (?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@5c441290: insert into purchase (product_id, quantity, order_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [INTEGER] - [23]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [BIGINT] - [6]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 13
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@3c78e551]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@3c78e551]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@5c441290: insert into purchase (product_id, quantity, order_id) values (1, 23, 6)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@5c441290: insert into purchase (product_id, quantity, order_id) values (1, 23, 6)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Done cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Order
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Order
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Order#<null>]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Address
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Address] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Address (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        address
        (address_line_1, address_line_2, address_name, city, postcode) 
    values
        (?, ?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@1f03fba0: insert into address (address_line_1, address_line_2, address_name, city, postcode) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [addr line 1_1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [addr line 2_1]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [ceva@email.com_1]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [VARCHAR] - [city_1]
 [main] TRACE sql.BasicBinder - binding parameter [5] as [VARCHAR] - [postcode_1]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 17
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@17dd671f]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@17dd671f]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@1f03fba0: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1', 'addr line 2_1', 'ceva@email.com_1', 'city_1', 'postcode_1')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@1f03fba0: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1', 'addr line 2_1', 'ceva@email.com_1', 'city_1', 'postcode_1')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE internal.WrapVisitor - Wrapped collection in role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Order] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Order#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Order#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Order (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        `
        
    order` (
        address_id, user_id
    ) 
values
    (?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@9b9a327: insert into `order` (address_id, user_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Order#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [17]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [BIGINT] - [4]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 7
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@75a0c890]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@75a0c890]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@9b9a327: insert into `order` (address_id, user_id) values (17, 4)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@9b9a327: insert into `order` (address_id, user_id) values (17, 4)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Purchase
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Purchase] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Purchase (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        purchase
        (product_id, quantity, order_id) 
    values
        (?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@3791f50e: insert into purchase (product_id, quantity, order_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [INTEGER] - [23]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [BIGINT] - [7]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 14
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@574b7f4a]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@574b7f4a]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@3791f50e: insert into purchase (product_id, quantity, order_id) values (1, 23, 7)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@3791f50e: insert into purchase (product_id, quantity, order_id) values (1, 23, 7)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Purchase
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Purchase] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Purchase (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        purchase
        (product_id, quantity, order_id) 
    values
        (?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@6ab4a5b: insert into purchase (product_id, quantity, order_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE spi.IdentifierValue - ID unsaved-value: null
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [INTEGER] - [23]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [BIGINT] - [7]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 15
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@2abe9173]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@2abe9173]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@6ab4a5b: insert into purchase (product_id, quantity, order_id) values (1, 23, 7)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@6ab4a5b: insert into purchase (product_id, quantity, order_id) values (1, 23, 7)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Done cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Done cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.User
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object) took 279ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 5ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 21ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 25ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 4ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User) took 38ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.create(DomainDTO) took 340ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserServiceImpl.create]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@640ab13c], method [public void ro.estore.domain.service.impl.UserServiceImplTest.createUser()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@640ab13c, testMethod = createUser@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@1fdca564]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Purchase#12], EntityKey[ro.estore.model.entitiy.Purchase#13], EntityKey[ro.estore.model.entitiy.Purchase#14], EntityKey[ro.estore.model.entitiy.Purchase#15], EntityKey[ro.estore.model.entitiy.Address#17], EntityKey[ro.estore.model.entitiy.UserProfile#7], EntityKey[ro.estore.model.entitiy.Address#15], EntityKey[ro.estore.model.entitiy.User#4], EntityKey[ro.estore.model.entitiy.Address#16], EntityKey[ro.estore.model.entitiy.Address#14], EntityKey[ro.estore.model.entitiy.Order#6], EntityKey[ro.estore.model.entitiy.Order#7], EntityKey[ro.estore.model.entitiy.Product#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@707b1a44] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@4527f70a] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [d7bf1f09-d572-4990-9eae-d60c48be4ca2]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@43f9dd56]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@640ab13c, testMethod = createUser@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@640ab13c, testMethod = createUser@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.UserServiceImplTest@1d12e953]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@1d12e953, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 46, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.UserServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserService ro.estore.domain.service.impl.UserServiceImplTest.userService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.UserServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.UserServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserServiceImplTest@1d12e953]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@1d12e953], method [public void ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@1d12e953, testMethod = findUserByUsernameTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.findUserByUsernameTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@1d12e953, testMethod = findUserByUsernameTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 47, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@1d12e953, testMethod = findUserByUsernameTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [0f101ae1-b8f3-44af-82fb-30c63ac7884a] at timestamp: 14689325621
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2a8a4e0c]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@26c89563] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@3bd6ba24] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@1d12e953, testMethod = findUserByUsernameTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@3bd6ba24] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@26c89563] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserServiceImpl.findByUsername]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.service.impl.UserServiceImpl.findByUsername(String)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsername(String)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@3bd6ba24] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG internal.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0)
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0)
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@3bd6ba24] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0)
 [main] TRACE spi.HQLQueryPlan - Find: select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0
 [main] TRACE spi.QueryParameters - Named parameters: {param0=user0}
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_,
        user0_.password as password2_4_,
        user0_.user_profile_id as user_pro4_4_,
        user0_.username as username3_4_ 
    from
        user user0_ 
    where
        user0_.username=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@20f6f88c: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@20f6f88c: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [user0]
 [main] TRACE loader.Loader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@4277127c]
 [main] TRACE loader.Loader - Processing result set
 [main] DEBUG logging.DelegatingBasicLogger - Result set row: 0
 [main] TRACE sql.BasicExtractor - extracted value ([user_id1_4_] : [BIGINT]) - [1]
 [main] DEBUG loader.Loader - Result row: EntityKey[ro.estore.model.entitiy.User#1]
 [main] TRACE loader.Loader - Initializing object from ResultSet: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE sql.BasicExtractor - extracted value ([password2_4_] : [VARCHAR]) - [pass0]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro4_4_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([username3_4_] : [VARCHAR]) - [user0]
 [main] TRACE loader.Loader - Done processing result set (1 rows)
 [main] TRACE loader.Loader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        userprofil0_.user_profile_id as user_pro1_5_0_,
        userprofil0_.email_address as email_ad2_5_0_,
        userprofil0_.name as name3_5_0_,
        userprofil0_.phone_number as phone_nu4_5_0_,
        userprofil0_.surname as surname5_5_0_ 
    from
        user_profile userprofil0_ 
    where
        userprofil0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@22ebccb9: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@22ebccb9: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@5875de6a]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_0_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_0_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_0_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_0_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@5875de6a]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@5875de6a]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@22ebccb9: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@22ebccb9: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.UserProfile#1
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@20f6f88c: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0']
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@4277127c]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@20f6f88c: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0']
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsername(String) took 59ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User)
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.User.orders#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        orders0_.user_id as user_id3_1_0_,
        orders0_.order_id as order_id1_1_0_,
        orders0_.order_id as order_id1_1_1_,
        orders0_.address_id as address_2_1_1_,
        address1_.address_id as address_1_0_2_,
        address1_.address_line_1 as address_2_0_2_,
        address1_.address_line_2 as address_3_0_2_,
        address1_.address_name as address_4_0_2_,
        address1_.city as city5_0_2_,
        address1_.postcode as postcode6_0_2_ 
    from
        `
    order` orders0_ inner join
        address address1_ 
            on orders0_.address_id=address1_.address_id 
    where
        orders0_.user_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@5a75ec37: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@5a75ec37: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@2c05ff9d]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@2c05ff9d]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.User.orders#1]]
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([order_id1_1_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_1_1_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_2_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_2_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_2_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_2_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_2_] : [VARCHAR]) - [00000]
 [main] TRACE sql.BasicExtractor - extracted value ([user_id3_1_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.User.orders#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.User.orders#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.User.orders#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([order_id1_1_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] not located in load context
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.User.orders#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.User.orders#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@2c05ff9d, coll=[ro.estore.model.entitiy.User.orders#1]>@58867cd5]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@2c05ff9d, coll=[ro.estore.model.entitiy.User.orders#1]>@58867cd5]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.User.orders#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@2c05ff9d]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@2c05ff9d]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@5a75ec37: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@5a75ec37: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchases0_.order_id as order_id4_3_0_,
        purchases0_.purchase_id as purchase1_3_0_,
        purchases0_.purchase_id as purchase1_3_1_,
        purchases0_.product_id as product_3_3_1_,
        purchases0_.quantity as quantity2_3_1_,
        product1_.product_id as product_1_2_2_,
        product1_.brand as brand2_2_2_,
        product1_.description as descript3_2_2_,
        product1_.name as name4_2_2_,
        product1_.price as price5_2_2_,
        product1_.stock as stock6_2_2_ 
    from
        purchase purchases0_ 
    inner join
        product product1_ 
            on purchases0_.product_id=product1_.product_id 
    where
        purchases0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@40e32762: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@40e32762: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@5a8ab2]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@5a8ab2]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] not located in load context
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_1_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_2_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_2_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_2_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_2_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_2_] : [INTEGER]) - [14]
 [main] TRACE sql.BasicExtractor - extracted value ([order_id4_3_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@5a8ab2, coll=[ro.estore.model.entitiy.Order.purchases#1]>@d5af0a5]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@5a8ab2, coll=[ro.estore.model.entitiy.Order.purchases#1]>@d5af0a5]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@5a8ab2]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@5a8ab2]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@40e32762: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@40e32762: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 37ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        addresses0_.user_profile_id as user_pro7_0_0_,
        addresses0_.address_id as address_1_0_0_,
        addresses0_.address_id as address_1_0_1_,
        addresses0_.address_line_1 as address_2_0_1_,
        addresses0_.address_line_2 as address_3_0_1_,
        addresses0_.address_name as address_4_0_1_,
        addresses0_.city as city5_0_1_,
        addresses0_.postcode as postcode6_0_1_ 
    from
        address addresses0_ 
    where
        addresses0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@5981f4a6: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@5981f4a6: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@63dfada0]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@63dfada0]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] not located in load context
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro7_0_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 0
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@63dfada0, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@6f231ced]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@63dfada0, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@6f231ced]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@63dfada0]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@63dfada0]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@5981f4a6: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@5981f4a6: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 32ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User) took 99ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.service.impl.UserServiceImpl.findByUsername(String) took 159ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserServiceImpl.findByUsername]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@1d12e953], method [public void ro.estore.domain.service.impl.UserServiceImplTest.findUserByUsernameTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@1d12e953, testMethod = findUserByUsernameTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@35a60674]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.User#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1], CollectionKey[ro.estore.model.entitiy.User.orders#1], CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@3bd6ba24] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@26c89563] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [0f101ae1-b8f3-44af-82fb-30c63ac7884a]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@63d4f0a2]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@1d12e953, testMethod = findUserByUsernameTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@1d12e953, testMethod = findUserByUsernameTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.domain.service.impl.UserServiceImplTest@7d78f3d5]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@7d78f3d5, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 48, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.domain.service.impl.UserServiceImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.UserService ro.estore.domain.service.impl.UserServiceImplTest.userService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.domain.service.ProductService ro.estore.domain.service.impl.UserServiceImplTest.productService
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productServiceImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.domain.service.impl.UserServiceImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.domain.service.impl.UserServiceImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.domain.service.impl.UserServiceImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.domain.service.impl.UserServiceImplTest@7d78f3d5]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@7d78f3d5], method [public void ro.estore.domain.service.impl.UserServiceImplTest.deleteUserTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@7d78f3d5, testMethod = deleteUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserServiceImplTest.deleteUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@7d78f3d5, testMethod = deleteUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 49, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@7d78f3d5, testMethod = deleteUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.domain.service.impl.UserServiceImplTest.deleteUserTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [881fde8f-ebc1-4ba8-87fa-53284843edde] at timestamp: 14689325623
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@71926a36]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@216e9ca3] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@75120e58] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@7d78f3d5, testMethod = deleteUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@75120e58] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@216e9ca3] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@75120e58] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.User#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.password as password2_4_0_,
        user0_.user_profile_id as user_pro4_4_0_,
        user0_.username as username3_4_0_,
        userprofil1_.user_profile_id as user_pro1_5_1_,
        userprofil1_.email_address as email_ad2_5_1_,
        userprofil1_.name as name3_5_1_,
        userprofil1_.phone_number as phone_nu4_5_1_,
        userprofil1_.surname as surname5_5_1_ 
    from
        user user0_ 
    inner join
        user_profile userprofil1_ 
            on user0_.user_profile_id=userprofil1_.user_profile_id 
    where
        user0_.user_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@48976e6d: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@48976e6d: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@2a367e93]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro1_5_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE sql.BasicExtractor - extracted value ([password2_4_0_] : [VARCHAR]) - [pass0]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro4_4_0_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([username3_4_0_] : [VARCHAR]) - [user0]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_1_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_1_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_1_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_1_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@2a367e93]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@2a367e93]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@48976e6d: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@48976e6d: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.User#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 42ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User)
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.User.orders#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        orders0_.user_id as user_id3_1_0_,
        orders0_.order_id as order_id1_1_0_,
        orders0_.order_id as order_id1_1_1_,
        orders0_.address_id as address_2_1_1_,
        address1_.address_id as address_1_0_2_,
        address1_.address_line_1 as address_2_0_2_,
        address1_.address_line_2 as address_3_0_2_,
        address1_.address_name as address_4_0_2_,
        address1_.city as city5_0_2_,
        address1_.postcode as postcode6_0_2_ 
    from
        `
    order` orders0_ inner join
        address address1_ 
            on orders0_.address_id=address1_.address_id 
    where
        orders0_.user_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@4c5228e7: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@4c5228e7: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@38e7ed69]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@38e7ed69]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.User.orders#1]]
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([order_id1_1_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_1_1_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_2_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_2_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_2_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_2_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_2_] : [VARCHAR]) - [00000]
 [main] TRACE sql.BasicExtractor - extracted value ([user_id3_1_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.User.orders#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.User.orders#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.User.orders#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([order_id1_1_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] not located in load context
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.User.orders#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.User.orders#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@38e7ed69, coll=[ro.estore.model.entitiy.User.orders#1]>@22752544]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@38e7ed69, coll=[ro.estore.model.entitiy.User.orders#1]>@22752544]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.User.orders#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@38e7ed69]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@38e7ed69]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@4c5228e7: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@4c5228e7: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchases0_.order_id as order_id4_3_0_,
        purchases0_.purchase_id as purchase1_3_0_,
        purchases0_.purchase_id as purchase1_3_1_,
        purchases0_.product_id as product_3_3_1_,
        purchases0_.quantity as quantity2_3_1_,
        product1_.product_id as product_1_2_2_,
        product1_.brand as brand2_2_2_,
        product1_.description as descript3_2_2_,
        product1_.name as name4_2_2_,
        product1_.price as price5_2_2_,
        product1_.stock as stock6_2_2_ 
    from
        purchase purchases0_ 
    inner join
        product product1_ 
            on purchases0_.product_id=product1_.product_id 
    where
        purchases0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@21ba2445: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@21ba2445: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@69d23296]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@69d23296]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] not located in load context
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_1_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_2_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_2_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_2_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_2_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_2_] : [INTEGER]) - [14]
 [main] TRACE sql.BasicExtractor - extracted value ([order_id4_3_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@69d23296, coll=[ro.estore.model.entitiy.Order.purchases#1]>@3fba233d]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@69d23296, coll=[ro.estore.model.entitiy.Order.purchases#1]>@3fba233d]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@69d23296]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@69d23296]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@21ba2445: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@21ba2445: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: ProductDTO ro.estore.domain.converter.ProductConverter.toDto(Product) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: PurchaseDTO ro.estore.domain.converter.PurchaseConverter.toDto(Purchase) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: OrderDTO ro.estore.domain.converter.OrderConverter.toDto(Order) took 64ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile)
	=====================================================================
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        addresses0_.user_profile_id as user_pro7_0_0_,
        addresses0_.address_id as address_1_0_0_,
        addresses0_.address_id as address_1_0_1_,
        addresses0_.address_line_1 as address_2_0_1_,
        addresses0_.address_line_2 as address_3_0_1_,
        addresses0_.address_name as address_4_0_1_,
        addresses0_.city as city5_0_1_,
        addresses0_.postcode as postcode6_0_1_ 
    from
        address addresses0_ 
    where
        addresses0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@427ae189: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@427ae189: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@16a9eb2e]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@16a9eb2e]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] not located in load context
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro7_0_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 0
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@16a9eb2e, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@76332405]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@16a9eb2e, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@76332405]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@16a9eb2e]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@16a9eb2e]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@427ae189: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@427ae189: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: AddressDTO ro.estore.domain.converter.AddressConverter.toDto(Address) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfileDTO ro.estore.domain.converter.UserProfileConverter.toDto(UserProfile) took 38ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User) took 145ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 188ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserServiceImpl.findById]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@75120e58] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.User#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1], CollectionKey[ro.estore.model.entitiy.User.orders#1], CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@216e9ca3] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserServiceImpl.remove]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.domain.service.impl.GenericServiceImpl.remove(DomainDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: User ro.estore.domain.converter.UserConverter.toEntity(UserDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Order ro.estore.domain.converter.OrderConverter.toEntity(OrderDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.domain.converter.ProductConverter.toEntity(ProductDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Purchase ro.estore.domain.converter.PurchaseConverter.toEntity(PurchaseDTO) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Order ro.estore.domain.converter.OrderConverter.toEntity(OrderDTO) took 4ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfile ro.estore.domain.converter.UserProfileConverter.toEntity(UserProfileDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Address ro.estore.domain.converter.AddressConverter.toEntity(AddressDTO) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfile ro.estore.domain.converter.UserProfileConverter.toEntity(UserProfileDTO) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: User ro.estore.domain.converter.UserConverter.toEntity(UserDTO) took 7ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@75120e58] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@75120e58] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.User#1]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@75120e58] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.User
 [main] TRACE internal.Cascade - Cascade ACTION_DELETE for collection: ro.estore.model.entitiy.User.orders
 [main] TRACE spi.CascadingActions$1 - Cascading to delete: ro.estore.model.entitiy.Order
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Cascade ACTION_DELETE for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE spi.CascadingActions$1 - Cascading to delete: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.Cascade - Done cascade ACTION_DELETE for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Done cascade ACTION_DELETE for collection: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.User
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.User
 [main] TRACE spi.CascadingActions$1 - Cascading to delete: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Cascade ACTION_DELETE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE spi.CascadingActions$1 - Cascading to delete: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.Cascade - Done cascade ACTION_DELETE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Deleting orphans for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done deleting orphans for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.User
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object) took 25ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.domain.service.impl.GenericServiceImpl.remove(DomainDTO) took 34ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserServiceImpl.remove]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@75120e58] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Found thread-bound EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.User#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1], CollectionKey[ro.estore.model.entitiy.User.orders#1], CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=5} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.jdbc.datasource.ConnectionHolder@216e9ca3] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] bound to thread [main]
 [main] DEBUG support.AbstractPlatformTransactionManager - Participating in existing transaction
 [main] TRACE interceptor.TransactionAspectSupport - Getting transaction for [ro.estore.domain.service.impl.UserServiceImpl.findById]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@75120e58] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.User#1]
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserDTO ro.estore.domain.converter.UserConverter.toDto(User) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: DomainDTO ro.estore.domain.service.impl.GenericServiceImpl.findById(Serializable) took 3ms to execute.
	=====================================================================
 [main] TRACE interceptor.TransactionAspectSupport - Completing transaction for [ro.estore.domain.service.impl.UserServiceImpl.findById]
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.domain.service.impl.UserServiceImplTest@7d78f3d5], method [public void ro.estore.domain.service.impl.UserServiceImplTest.deleteUserTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@7d78f3d5, testMethod = deleteUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@d1d8e1a]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.User#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1], CollectionKey[ro.estore.model.entitiy.User.orders#1], CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=5} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@75120e58] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@216e9ca3] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [881fde8f-ebc1-4ba8-87fa-53284843edde]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@5434e40c]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@7d78f3d5, testMethod = deleteUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = ro.estore.domain.service.impl.UserServiceImplTest@7d78f3d5, testMethod = deleteUserTest@UserServiceImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] TRACE context.TestContextManager - afterTestClass(): class [ro.estore.domain.service.impl.UserServiceImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@f6de586 testClass = UserServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f2bd6d9 testClass = UserServiceImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] TRACE support.ContextLoaderUtils - Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], classes=[class ro.estore.model.config.JpaHibernateTestConfig], loader=interface org.springframework.test.context.ContextLoader, inheritInitializers=true, locations=[], initializers=[], inheritLocations=true)] for declaring class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest].
 [main] TRACE support.ContextLoaderUtils - Resolved context configuration attributes: [ContextConfigurationAttributes@30c1da48 declaringClass = 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@30c1da48 declaringClass = 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] TRACE support.AbstractTestContextBootstrapper - Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@30c1da48 declaringClass = 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@30c1da48 declaringClass = 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] TRACE support.SpringFactoriesLoader - Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]
 [main] TRACE support.ApplicationContextInitializerUtils - Processing context initializers for context configuration attributes [ContextConfigurationAttributes@30c1da48 declaringClass = 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6c5ddccd, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1dbd580, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6c101cc1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7d0d91a1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7fb48179]
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6c5ddccd
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1dbd580
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@6c101cc1
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@7d0d91a1
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7fb48179
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - beforeTestClass(): class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@201c3cda testClass = AddressRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@5d97caa4]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@201c3cda testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@5d97caa4, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 50, missCount = 1]
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest' to bean named 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.AddressRepository ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.addressRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest' to bean named 'addressRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressRepositoryJpaImplTest.findAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@5d97caa4]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.findAddressTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressRepositoryJpaImplTest.setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.setUp()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressRepositoryJpaImplTest.deleteAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.deleteAddressTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressRepositoryJpaImplTest.updateAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.updateAddressTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@5d97caa4], method [public void ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.deleteAddressTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@201c3cda testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@5d97caa4, testMethod = deleteAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressRepositoryJpaImplTest.deleteAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@201c3cda testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@5d97caa4, testMethod = deleteAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@6c806c8b transactionManagerName = '', defaultRollback = true] for test class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 51, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@201c3cda testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@5d97caa4, testMethod = deleteAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.deleteAddressTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [95b2cff0-7a89-4aff-90d2-29330ea5dbfb] at timestamp: 14689325626
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2d64c100]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@69d45cca] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@2fdf17dc] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@201c3cda testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@5d97caa4, testMethod = deleteAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@2fdf17dc] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Address#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        address0_.address_id as address_1_0_0_,
        address0_.address_line_1 as address_2_0_0_,
        address0_.address_line_2 as address_3_0_0_,
        address0_.address_name as address_4_0_0_,
        address0_.city as city5_0_0_,
        address0_.postcode as postcode6_0_0_ 
    from
        address address0_ 
    where
        address0_.address_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@6e6d4780: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@6e6d4780: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@650ae78c]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_0_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_0_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_0_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_0_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_0_] : [VARCHAR]) - [00000]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@650ae78c]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@650ae78c]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@6e6d4780: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@6e6d4780: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Address#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 29ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@2fdf17dc] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@2fdf17dc] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Address#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@2fdf17dc] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@5d97caa4], method [public void ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.deleteAddressTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@201c3cda testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@5d97caa4, testMethod = deleteAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@7d904ff1]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=1} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@2fdf17dc] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@69d45cca] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [95b2cff0-7a89-4aff-90d2-29330ea5dbfb]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@4f94e148]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@201c3cda testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@5d97caa4, testMethod = deleteAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@201c3cda testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@5d97caa4, testMethod = deleteAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@7ff8a9dc]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@201c3cda testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@7ff8a9dc, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 52, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.AddressRepository ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.addressRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@7ff8a9dc]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@7ff8a9dc], method [public void ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.findAddressTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@201c3cda testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@7ff8a9dc, testMethod = findAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressRepositoryJpaImplTest.findAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@201c3cda testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@7ff8a9dc, testMethod = findAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 53, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@201c3cda testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@7ff8a9dc, testMethod = findAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.findAddressTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [f7de977d-add4-40db-8798-1431560aec83] at timestamp: 14689325627
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1b495d4]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@5e1dde44] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@7f37b6d9] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@201c3cda testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@7ff8a9dc, testMethod = findAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@7f37b6d9] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Address#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        address0_.address_id as address_1_0_0_,
        address0_.address_line_1 as address_2_0_0_,
        address0_.address_line_2 as address_3_0_0_,
        address0_.address_name as address_4_0_0_,
        address0_.city as city5_0_0_,
        address0_.postcode as postcode6_0_0_ 
    from
        address address0_ 
    where
        address0_.address_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@71e35c4: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@71e35c4: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@22a10ac6]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_0_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_0_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_0_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_0_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_0_] : [VARCHAR]) - [00000]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@22a10ac6]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@22a10ac6]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@71e35c4: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@71e35c4: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Address#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 23ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@7ff8a9dc], method [public void ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.findAddressTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@201c3cda testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@7ff8a9dc, testMethod = findAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@503df2d0]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@7f37b6d9] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@5e1dde44] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [f7de977d-add4-40db-8798-1431560aec83]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@26fb4d06]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@201c3cda testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@7ff8a9dc, testMethod = findAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@201c3cda testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@7ff8a9dc, testMethod = findAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@c269425]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@201c3cda testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@c269425, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 54, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.AddressRepository ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.addressRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'addressRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.AddressRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@c269425]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@c269425], method [public void ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.updateAddressTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@201c3cda testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@c269425, testMethod = updateAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'AddressRepositoryJpaImplTest.updateAddressTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@201c3cda testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@c269425, testMethod = updateAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 55, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@201c3cda testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@c269425, testMethod = updateAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.updateAddressTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [467084e6-558c-4339-bfb5-ff78e1044ef1] at timestamp: 14689325628
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1507c3c3]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@655a01d8] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@c29fe36] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@201c3cda testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@c269425, testMethod = updateAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@c29fe36] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Address#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        address0_.address_id as address_1_0_0_,
        address0_.address_line_1 as address_2_0_0_,
        address0_.address_line_2 as address_3_0_0_,
        address0_.address_name as address_4_0_0_,
        address0_.city as city5_0_0_,
        address0_.postcode as postcode6_0_0_ 
    from
        address address0_ 
    where
        address0_.address_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@6614bd4b: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@6614bd4b: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@4d266391]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_0_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_0_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_0_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_0_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_0_] : [VARCHAR]) - [00000]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@4d266391]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@4d266391]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@6614bd4b: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@6614bd4b: select address0_.address_id as address_1_0_0_, address0_.address_line_1 as address_2_0_0_, address0_.address_line_2 as address_3_0_0_, address0_.address_name as address_4_0_0_, address0_.city as city5_0_0_, address0_.postcode as postcode6_0_0_ from address address0_ where address0_.address_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Address#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 23ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@c29fe36] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.AbstractSaveEventListener - Persistent instance of: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultMergeEventListener - Ignoring persistent instance
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object) took 2ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@c29fe36] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 2ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@c269425], method [public void ro.estore.model.repository.impl.AddressRepositoryJpaImplTest.updateAddressTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@201c3cda testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@c269425, testMethod = updateAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@3b5c665c]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@c29fe36] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@655a01d8] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [467084e6-558c-4339-bfb5-ff78e1044ef1]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@78e17a99]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@201c3cda testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@c269425, testMethod = updateAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@201c3cda testClass = AddressRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.AddressRepositoryJpaImplTest@c269425, testMethod = updateAddressTest@AddressRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] TRACE context.TestContextManager - afterTestClass(): class [ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@201c3cda testClass = AddressRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4c86da0c testClass = AddressRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] TRACE support.ContextLoaderUtils - Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], classes=[class ro.estore.model.config.JpaHibernateTestConfig], loader=interface org.springframework.test.context.ContextLoader, inheritInitializers=true, locations=[], initializers=[], inheritLocations=true)] for declaring class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest].
 [main] TRACE support.ContextLoaderUtils - Resolved context configuration attributes: [ContextConfigurationAttributes@7ab4ae59 declaringClass = 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@7ab4ae59 declaringClass = 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] TRACE support.AbstractTestContextBootstrapper - Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@7ab4ae59 declaringClass = 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@7ab4ae59 declaringClass = 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] TRACE support.SpringFactoriesLoader - Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]
 [main] TRACE support.ApplicationContextInitializerUtils - Processing context initializers for context configuration attributes [ContextConfigurationAttributes@7ab4ae59 declaringClass = 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2aaf152b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@39bbd9e0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@27fe9713, org.springframework.test.context.transaction.TransactionalTestExecutionListener@11c3ff67, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4397a639]
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2aaf152b
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@39bbd9e0
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@27fe9713
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@11c3ff67
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4397a639
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - beforeTestClass(): class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@24841372 testClass = OrderRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@79a7bfbc]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@24841372 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@79a7bfbc, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 56, missCount = 1]
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest' to bean named 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.OrderRepository ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.orderRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest' to bean named 'orderRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderRepositoryJpaImplTest.setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@79a7bfbc]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.setUp()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderRepositoryJpaImplTest.updateOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.updateOrderTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderRepositoryJpaImplTest.deleteOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.deleteOrderTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderRepositoryJpaImplTest.findOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.findOrderTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@79a7bfbc], method [public void ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.findOrderTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@24841372 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@79a7bfbc, testMethod = findOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderRepositoryJpaImplTest.findOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@24841372 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@79a7bfbc, testMethod = findOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@6c806c8b transactionManagerName = '', defaultRollback = true] for test class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 57, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@24841372 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@79a7bfbc, testMethod = findOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.findOrderTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [61cc9fee-5a34-4b7d-aede-674f2876c032] at timestamp: 14689325629
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@56399b9e]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@34b9eb03] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@43fda8d9] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@24841372 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@79a7bfbc, testMethod = findOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@43fda8d9] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Order#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        order0_.order_id as order_id1_1_0_,
        order0_.address_id as address_2_1_0_,
        address1_.address_id as address_1_0_1_,
        address1_.address_line_1 as address_2_0_1_,
        address1_.address_line_2 as address_3_0_1_,
        address1_.address_name as address_4_0_1_,
        address1_.city as city5_0_1_,
        address1_.postcode as postcode6_0_1_ 
    from
        `
    order` order0_ inner join
        address address1_ 
            on order0_.address_id=address1_.address_id 
    where
        order0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@49d831c2: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@49d831c2: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@53a7a60c]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_1_0_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_1_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_1_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_1_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_1_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_1_] : [VARCHAR]) - [00000]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@53a7a60c]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@53a7a60c]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@49d831c2: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@49d831c2: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Order#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 63ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@79a7bfbc], method [public void ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.findOrderTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@24841372 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@79a7bfbc, testMethod = findOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@600f5704]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@43fda8d9] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@34b9eb03] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [61cc9fee-5a34-4b7d-aede-674f2876c032]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@2503ec73]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@24841372 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@79a7bfbc, testMethod = findOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@24841372 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@79a7bfbc, testMethod = findOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@606f81b5]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@24841372 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@606f81b5, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 58, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.OrderRepository ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.orderRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@606f81b5]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@606f81b5], method [public void ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.deleteOrderTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@24841372 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@606f81b5, testMethod = deleteOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderRepositoryJpaImplTest.deleteOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@24841372 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@606f81b5, testMethod = deleteOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 59, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@24841372 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@606f81b5, testMethod = deleteOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.deleteOrderTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [3eab6ee1-22e2-46f7-a311-cb573c9e84df] at timestamp: 14689325631
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6296474f]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@4288d98e] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@169268a7] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@24841372 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@606f81b5, testMethod = deleteOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@169268a7] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Order#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        order0_.order_id as order_id1_1_0_,
        order0_.address_id as address_2_1_0_,
        address1_.address_id as address_1_0_1_,
        address1_.address_line_1 as address_2_0_1_,
        address1_.address_line_2 as address_3_0_1_,
        address1_.address_name as address_4_0_1_,
        address1_.city as city5_0_1_,
        address1_.postcode as postcode6_0_1_ 
    from
        `
    order` order0_ inner join
        address address1_ 
            on order0_.address_id=address1_.address_id 
    where
        order0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@285c6918: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@285c6918: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@78a0ff63]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_1_0_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_1_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_1_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_1_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_1_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_1_] : [VARCHAR]) - [00000]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@78a0ff63]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@78a0ff63]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@285c6918: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@285c6918: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Order#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 54ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@169268a7] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@169268a7] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Cascade ACTION_DELETE for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchases0_.order_id as order_id4_3_0_,
        purchases0_.purchase_id as purchase1_3_0_,
        purchases0_.purchase_id as purchase1_3_1_,
        purchases0_.product_id as product_3_3_1_,
        purchases0_.quantity as quantity2_3_1_,
        product1_.product_id as product_1_2_2_,
        product1_.brand as brand2_2_2_,
        product1_.description as descript3_2_2_,
        product1_.name as name4_2_2_,
        product1_.price as price5_2_2_,
        product1_.stock as stock6_2_2_ 
    from
        purchase purchases0_ 
    inner join
        product product1_ 
            on purchases0_.product_id=product1_.product_id 
    where
        purchases0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@4d499d65: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@4d499d65: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@313f8301]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@313f8301]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_1_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_2_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_2_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_2_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_2_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_2_] : [INTEGER]) - [14]
 [main] TRACE sql.BasicExtractor - extracted value ([order_id4_3_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@313f8301, coll=[ro.estore.model.entitiy.Order.purchases#1]>@661d88a]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@313f8301, coll=[ro.estore.model.entitiy.Order.purchases#1]>@661d88a]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@313f8301]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@313f8301]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@4d499d65: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@4d499d65: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] TRACE spi.CascadingActions$1 - Cascading to delete: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.Cascade - Done cascade ACTION_DELETE for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object) took 55ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@169268a7] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@606f81b5], method [public void ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.deleteOrderTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@24841372 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@606f81b5, testMethod = deleteOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@4b0b64cc]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=2} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@169268a7] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@4288d98e] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [3eab6ee1-22e2-46f7-a311-cb573c9e84df]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@59ce792e]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@24841372 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@606f81b5, testMethod = deleteOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@24841372 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@606f81b5, testMethod = deleteOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@4860827a]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@24841372 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@4860827a, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 60, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.OrderRepository ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.orderRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'orderRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.OrderRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@4860827a]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@4860827a], method [public void ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.updateOrderTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@24841372 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@4860827a, testMethod = updateOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'OrderRepositoryJpaImplTest.updateOrderTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@24841372 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@4860827a, testMethod = updateOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 61, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@24841372 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@4860827a, testMethod = updateOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.updateOrderTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [38800515-9ff2-4f16-a67d-b46c81c183a2] at timestamp: 14689325632
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3662bdff]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@1bb15351] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@4fa822ad] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@24841372 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@4860827a, testMethod = updateOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@4fa822ad] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Order#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        order0_.order_id as order_id1_1_0_,
        order0_.address_id as address_2_1_0_,
        address1_.address_id as address_1_0_1_,
        address1_.address_line_1 as address_2_0_1_,
        address1_.address_line_2 as address_3_0_1_,
        address1_.address_name as address_4_0_1_,
        address1_.city as city5_0_1_,
        address1_.postcode as postcode6_0_1_ 
    from
        `
    order` order0_ inner join
        address address1_ 
            on order0_.address_id=address1_.address_id 
    where
        order0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@597f0937: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@597f0937: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@7ad1caa2]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_1_0_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_1_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_1_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_1_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_1_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_1_] : [VARCHAR]) - [00000]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@7ad1caa2]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@7ad1caa2]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@597f0937: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@597f0937: select order0_.order_id as order_id1_1_0_, order0_.address_id as address_2_1_0_, address1_.address_id as address_1_0_1_, address1_.address_line_1 as address_2_0_1_, address1_.address_line_2 as address_3_0_1_, address1_.address_name as address_4_0_1_, address1_.city as city5_0_1_, address1_.postcode as postcode6_0_1_ from `order` order0_ inner join address address1_ on order0_.address_id=address1_.address_id where order0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Order#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 37ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@4fa822ad] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.AbstractSaveEventListener - Persistent instance of: ro.estore.model.entitiy.Order
 [main] TRACE internal.DefaultMergeEventListener - Ignoring persistent instance
 [main] TRACE internal.Cascade - Processing cascade ACTION_MERGE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Cascade ACTION_MERGE for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.Cascade - Done cascade ACTION_MERGE for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.Cascade - Done processing cascade ACTION_MERGE for: ro.estore.model.entitiy.Order
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object) took 4ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@4fa822ad] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Order#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 2ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@4860827a], method [public void ro.estore.model.repository.impl.OrderRepositoryJpaImplTest.updateOrderTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@24841372 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@4860827a, testMethod = updateOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@303f1234]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@4fa822ad] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@1bb15351] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [38800515-9ff2-4f16-a67d-b46c81c183a2]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@24d61e4]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@24841372 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@4860827a, testMethod = updateOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@24841372 testClass = OrderRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.OrderRepositoryJpaImplTest@4860827a, testMethod = updateOrderTest@OrderRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] TRACE context.TestContextManager - afterTestClass(): class [ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@24841372 testClass = OrderRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@77114efe testClass = OrderRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] TRACE support.ContextLoaderUtils - Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], classes=[class ro.estore.model.config.JpaHibernateTestConfig], loader=interface org.springframework.test.context.ContextLoader, inheritInitializers=true, locations=[], initializers=[], inheritLocations=true)] for declaring class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest].
 [main] TRACE support.ContextLoaderUtils - Resolved context configuration attributes: [ContextConfigurationAttributes@3ed34ef5 declaringClass = 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@3ed34ef5 declaringClass = 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] TRACE support.AbstractTestContextBootstrapper - Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@3ed34ef5 declaringClass = 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@3ed34ef5 declaringClass = 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] TRACE support.SpringFactoriesLoader - Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]
 [main] TRACE support.ApplicationContextInitializerUtils - Processing context initializers for context configuration attributes [ContextConfigurationAttributes@3ed34ef5 declaringClass = 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@37b56ac7, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@37c41ec0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@35a0e495, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5399f6c5, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4fe64d23]
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@37b56ac7
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@37c41ec0
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@35a0e495
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@5399f6c5
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4fe64d23
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - beforeTestClass(): class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@76464795]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@76464795, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 62, missCount = 1]
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest' to bean named 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.productRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest' to bean named 'productRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest' to bean named 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductRepositoryJpaImplTest.setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@76464795]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.setUp()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductRepositoryJpaImplTest.updateProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.updateProductTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductRepositoryJpaImplTest.createProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.createProductTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductRepositoryJpaImplTest.deleteProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.deleteProductTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductRepositoryJpaImplTest.findProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.findProductTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@76464795], method [public void ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.deleteProductTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@76464795, testMethod = deleteProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductRepositoryJpaImplTest.deleteProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@76464795, testMethod = deleteProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@6c806c8b transactionManagerName = '', defaultRollback = true] for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 63, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@76464795, testMethod = deleteProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.deleteProductTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [f53fc7ac-91ac-4029-99f3-528f0aef4e8b] at timestamp: 14689325634
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7b66322e]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@63538bb4] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@24534cb0] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@76464795, testMethod = deleteProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@24534cb0] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        product0_.product_id as product_1_2_0_,
        product0_.brand as brand2_2_0_,
        product0_.description as descript3_2_0_,
        product0_.name as name4_2_0_,
        product0_.price as price5_2_0_,
        product0_.stock as stock6_2_0_ 
    from
        product product0_ 
    where
        product0_.product_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@5a50d9fc: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@5a50d9fc: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@106d77da]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_0_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_0_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_0_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_0_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_0_] : [INTEGER]) - [14]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@106d77da]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@106d77da]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@5a50d9fc: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@5a50d9fc: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Product#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 30ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@24534cb0] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@24534cb0] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Product#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@24534cb0] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 3ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@76464795], method [public void ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.deleteProductTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@76464795, testMethod = deleteProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@5114b7c7]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=1} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@24534cb0] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@63538bb4] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [f53fc7ac-91ac-4029-99f3-528f0aef4e8b]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@dd71b20]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@76464795, testMethod = deleteProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@76464795, testMethod = deleteProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@767f6ee7]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@767f6ee7, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 64, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.productRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@767f6ee7]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@767f6ee7], method [public void ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.createProductTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@767f6ee7, testMethod = createProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductRepositoryJpaImplTest.createProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@767f6ee7, testMethod = createProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 65, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@767f6ee7, testMethod = createProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.createProductTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [98c88c9c-2ffa-45b2-9ecd-d644799cdd7d] at timestamp: 14689325635
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@370c1968]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@2f0bfe17] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@3206174f] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@767f6ee7, testMethod = createProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Product ro.estore.util.TestUtils.createProduct(String)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Product ro.estore.util.TestUtils.createProduct(String) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@3206174f] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Product
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Product#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Product] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Product#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Product#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Product (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        product
        (brand, description, name, price, stock) 
    values
        (?, ?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@15eb0ae9: insert into product (brand, description, name, price, stock) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Product#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [brand]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [desc_1]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [prod name_1]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [DOUBLE] - [21.542]
 [main] TRACE sql.BasicBinder - binding parameter [5] as [INTEGER] - [543]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 7
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@65e0b505]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@65e0b505]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@15eb0ae9: insert into product (brand, description, name, price, stock) values ('brand', 'desc_1', 'prod name_1', 21.542, 543)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@15eb0ae9: insert into product (brand, description, name, price, stock) values ('brand', 'desc_1', 'prod name_1', 21.542, 543)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object) took 15ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@767f6ee7], method [public void ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.createProductTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@767f6ee7, testMethod = createProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@795f5d51]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#7]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@3206174f] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@2f0bfe17] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [98c88c9c-2ffa-45b2-9ecd-d644799cdd7d]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@34aeacd1]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@767f6ee7, testMethod = createProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@767f6ee7, testMethod = createProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@54067fdc]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@54067fdc, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 66, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.productRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@54067fdc]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@54067fdc], method [public void ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.findProductTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@54067fdc, testMethod = findProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductRepositoryJpaImplTest.findProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@54067fdc, testMethod = findProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 67, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@54067fdc, testMethod = findProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.findProductTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [76654f11-7a82-4222-ad31-b412565ff4d3] at timestamp: 14689325635
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@65383667]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@63cd2cd2] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@557a84fe] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@54067fdc, testMethod = findProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@557a84fe] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        product0_.product_id as product_1_2_0_,
        product0_.brand as brand2_2_0_,
        product0_.description as descript3_2_0_,
        product0_.name as name4_2_0_,
        product0_.price as price5_2_0_,
        product0_.stock as stock6_2_0_ 
    from
        product product0_ 
    where
        product0_.product_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@6deee370: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@6deee370: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@49c17ba4]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_0_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_0_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_0_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_0_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_0_] : [INTEGER]) - [14]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@49c17ba4]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@49c17ba4]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@6deee370: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@6deee370: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Product#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 24ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@54067fdc], method [public void ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.findProductTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@54067fdc, testMethod = findProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@423c5404]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@557a84fe] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@63cd2cd2] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [76654f11-7a82-4222-ad31-b412565ff4d3]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@5853ca50]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@54067fdc, testMethod = findProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@54067fdc, testMethod = findProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@1a0d96a5]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@1a0d96a5, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 68, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.productRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.ProductRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@1a0d96a5]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@1a0d96a5], method [public void ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.updateProductTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@1a0d96a5, testMethod = updateProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'ProductRepositoryJpaImplTest.updateProductTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@1a0d96a5, testMethod = updateProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 69, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@1a0d96a5, testMethod = updateProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.updateProductTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [5fb85db9-3f9e-48e7-a710-3107927d0a70] at timestamp: 14689325636
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4a37191a]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@5854a18] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@d5556bf] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@1a0d96a5, testMethod = updateProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@d5556bf] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        product0_.product_id as product_1_2_0_,
        product0_.brand as brand2_2_0_,
        product0_.description as descript3_2_0_,
        product0_.name as name4_2_0_,
        product0_.price as price5_2_0_,
        product0_.stock as stock6_2_0_ 
    from
        product product0_ 
    where
        product0_.product_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@791c12e3: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@791c12e3: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@b112b13]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_0_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_0_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_0_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_0_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_0_] : [INTEGER]) - [14]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@b112b13]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@b112b13]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@791c12e3: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@791c12e3: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Product#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 21ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@d5556bf] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.AbstractSaveEventListener - Persistent instance of: ro.estore.model.entitiy.Product
 [main] TRACE internal.DefaultPersistEventListener - Ignoring persistent instance
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@d5556bf] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.AbstractSaveEventListener - Persistent instance of: ro.estore.model.entitiy.Product
 [main] TRACE internal.DefaultMergeEventListener - Ignoring persistent instance
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@d5556bf] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@1a0d96a5], method [public void ro.estore.model.repository.impl.ProductRepositoryJpaImplTest.updateProductTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@1a0d96a5, testMethod = updateProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@3ac3f6f]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@d5556bf] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@5854a18] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [5fb85db9-3f9e-48e7-a710-3107927d0a70]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@1abebef3]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@1a0d96a5, testMethod = updateProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.ProductRepositoryJpaImplTest@1a0d96a5, testMethod = updateProductTest@ProductRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] TRACE context.TestContextManager - afterTestClass(): class [ro.estore.model.repository.impl.ProductRepositoryJpaImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@58437801 testClass = ProductRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6af5bbd0 testClass = ProductRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] TRACE support.ContextLoaderUtils - Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], classes=[class ro.estore.model.config.JpaHibernateTestConfig], loader=interface org.springframework.test.context.ContextLoader, inheritInitializers=true, locations=[], initializers=[], inheritLocations=true)] for declaring class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest].
 [main] TRACE support.ContextLoaderUtils - Resolved context configuration attributes: [ContextConfigurationAttributes@5fbe155 declaringClass = 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@5fbe155 declaringClass = 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] TRACE support.AbstractTestContextBootstrapper - Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@5fbe155 declaringClass = 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@5fbe155 declaringClass = 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] TRACE support.SpringFactoriesLoader - Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]
 [main] TRACE support.ApplicationContextInitializerUtils - Processing context initializers for context configuration attributes [ContextConfigurationAttributes@5fbe155 declaringClass = 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6504a875, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@35e26d05, org.springframework.test.context.support.DirtiesContextTestExecutionListener@29fa6b65, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7c72ecc, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@47406941]
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6504a875
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@35e26d05
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@29fa6b65
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@7c72ecc
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@47406941
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - beforeTestClass(): class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@61ecbee9 testClass = PurchaseRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@2538bc06]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@61ecbee9 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@2538bc06, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 70, missCount = 1]
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest' to bean named 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.PurchaseRepository ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.purchaseRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest' to bean named 'purchaseRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseRepositoryJpaImplTest.setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@2538bc06]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.setUp()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseRepositoryJpaImplTest.updatePurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.updatePurchaseTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseRepositoryJpaImplTest.deletePurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.deletePurchaseTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseRepositoryJpaImplTest.findPurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.findPurchaseTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@2538bc06], method [public void ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.findPurchaseTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@61ecbee9 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@2538bc06, testMethod = findPurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseRepositoryJpaImplTest.findPurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@61ecbee9 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@2538bc06, testMethod = findPurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@6c806c8b transactionManagerName = '', defaultRollback = true] for test class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 71, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@61ecbee9 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@2538bc06, testMethod = findPurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.findPurchaseTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [234189d3-fa45-472e-bdba-8fb1805e1203] at timestamp: 14689325638
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7d57dbb5]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@630b6190] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@532e27ab] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@61ecbee9 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@2538bc06, testMethod = findPurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@532e27ab] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchase0_.purchase_id as purchase1_3_0_,
        purchase0_.product_id as product_3_3_0_,
        purchase0_.quantity as quantity2_3_0_,
        product1_.product_id as product_1_2_1_,
        product1_.brand as brand2_2_1_,
        product1_.description as descript3_2_1_,
        product1_.name as name4_2_1_,
        product1_.price as price5_2_1_,
        product1_.stock as stock6_2_1_ 
    from
        purchase purchase0_ 
    inner join
        product product1_ 
            on purchase0_.product_id=product1_.product_id 
    where
        purchase0_.purchase_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@1cdc1bbc: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@1cdc1bbc: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@5f95f1e1]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_0_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_0_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_1_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_1_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_1_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_1_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_1_] : [INTEGER]) - [14]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@5f95f1e1]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@5f95f1e1]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@1cdc1bbc: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@1cdc1bbc: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Purchase#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 40ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@2538bc06], method [public void ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.findPurchaseTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@61ecbee9 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@2538bc06, testMethod = findPurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@39e69ea7]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@532e27ab] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@630b6190] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [234189d3-fa45-472e-bdba-8fb1805e1203]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@490c7a83]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@61ecbee9 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@2538bc06, testMethod = findPurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@61ecbee9 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@2538bc06, testMethod = findPurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@7e72a6cc]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@61ecbee9 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@7e72a6cc, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 72, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.PurchaseRepository ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.purchaseRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@7e72a6cc]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@7e72a6cc], method [public void ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.deletePurchaseTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@61ecbee9 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@7e72a6cc, testMethod = deletePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseRepositoryJpaImplTest.deletePurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@61ecbee9 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@7e72a6cc, testMethod = deletePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 73, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@61ecbee9 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@7e72a6cc, testMethod = deletePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.deletePurchaseTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [bfbe58a5-8384-4f93-a132-aa098c211b1a] at timestamp: 14689325638
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2cd62003]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@61ab89b0] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@5478ce1e] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@61ecbee9 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@7e72a6cc, testMethod = deletePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5478ce1e] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchase0_.purchase_id as purchase1_3_0_,
        purchase0_.product_id as product_3_3_0_,
        purchase0_.quantity as quantity2_3_0_,
        product1_.product_id as product_1_2_1_,
        product1_.brand as brand2_2_1_,
        product1_.description as descript3_2_1_,
        product1_.name as name4_2_1_,
        product1_.price as price5_2_1_,
        product1_.stock as stock6_2_1_ 
    from
        purchase purchase0_ 
    inner join
        product product1_ 
            on purchase0_.product_id=product1_.product_id 
    where
        purchase0_.purchase_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@5edc70ed: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@5edc70ed: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@4317850d]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_0_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_0_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_1_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_1_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_1_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_1_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_1_] : [INTEGER]) - [14]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@4317850d]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@4317850d]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@5edc70ed: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@5edc70ed: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Purchase#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 38ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5478ce1e] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5478ce1e] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Purchase#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5478ce1e] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 3ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@7e72a6cc], method [public void ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.deletePurchaseTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@61ecbee9 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@7e72a6cc, testMethod = deletePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@2ef0dd86]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=1} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@5478ce1e] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@61ab89b0] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [bfbe58a5-8384-4f93-a132-aa098c211b1a]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@3337d04c]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@61ecbee9 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@7e72a6cc, testMethod = deletePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@61ecbee9 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@7e72a6cc, testMethod = deletePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@6de6faa6]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@61ecbee9 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@6de6faa6, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 74, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.PurchaseRepository ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.purchaseRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'purchaseRepositoryJpaImpl'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@6de6faa6]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@6de6faa6], method [public void ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.updatePurchaseTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@61ecbee9 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@6de6faa6, testMethod = updatePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'PurchaseRepositoryJpaImplTest.updatePurchaseTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@61ecbee9 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@6de6faa6, testMethod = updatePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 75, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@61ecbee9 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@6de6faa6, testMethod = updatePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.updatePurchaseTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [6ae2833d-2fae-4f2a-b762-0bd0749e7c77] at timestamp: 14689325639
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@43c87306]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@14f40030] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@4c447c09] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@61ecbee9 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@6de6faa6, testMethod = updatePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@4c447c09] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchase0_.purchase_id as purchase1_3_0_,
        purchase0_.product_id as product_3_3_0_,
        purchase0_.quantity as quantity2_3_0_,
        product1_.product_id as product_1_2_1_,
        product1_.brand as brand2_2_1_,
        product1_.description as descript3_2_1_,
        product1_.name as name4_2_1_,
        product1_.price as price5_2_1_,
        product1_.stock as stock6_2_1_ 
    from
        purchase purchase0_ 
    inner join
        product product1_ 
            on purchase0_.product_id=product1_.product_id 
    where
        purchase0_.purchase_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@593a6726: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@593a6726: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@596a7f44]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_0_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_0_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_1_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_1_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_1_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_1_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_1_] : [INTEGER]) - [14]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@596a7f44]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@596a7f44]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@593a6726: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@593a6726: select purchase0_.purchase_id as purchase1_3_0_, purchase0_.product_id as product_3_3_0_, purchase0_.quantity as quantity2_3_0_, product1_.product_id as product_1_2_1_, product1_.brand as brand2_2_1_, product1_.description as descript3_2_1_, product1_.name as name4_2_1_, product1_.price as price5_2_1_, product1_.stock as stock6_2_1_ from purchase purchase0_ inner join product product1_ on purchase0_.product_id=product1_.product_id where purchase0_.purchase_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Purchase#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 49ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@4c447c09] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.AbstractSaveEventListener - Persistent instance of: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultMergeEventListener - Ignoring persistent instance
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@4c447c09] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 4ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@6de6faa6], method [public void ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest.updatePurchaseTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@61ecbee9 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@6de6faa6, testMethod = updatePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@869d87c]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.Purchase#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@4c447c09] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@14f40030] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [6ae2833d-2fae-4f2a-b762-0bd0749e7c77]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@2f3166a]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@61ecbee9 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@6de6faa6, testMethod = updatePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@61ecbee9 testClass = PurchaseRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest@6de6faa6, testMethod = updatePurchaseTest@PurchaseRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] TRACE context.TestContextManager - afterTestClass(): class [ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@61ecbee9 testClass = PurchaseRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1bb740f2 testClass = PurchaseRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] TRACE support.ContextLoaderUtils - Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], classes=[class ro.estore.model.config.JpaHibernateTestConfig], loader=interface org.springframework.test.context.ContextLoader, inheritInitializers=true, locations=[], initializers=[], inheritLocations=true)] for declaring class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest].
 [main] TRACE support.ContextLoaderUtils - Resolved context configuration attributes: [ContextConfigurationAttributes@6dd1f638 declaringClass = 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@6dd1f638 declaringClass = 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] TRACE support.AbstractTestContextBootstrapper - Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@6dd1f638 declaringClass = 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@6dd1f638 declaringClass = 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] TRACE support.SpringFactoriesLoader - Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]
 [main] TRACE support.ApplicationContextInitializerUtils - Processing context initializers for context configuration attributes [ContextConfigurationAttributes@6dd1f638 declaringClass = 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4fd05028, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3a2d3909, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4fb392c4, org.springframework.test.context.transaction.TransactionalTestExecutionListener@194d329e, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@54d1608f]
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4fd05028
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@3a2d3909
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@4fb392c4
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@194d329e
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@54d1608f
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - beforeTestClass(): class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@24386839]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@24386839, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 76, missCount = 1]
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest' to bean named 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserProfileRepository ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.userProfileRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest' to bean named 'userProfileRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest' to bean named 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileRepositoryJpaImplTest.setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@24386839]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.setUp()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileRepositoryJpaImplTest.createUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.createUserProfileTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileRepositoryJpaImplTest.deleteUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.deleteUserProfileTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileRepositoryJpaImplTest.findUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.findUserProfileTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileRepositoryJpaImplTest.updateUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.updateUserProfileTest()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@24386839], method [public void ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.findUserProfileTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@24386839, testMethod = findUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileRepositoryJpaImplTest.findUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@24386839, testMethod = findUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@6c806c8b transactionManagerName = '', defaultRollback = true] for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 77, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@24386839, testMethod = findUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.findUserProfileTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [532f0522-899c-4800-8a34-b2e81f53bab4] at timestamp: 14689325641
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@244418a]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@4b5a078a] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@4c361f63] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@24386839, testMethod = findUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@4c361f63] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        userprofil0_.user_profile_id as user_pro1_5_0_,
        userprofil0_.email_address as email_ad2_5_0_,
        userprofil0_.name as name3_5_0_,
        userprofil0_.phone_number as phone_nu4_5_0_,
        userprofil0_.surname as surname5_5_0_ 
    from
        user_profile userprofil0_ 
    where
        userprofil0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@6ed922e1: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@6ed922e1: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@4eb166a1]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_0_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_0_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_0_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_0_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@4eb166a1]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@4eb166a1]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@6ed922e1: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@6ed922e1: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.UserProfile#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 72ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@24386839], method [public void ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.findUserProfileTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@24386839, testMethod = findUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@e146f93]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@4c361f63] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@4b5a078a] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [532f0522-899c-4800-8a34-b2e81f53bab4]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@4bd5849e]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@24386839, testMethod = findUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@24386839, testMethod = findUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@7cdbaa50]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@7cdbaa50, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 78, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserProfileRepository ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.userProfileRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@7cdbaa50]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@7cdbaa50], method [public void ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.updateUserProfileTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@7cdbaa50, testMethod = updateUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileRepositoryJpaImplTest.updateUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@7cdbaa50, testMethod = updateUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 79, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@7cdbaa50, testMethod = updateUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.updateUserProfileTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [6b82475e-1e68-4965-b686-f3394a561793] at timestamp: 14689325642
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@526b2f3e]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@6f2e1024] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@536d97f8] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@7cdbaa50, testMethod = updateUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@536d97f8] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        userprofil0_.user_profile_id as user_pro1_5_0_,
        userprofil0_.email_address as email_ad2_5_0_,
        userprofil0_.name as name3_5_0_,
        userprofil0_.phone_number as phone_nu4_5_0_,
        userprofil0_.surname as surname5_5_0_ 
    from
        user_profile userprofil0_ 
    where
        userprofil0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@3c50ad4b: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@3c50ad4b: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@37496720]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_0_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_0_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_0_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_0_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@37496720]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@37496720]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@3c50ad4b: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@3c50ad4b: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.UserProfile#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 23ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@536d97f8] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.AbstractSaveEventListener - Persistent instance of: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.DefaultMergeEventListener - Ignoring persistent instance
 [main] TRACE internal.Cascade - Processing cascade ACTION_MERGE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Cascade ACTION_MERGE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done cascade ACTION_MERGE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done processing cascade ACTION_MERGE for: ro.estore.model.entitiy.UserProfile
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object) took 3ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@536d97f8] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 2ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@7cdbaa50], method [public void ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.updateUserProfileTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@7cdbaa50, testMethod = updateUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@2e17a321]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@536d97f8] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@6f2e1024] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [6b82475e-1e68-4965-b686-f3394a561793]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@521bb1a4]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@7cdbaa50, testMethod = updateUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@7cdbaa50, testMethod = updateUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@35f3a22c]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@35f3a22c, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 80, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserProfileRepository ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.userProfileRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@35f3a22c]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@35f3a22c], method [public void ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.deleteUserProfileTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@35f3a22c, testMethod = deleteUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileRepositoryJpaImplTest.deleteUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@35f3a22c, testMethod = deleteUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 81, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@35f3a22c, testMethod = deleteUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.deleteUserProfileTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [ad81052b-ec1b-4d0e-a85c-33c558ee18ae] at timestamp: 14689325643
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@35ee466f]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@32e652b6] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@4ba02375] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@35f3a22c, testMethod = deleteUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@4ba02375] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        userprofil0_.user_profile_id as user_pro1_5_0_,
        userprofil0_.email_address as email_ad2_5_0_,
        userprofil0_.name as name3_5_0_,
        userprofil0_.phone_number as phone_nu4_5_0_,
        userprofil0_.surname as surname5_5_0_ 
    from
        user_profile userprofil0_ 
    where
        userprofil0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@7593ea79: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@7593ea79: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@3289079a]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_0_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_0_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_0_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_0_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@3289079a]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@3289079a]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@7593ea79: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@7593ea79: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.UserProfile#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 25ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@4ba02375] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@4ba02375] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Cascade ACTION_DELETE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        addresses0_.user_profile_id as user_pro7_0_0_,
        addresses0_.address_id as address_1_0_0_,
        addresses0_.address_id as address_1_0_1_,
        addresses0_.address_line_1 as address_2_0_1_,
        addresses0_.address_line_2 as address_3_0_1_,
        addresses0_.address_name as address_4_0_1_,
        addresses0_.city as city5_0_1_,
        addresses0_.postcode as postcode6_0_1_ 
    from
        address addresses0_ 
    where
        addresses0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@12a14b74: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@12a14b74: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@68ee3b6d]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@68ee3b6d]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_1_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_1_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_1_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_1_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_1_] : [VARCHAR]) - [00000]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro7_0_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@68ee3b6d, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@2be95d31]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@68ee3b6d, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@2be95d31]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@68ee3b6d]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@68ee3b6d]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@12a14b74: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@12a14b74: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] TRACE spi.CascadingActions$1 - Cascading to delete: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.Cascade - Done cascade ACTION_DELETE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Deleting orphans for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done deleting orphans for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object) took 40ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@4ba02375] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 2ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@35f3a22c], method [public void ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.deleteUserProfileTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@35f3a22c, testMethod = deleteUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@338b49d3]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=2} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@4ba02375] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@32e652b6] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [ad81052b-ec1b-4d0e-a85c-33c558ee18ae]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@2aa7399c]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@35f3a22c, testMethod = deleteUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@35f3a22c, testMethod = deleteUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@11eed657]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@11eed657, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 82, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserProfileRepository ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.userProfileRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userProfileRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@11eed657]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@11eed657], method [public void ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.createUserProfileTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@11eed657, testMethod = createUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserProfileRepositoryJpaImplTest.createUserProfileTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@11eed657, testMethod = createUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 83, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@11eed657, testMethod = createUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.createUserProfileTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [12a68547-af9b-4bda-825d-10d8a38e0d5c] at timestamp: 14689325644
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6d60899e]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@65eb76cd] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@6415f61e] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@11eed657, testMethod = createUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: UserProfile ro.estore.util.TestUtils.createUserProfile(String)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: UserProfile ro.estore.util.TestUtils.createUserProfile(String) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@6415f61e] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.UserProfile#<null>]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.WrapVisitor - Wrapped collection in role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.UserProfile] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.UserProfile#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.UserProfile#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.UserProfile (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        user_profile
        (email_address, name, phone_number, surname) 
    values
        (?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@6468a7b6: insert into user_profile (email_address, name, phone_number, surname) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.UserProfile#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [ceva@email.com_1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [name_1]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [0123456789_1]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [VARCHAR] - [surname_1]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 8
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@2f860823]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@2f860823]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@6468a7b6: insert into user_profile (email_address, name, phone_number, surname) values ('ceva@email.com_1', 'name_1', '0123456789_1', 'surname_1')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@6468a7b6: insert into user_profile (email_address, name, phone_number, surname) values ('ceva@email.com_1', 'name_1', '0123456789_1', 'surname_1')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Address
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Address] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Address (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        address
        (address_line_1, address_line_2, address_name, city, postcode) 
    values
        (?, ?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@4d68b571: insert into address (address_line_1, address_line_2, address_name, city, postcode) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [addr line 1_1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [addr line 2_1]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [ceva@email.com_1]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [VARCHAR] - [city_1]
 [main] TRACE sql.BasicBinder - binding parameter [5] as [VARCHAR] - [postcode_1]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 18
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@52b06bef]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@52b06bef]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@4d68b571: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1', 'addr line 2_1', 'ceva@email.com_1', 'city_1', 'postcode_1')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@4d68b571: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1', 'addr line 2_1', 'ceva@email.com_1', 'city_1', 'postcode_1')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Address
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Address] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Address (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        address
        (address_line_1, address_line_2, address_name, city, postcode) 
    values
        (?, ?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@6232ffdb: insert into address (address_line_1, address_line_2, address_name, city, postcode) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [addr line 1_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [addr line 2_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [ceva@email.com_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [VARCHAR] - [city_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [5] as [VARCHAR] - [postcode_1_2]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 19
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@330c1f61]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@330c1f61]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@6232ffdb: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1_2', 'addr line 2_1_2', 'ceva@email.com_1_2', 'city_1_2', 'postcode_1_2')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@6232ffdb: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1_2', 'addr line 2_1_2', 'ceva@email.com_1_2', 'city_1_2', 'postcode_1_2')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Done cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object) took 80ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@11eed657], method [public void ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest.createUserProfileTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@11eed657, testMethod = createUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@15efda6c]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#8], EntityKey[ro.estore.model.entitiy.Address#19], EntityKey[ro.estore.model.entitiy.Address#18]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@6415f61e] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@65eb76cd] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [12a68547-af9b-4bda-825d-10d8a38e0d5c]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@6056232d]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@11eed657, testMethod = createUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest@11eed657, testMethod = createUserProfileTest@UserProfileRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] TRACE context.TestContextManager - afterTestClass(): class [ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@7e7fe6d testClass = UserProfileRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@541179e7 testClass = UserProfileRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
 [main] DEBUG context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
 [main] DEBUG context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]
 [main] TRACE support.ContextLoaderUtils - Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], classes=[class ro.estore.model.config.JpaHibernateTestConfig], loader=interface org.springframework.test.context.ContextLoader, inheritInitializers=true, locations=[], initializers=[], inheritLocations=true)] for declaring class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest].
 [main] TRACE support.ContextLoaderUtils - Resolved context configuration attributes: [ContextConfigurationAttributes@f9f3928 declaringClass = 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@f9f3928 declaringClass = 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] TRACE support.AbstractTestContextBootstrapper - Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] TRACE support.AbstractTestContextBootstrapper - Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@f9f3928 declaringClass = 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.AbstractDelegatingSmartContextLoader - Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@f9f3928 declaringClass = 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
 [main] TRACE support.SpringFactoriesLoader - Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]
 [main] TRACE support.ApplicationContextInitializerUtils - Processing context initializers for context configuration attributes [ContextConfigurationAttributes@f9f3928 declaringClass = 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']
 [main] DEBUG support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG support.AbstractTestContextBootstrapper - @TestExecutionListeners is not present for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]: using defaults.
 [main] INFO  support.AbstractTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
 [main] INFO  support.AbstractTestContextBootstrapper - Could not instantiate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes (and their required dependencies) available. Offending class: [javax/servlet/ServletContext]
 [main] INFO  support.AbstractTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4667c4c1, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2f9a4401, org.springframework.test.context.support.DirtiesContextTestExecutionListener@22c75c01, org.springframework.test.context.transaction.TransactionalTestExecutionListener@46e64760, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3e5fd2b1]
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4667c4c1
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2f9a4401
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@22c75c01
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@46e64760
 [main] TRACE context.TestContextManager - Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3e5fd2b1
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - beforeTestClass(): class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2f0ed952]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2f0ed952, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 84, missCount = 1]
 [main] TRACE beans.CachedIntrospectionResults - Getting BeanInfo for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Caching PropertyDescriptors for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] TRACE beans.CachedIntrospectionResults - Found bean property 'class' of type [java.lang.Class]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.UserRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' to bean named 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.userRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' to bean named 'userRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.productRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' to bean named 'productRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.UserRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' to bean named 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2f0ed952]
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.setUp()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.findUserByUsernameTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.findUserByUsernameFailTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameFailTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.findUserByUsernameAndPasswordFailTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameAndPasswordFailTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.saveAndFindUserByUsernameAndPasswordTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.saveAndFindUserByUsernameAndPasswordTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.updateUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.updateUserTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.findUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.deleteUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.deleteUserTest()
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.createUser' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.createUser()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Found 'hashCode' method: public native int java.lang.Object.hashCode()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
 [main] DEBUG framework.CglibAopProxy$ProxyCallbackFilter - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2f0ed952], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameAndPasswordFailTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2f0ed952, testMethod = findUserByUsernameAndPasswordFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.findUserByUsernameAndPasswordFailTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2f0ed952, testMethod = findUserByUsernameAndPasswordFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest].
 [main] DEBUG transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@6c806c8b transactionManagerName = '', defaultRollback = true] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 85, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2f0ed952, testMethod = findUserByUsernameAndPasswordFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameAndPasswordFailTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [65e8075f-768f-4f9b-859c-b610f4eb000b] at timestamp: 14689325646
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@68565bc7]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@37baddde] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@5115f590] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2f0ed952, testMethod = findUserByUsernameAndPasswordFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsernameAndPassword(String,String)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5115f590] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG internal.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 )
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 ))
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 ))
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@5115f590] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 ))
 [main] TRACE spi.HQLQueryPlan - Find: select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 )
 [main] TRACE spi.QueryParameters - Named parameters: {param0=user0_0, param1=pass0_0}
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_,
        user0_.password as password2_4_,
        user0_.user_profile_id as user_pro4_4_,
        user0_.username as username3_4_ 
    from
        user user0_ 
    where
        user0_.username=? 
        and user0_.password=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@11e355ca: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED ** and user0_.password=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@11e355ca: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED ** and user0_.password=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [user0_0]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [pass0_0]
 [main] TRACE loader.Loader - Bound [3] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@70d63e05]
 [main] TRACE loader.Loader - Processing result set
 [main] TRACE loader.Loader - Done processing result set (0 rows)
 [main] TRACE loader.Loader - Total objects hydrated: 0
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@11e355ca: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0_0' and user0_.password='pass0_0']
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@70d63e05]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@11e355ca: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0_0' and user0_.password='pass0_0']
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] ERROR impl.UserRepositoryJpaImpl - No user was found (Index: 0, Size: 0)
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsernameAndPassword(UserRepositoryJpaImpl.java:54)
	at ro.estore.model.repository.impl.UserRepositoryJpaImpl$$FastClassBySpringCGLIB$$9dbde216.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at ro.estore.aspect.LoggingAspect.logMethodExecutionTime(LoggingAspect.java:46)
	at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at ro.estore.model.repository.impl.UserRepositoryJpaImpl$$EnhancerBySpringCGLIB$$e58d61f9.findByUsernameAndPassword(<generated>)
	at ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameAndPasswordFailTest(UserRepositoryJpaImplTest.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:252)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:94)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:191)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsernameAndPassword(String,String) took 24ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2f0ed952], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameAndPasswordFailTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2f0ed952, testMethod = findUserByUsernameAndPasswordFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@485e13d7]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@5115f590] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@37baddde] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [65e8075f-768f-4f9b-859c-b610f4eb000b]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@43984213]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2f0ed952, testMethod = findUserByUsernameAndPasswordFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2f0ed952, testMethod = findUserByUsernameAndPasswordFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2ff7a73]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2ff7a73, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 86, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.UserRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.userRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.productRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.UserRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2ff7a73]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2ff7a73], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2ff7a73, testMethod = findUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.findUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2ff7a73, testMethod = findUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 87, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2ff7a73, testMethod = findUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [f5d762b8-6243-45f3-9421-0566f93924f5] at timestamp: 14689325647
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@43acd79e]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@1e1b061] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@38f77cd9] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2ff7a73, testMethod = findUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@38f77cd9] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.User#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.password as password2_4_0_,
        user0_.user_profile_id as user_pro4_4_0_,
        user0_.username as username3_4_0_,
        userprofil1_.user_profile_id as user_pro1_5_1_,
        userprofil1_.email_address as email_ad2_5_1_,
        userprofil1_.name as name3_5_1_,
        userprofil1_.phone_number as phone_nu4_5_1_,
        userprofil1_.surname as surname5_5_1_ 
    from
        user user0_ 
    inner join
        user_profile userprofil1_ 
            on user0_.user_profile_id=userprofil1_.user_profile_id 
    where
        user0_.user_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@4a8e6e89: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@4a8e6e89: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@6fbb4061]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro1_5_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE sql.BasicExtractor - extracted value ([password2_4_0_] : [VARCHAR]) - [pass0]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro4_4_0_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([username3_4_0_] : [VARCHAR]) - [user0]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_1_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_1_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_1_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_1_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@6fbb4061]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@6fbb4061]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@4a8e6e89: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@4a8e6e89: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.User#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 38ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2ff7a73], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2ff7a73, testMethod = findUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@23a918c7]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.User#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1], CollectionKey[ro.estore.model.entitiy.User.orders#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@38f77cd9] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@1e1b061] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [f5d762b8-6243-45f3-9421-0566f93924f5]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@7a45d714]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2ff7a73, testMethod = findUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@2ff7a73, testMethod = findUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4483d35]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4483d35, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 88, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.UserRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.userRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.productRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.UserRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4483d35]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4483d35], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.saveAndFindUserByUsernameAndPasswordTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4483d35, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.saveAndFindUserByUsernameAndPasswordTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4483d35, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 89, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4483d35, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserRepositoryJpaImplTest.saveAndFindUserByUsernameAndPasswordTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [b4212172-084f-426d-acb3-169746366b65] at timestamp: 14689325648
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5a034157]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@2f4ba1ae] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@1391af3b] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4483d35, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsernameAndPassword(String,String)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1391af3b] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG internal.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 )
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 ))
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 ))
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1391af3b] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 ))
 [main] TRACE spi.HQLQueryPlan - Find: select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.username=:param0 ) and ( generatedAlias0.password=:param1 )
 [main] TRACE spi.QueryParameters - Named parameters: {param0=user0, param1=pass0}
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_,
        user0_.password as password2_4_,
        user0_.user_profile_id as user_pro4_4_,
        user0_.username as username3_4_ 
    from
        user user0_ 
    where
        user0_.username=? 
        and user0_.password=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@59fbb34: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED ** and user0_.password=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@59fbb34: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED ** and user0_.password=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [user0]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [pass0]
 [main] TRACE loader.Loader - Bound [3] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@1b6924cb]
 [main] TRACE loader.Loader - Processing result set
 [main] DEBUG logging.DelegatingBasicLogger - Result set row: 0
 [main] TRACE sql.BasicExtractor - extracted value ([user_id1_4_] : [BIGINT]) - [1]
 [main] DEBUG loader.Loader - Result row: EntityKey[ro.estore.model.entitiy.User#1]
 [main] TRACE loader.Loader - Initializing object from ResultSet: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE sql.BasicExtractor - extracted value ([password2_4_] : [VARCHAR]) - [pass0]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro4_4_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([username3_4_] : [VARCHAR]) - [user0]
 [main] TRACE loader.Loader - Done processing result set (1 rows)
 [main] TRACE loader.Loader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        userprofil0_.user_profile_id as user_pro1_5_0_,
        userprofil0_.email_address as email_ad2_5_0_,
        userprofil0_.name as name3_5_0_,
        userprofil0_.phone_number as phone_nu4_5_0_,
        userprofil0_.surname as surname5_5_0_ 
    from
        user_profile userprofil0_ 
    where
        userprofil0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@6ca372ef: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@6ca372ef: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@3ebe4ccc]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_0_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_0_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_0_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_0_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@3ebe4ccc]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@3ebe4ccc]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@6ca372ef: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@6ca372ef: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.UserProfile#1
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@59fbb34: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0' and user0_.password='pass0']
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@1b6924cb]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@59fbb34: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0' and user0_.password='pass0']
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsernameAndPassword(String,String) took 77ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4483d35], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.saveAndFindUserByUsernameAndPasswordTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4483d35, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@6419a0e1]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.User#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1], CollectionKey[ro.estore.model.entitiy.User.orders#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@1391af3b] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@2f4ba1ae] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [b4212172-084f-426d-acb3-169746366b65]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@280d4882]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4483d35, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4483d35, testMethod = saveAndFindUserByUsernameAndPasswordTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@44af588b]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@44af588b, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 90, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.UserRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.userRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.productRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.UserRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@44af588b]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@44af588b], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.updateUserTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@44af588b, testMethod = updateUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.updateUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@44af588b, testMethod = updateUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 91, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@44af588b, testMethod = updateUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserRepositoryJpaImplTest.updateUserTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [bdaba08f-580f-40d4-b5c7-5290ec1b93f2] at timestamp: 14689325649
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@56b859a6]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@590adb41] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@42aae04d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@44af588b, testMethod = updateUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@42aae04d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.User#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.password as password2_4_0_,
        user0_.user_profile_id as user_pro4_4_0_,
        user0_.username as username3_4_0_,
        userprofil1_.user_profile_id as user_pro1_5_1_,
        userprofil1_.email_address as email_ad2_5_1_,
        userprofil1_.name as name3_5_1_,
        userprofil1_.phone_number as phone_nu4_5_1_,
        userprofil1_.surname as surname5_5_1_ 
    from
        user user0_ 
    inner join
        user_profile userprofil1_ 
            on user0_.user_profile_id=userprofil1_.user_profile_id 
    where
        user0_.user_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@43bf5397: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@43bf5397: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@575e572f]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro1_5_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE sql.BasicExtractor - extracted value ([password2_4_0_] : [VARCHAR]) - [pass0]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro4_4_0_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([username3_4_0_] : [VARCHAR]) - [user0]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_1_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_1_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_1_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_1_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@575e572f]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@575e572f]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@43bf5397: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@43bf5397: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.User#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 56ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@42aae04d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.AbstractSaveEventListener - Persistent instance of: ro.estore.model.entitiy.User
 [main] TRACE internal.DefaultMergeEventListener - Ignoring persistent instance
 [main] TRACE internal.Cascade - Processing cascade ACTION_MERGE for: ro.estore.model.entitiy.User
 [main] TRACE internal.Cascade - Cascade ACTION_MERGE for collection: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.Cascade - Done cascade ACTION_MERGE for collection: ro.estore.model.entitiy.User.orders
 [main] TRACE spi.CascadingActions$6 - Cascading to merge: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.AbstractSaveEventListener - Persistent instance of: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.DefaultMergeEventListener - Ignoring persistent instance
 [main] TRACE internal.Cascade - Processing cascade ACTION_MERGE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Cascade ACTION_MERGE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done cascade ACTION_MERGE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done processing cascade ACTION_MERGE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Done processing cascade ACTION_MERGE for: ro.estore.model.entitiy.User
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.update(Object) took 16ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@42aae04d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.User#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 6ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@44af588b], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.updateUserTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@44af588b, testMethod = updateUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@3456558]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.User#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1], CollectionKey[ro.estore.model.entitiy.User.orders#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@42aae04d] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@590adb41] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [bdaba08f-580f-40d4-b5c7-5290ec1b93f2]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@2dfb885e]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@44af588b, testMethod = updateUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@44af588b, testMethod = updateUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6cbe7d4d]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6cbe7d4d, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 92, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.UserRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.userRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.productRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.UserRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6cbe7d4d]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6cbe7d4d], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameFailTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6cbe7d4d, testMethod = findUserByUsernameFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.findUserByUsernameFailTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6cbe7d4d, testMethod = findUserByUsernameFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 93, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6cbe7d4d, testMethod = findUserByUsernameFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameFailTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [a69c363d-798c-48f2-90b4-96e7e40f2728] at timestamp: 14689325651
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@58fa5769]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@36aa52d2] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@4ee25d80] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6cbe7d4d, testMethod = findUserByUsernameFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsername(String)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@4ee25d80] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG internal.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0)
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0)
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@4ee25d80] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0)
 [main] TRACE spi.HQLQueryPlan - Find: select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0
 [main] TRACE spi.QueryParameters - Named parameters: {param0=user0_0}
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_,
        user0_.password as password2_4_,
        user0_.user_profile_id as user_pro4_4_,
        user0_.username as username3_4_ 
    from
        user user0_ 
    where
        user0_.username=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@ba17be6: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@ba17be6: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [user0_0]
 [main] TRACE loader.Loader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@6f798482]
 [main] TRACE loader.Loader - Processing result set
 [main] TRACE loader.Loader - Done processing result set (0 rows)
 [main] TRACE loader.Loader - Total objects hydrated: 0
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@ba17be6: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0_0']
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@6f798482]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@ba17be6: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0_0']
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] ERROR impl.UserRepositoryJpaImpl - No user was found (No entity found for query)
javax.persistence.NoResultException: No entity found for query
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1422)
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getSingleResult(CriteriaQueryTypeQueryAdapter.java:59)
	at ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsername(UserRepositoryJpaImpl.java:33)
	at ro.estore.model.repository.impl.UserRepositoryJpaImpl$$FastClassBySpringCGLIB$$9dbde216.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at ro.estore.aspect.LoggingAspect.logMethodExecutionTime(LoggingAspect.java:46)
	at sun.reflect.GeneratedMethodAccessor25.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655)
	at ro.estore.model.repository.impl.UserRepositoryJpaImpl$$EnhancerBySpringCGLIB$$e58d61f9.findByUsername(<generated>)
	at ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameFailTest(UserRepositoryJpaImplTest.java:98)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:252)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:94)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:191)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsername(String) took 17ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6cbe7d4d], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameFailTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6cbe7d4d, testMethod = findUserByUsernameFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@633cc6b5]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@4ee25d80] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@36aa52d2] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [a69c363d-798c-48f2-90b4-96e7e40f2728]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@6342ff7f]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6cbe7d4d, testMethod = findUserByUsernameFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@6cbe7d4d, testMethod = findUserByUsernameFailTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@403c3a01]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@403c3a01, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 94, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.UserRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.userRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.productRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.UserRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@403c3a01]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@403c3a01], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.createUser()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@403c3a01, testMethod = createUser@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.createUser' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@403c3a01, testMethod = createUser@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 95, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@403c3a01, testMethod = createUser@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserRepositoryJpaImplTest.createUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [05728091-49da-45f0-87e7-74191bfec309] at timestamp: 14689325652
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7da31a40]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@28ee7bee] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@1b5a1d85] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@403c3a01, testMethod = createUser@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: User ro.estore.util.TestUtils.createUser(String)
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: User ro.estore.util.TestUtils.createUser(String) took 0ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1b5a1d85] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        product0_.product_id as product_1_2_0_,
        product0_.brand as brand2_2_0_,
        product0_.description as descript3_2_0_,
        product0_.name as name4_2_0_,
        product0_.price as price5_2_0_,
        product0_.stock as stock6_2_0_ 
    from
        product product0_ 
    where
        product0_.product_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@31e130bf: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@31e130bf: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@54755dd9]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_0_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_0_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_0_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_0_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_0_] : [INTEGER]) - [14]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@54755dd9]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@54755dd9]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@31e130bf: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@31e130bf: select product0_.product_id as product_1_2_0_, product0_.brand as brand2_2_0_, product0_.description as descript3_2_0_, product0_.name as name4_2_0_, product0_.price as price5_2_0_, product0_.stock as stock6_2_0_ from product product0_ where product0_.product_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.Product#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 20ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1b5a1d85] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1b5a1d85] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1b5a1d85] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 1ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1b5a1d85] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.User
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.User#<null>]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.User
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.UserProfile#<null>]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.WrapVisitor - Wrapped collection in role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.UserProfile] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.UserProfile#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.UserProfile#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.UserProfile (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        user_profile
        (email_address, name, phone_number, surname) 
    values
        (?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@765d55d5: insert into user_profile (email_address, name, phone_number, surname) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.UserProfile#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [ceva@email.com_1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [name_1]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [0123456789_1]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [VARCHAR] - [surname_1]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 9
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@2513a118]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@2513a118]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@765d55d5: insert into user_profile (email_address, name, phone_number, surname) values ('ceva@email.com_1', 'name_1', '0123456789_1', 'surname_1')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@765d55d5: insert into user_profile (email_address, name, phone_number, surname) values ('ceva@email.com_1', 'name_1', '0123456789_1', 'surname_1')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Address
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Address] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Address (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        address
        (address_line_1, address_line_2, address_name, city, postcode) 
    values
        (?, ?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@6fc1020a: insert into address (address_line_1, address_line_2, address_name, city, postcode) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [addr line 1_1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [addr line 2_1]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [ceva@email.com_1]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [VARCHAR] - [city_1]
 [main] TRACE sql.BasicBinder - binding parameter [5] as [VARCHAR] - [postcode_1]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 20
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@5762658b]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@5762658b]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@6fc1020a: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1', 'addr line 2_1', 'ceva@email.com_1', 'city_1', 'postcode_1')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@6fc1020a: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1', 'addr line 2_1', 'ceva@email.com_1', 'city_1', 'postcode_1')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Address
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Address] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Address#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Address (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        address
        (address_line_1, address_line_2, address_name, city, postcode) 
    values
        (?, ?, ?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@42a0501e: insert into address (address_line_1, address_line_2, address_name, city, postcode) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Address#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [addr line 1_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [VARCHAR] - [addr line 2_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [ceva@email.com_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [4] as [VARCHAR] - [city_1_2]
 [main] TRACE sql.BasicBinder - binding parameter [5] as [VARCHAR] - [postcode_1_2]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 21
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@6aa3bfc]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@6aa3bfc]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@42a0501e: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1_2', 'addr line 2_1_2', 'ceva@email.com_1_2', 'city_1_2', 'postcode_1_2')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@42a0501e: insert into address (address_line_1, address_line_2, address_name, city, postcode) values ('addr line 1_1_2', 'addr line 2_1_2', 'ceva@email.com_1_2', 'city_1_2', 'postcode_1_2')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Done cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.User
 [main] TRACE internal.WrapVisitor - Wrapped collection in role: ro.estore.model.entitiy.User.orders
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.User] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.User#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.User#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.User (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        user
        (password, user_profile_id, username) 
    values
        (?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@3d1f558a: insert into user (password, user_profile_id, username) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.User#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [username_1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [BIGINT] - [9]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [VARCHAR] - [username_1]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 5
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@6abdec0e]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@6abdec0e]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@3d1f558a: insert into user (password, user_profile_id, username) values ('username_1', 9, 'username_1')]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@3d1f558a: insert into user (password, user_profile_id, username) values ('username_1', 9, 'username_1')]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.User
 [main] TRACE internal.Cascade - Cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.User.orders
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Order
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Order
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Order#<null>]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Address
 [main] TRACE internal.AbstractSaveEventListener - Persistent instance of: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultPersistEventListener - Ignoring persistent instance
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE internal.WrapVisitor - Wrapped collection in role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Order] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Order#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Order#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Order (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        `
        
    order` (
        address_id, user_id
    ) 
values
    (?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@69f0b0f4: insert into `order` (address_id, user_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Order#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [20]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [BIGINT] - [5]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 8
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@66933239]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@66933239]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@69f0b0f4: insert into `order` (address_id, user_id) values (20, 5)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@69f0b0f4: insert into `order` (address_id, user_id) values (20, 5)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Purchase
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Purchase] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Purchase (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        purchase
        (product_id, quantity, order_id) 
    values
        (?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@6801b414: insert into purchase (product_id, quantity, order_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [INTEGER] - [23]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [BIGINT] - [8]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 16
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@177c41d7]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@177c41d7]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@6801b414: insert into purchase (product_id, quantity, order_id) values (1, 23, 8)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@6801b414: insert into purchase (product_id, quantity, order_id) values (1, 23, 8)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Purchase
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Purchase] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Purchase (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        purchase
        (product_id, quantity, order_id) 
    values
        (?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@78a515e4: insert into purchase (product_id, quantity, order_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [INTEGER] - [23]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [BIGINT] - [8]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 17
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@d2291de]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@d2291de]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@78a515e4: insert into purchase (product_id, quantity, order_id) values (1, 23, 8)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@78a515e4: insert into purchase (product_id, quantity, order_id) values (1, 23, 8)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Done cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Order
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Order
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Order#<null>]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Address
 [main] TRACE internal.AbstractSaveEventListener - Persistent instance of: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultPersistEventListener - Ignoring persistent instance
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE internal.WrapVisitor - Wrapped collection in role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Order] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Order#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Order#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Order (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        `
        
    order` (
        address_id, user_id
    ) 
values
    (?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@8cc8cdb: insert into `order` (address_id, user_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Order#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [20]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [BIGINT] - [5]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 9
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@1e236278]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@1e236278]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@8cc8cdb: insert into `order` (address_id, user_id) values (20, 5)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@8cc8cdb: insert into `order` (address_id, user_id) values (20, 5)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Purchase
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Purchase] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Purchase (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        purchase
        (product_id, quantity, order_id) 
    values
        (?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@7301eebe: insert into purchase (product_id, quantity, order_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [INTEGER] - [23]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [BIGINT] - [9]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 18
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@76b47204]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@76b47204]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@7301eebe: insert into purchase (product_id, quantity, order_id) values (1, 23, 9)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@7301eebe: insert into purchase (product_id, quantity, order_id) values (1, 23, 9)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE core.JpaPersistEventListener$1 - Cascading persist to : ro.estore.model.entitiy.Purchase
 [main] TRACE internal.AbstractSaveEventListener - Transient instance of: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultPersistEventListener - Saving transient instance
 [main] TRACE internal.AbstractSaveEventListener - Saving [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE spi.ActionQueue - Adding an EntityIdentityInsertAction for [ro.estore.model.entitiy.Purchase] object
 [main] TRACE spi.ActionQueue - Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.ActionQueue - Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[ro.estore.model.entitiy.Purchase#<null>]]
 [main] TRACE spi.ActionQueue - Executing insertions beforeQuery resolved early-insert
 [main] DEBUG spi.ActionQueue - Executing identity-insert immediately
 [main] TRACE entity.AbstractEntityPersister - Inserting entity: ro.estore.model.entitiy.Purchase (native id)
 [main] DEBUG spi.SqlStatementLogger - 
    insert 
    into
        purchase
        (product_id, quantity, order_id) 
    values
        (?, ?, ?)
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@161aa04a: insert into purchase (product_id, quantity, order_id) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
 [main] TRACE entity.AbstractEntityPersister - Dehydrating entity: [ro.estore.model.entitiy.Purchase#<null>]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE sql.BasicBinder - binding parameter [2] as [INTEGER] - [23]
 [main] TRACE sql.BasicBinder - binding parameter [3] as [BIGINT] - [9]
 [main] DEBUG id.IdentifierGeneratorHelper - Natively generated identity: 19
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@436bd4df]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@436bd4df]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@161aa04a: insert into purchase (product_id, quantity, order_id) values (1, 23, 9)]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@161aa04a: insert into purchase (product_id, quantity, order_id) values (1, 23, 9)]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.Cascade - Done cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Done cascade ACTION_PERSIST_SKIPLAZY for collection: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.Cascade - Done processing cascade ACTION_PERSIST_SKIPLAZY for: ro.estore.model.entitiy.User
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.create(Object) took 229ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@403c3a01], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.createUser()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@403c3a01, testMethod = createUser@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@149b0577]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.Order#8], EntityKey[ro.estore.model.entitiy.Address#21], EntityKey[ro.estore.model.entitiy.Order#9], EntityKey[ro.estore.model.entitiy.Purchase#16], EntityKey[ro.estore.model.entitiy.Address#20], EntityKey[ro.estore.model.entitiy.Purchase#17], EntityKey[ro.estore.model.entitiy.Purchase#18], EntityKey[ro.estore.model.entitiy.Purchase#19], EntityKey[ro.estore.model.entitiy.User#5], EntityKey[ro.estore.model.entitiy.UserProfile#9], EntityKey[ro.estore.model.entitiy.Product#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@1b5a1d85] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@28ee7bee] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [05728091-49da-45f0-87e7-74191bfec309]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@5740ff5e]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@403c3a01, testMethod = createUser@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@403c3a01, testMethod = createUser@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4a901445]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4a901445, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 96, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.UserRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.userRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.productRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.UserRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4a901445]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4a901445], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4a901445, testMethod = findUserByUsernameTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.findUserByUsernameTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4a901445, testMethod = findUserByUsernameTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 97, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4a901445, testMethod = findUserByUsernameTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [299e2ecc-cd68-4341-9157-6a363f1bee7b] at timestamp: 14689325655
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3119cf6f]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@6dc9da2d] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@1d408060] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4a901445, testMethod = findUserByUsernameTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsername(String)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1d408060] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] DEBUG internal.CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0)
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0)
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@1d408060] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE spi.QueryPlanCache - Located HQL query plan in cache (select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0)
 [main] TRACE spi.HQLQueryPlan - Find: select generatedAlias0 from User as generatedAlias0 where generatedAlias0.username=:param0
 [main] TRACE spi.QueryParameters - Named parameters: {param0=user0}
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_,
        user0_.password as password2_4_,
        user0_.user_profile_id as user_pro4_4_,
        user0_.username as username3_4_ 
    from
        user user0_ 
    where
        user0_.username=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@17ba57f0: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@17ba57f0: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [VARCHAR] - [user0]
 [main] TRACE loader.Loader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@3481ff98]
 [main] TRACE loader.Loader - Processing result set
 [main] DEBUG logging.DelegatingBasicLogger - Result set row: 0
 [main] TRACE sql.BasicExtractor - extracted value ([user_id1_4_] : [BIGINT]) - [1]
 [main] DEBUG loader.Loader - Result row: EntityKey[ro.estore.model.entitiy.User#1]
 [main] TRACE loader.Loader - Initializing object from ResultSet: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE sql.BasicExtractor - extracted value ([password2_4_] : [VARCHAR]) - [pass0]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro4_4_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([username3_4_] : [VARCHAR]) - [user0]
 [main] TRACE loader.Loader - Done processing result set (1 rows)
 [main] TRACE loader.Loader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        userprofil0_.user_profile_id as user_pro1_5_0_,
        userprofil0_.email_address as email_ad2_5_0_,
        userprofil0_.name as name3_5_0_,
        userprofil0_.phone_number as phone_nu4_5_0_,
        userprofil0_.surname as surname5_5_0_ 
    from
        user_profile userprofil0_ 
    where
        userprofil0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@3c91530d: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@3c91530d: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@7d70638]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_0_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_0_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_0_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_0_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 1
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@7d70638]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@7d70638]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@3c91530d: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@3c91530d: select userprofil0_.user_profile_id as user_pro1_5_0_, userprofil0_.email_address as email_ad2_5_0_, userprofil0_.name as name3_5_0_, userprofil0_.phone_number as phone_nu4_5_0_, userprofil0_.surname as surname5_5_0_ from user_profile userprofil0_ where userprofil0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.UserProfile#1
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@17ba57f0: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0']
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@3481ff98]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@17ba57f0: select user0_.user_id as user_id1_4_, user0_.password as password2_4_, user0_.user_profile_id as user_pro4_4_, user0_.username as username3_4_ from user user0_ where user0_.username='user0']
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: User ro.estore.model.repository.impl.UserRepositoryJpaImpl.findByUsername(String) took 91ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4a901445], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.findUserByUsernameTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4a901445, testMethod = findUserByUsernameTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@f1dd5b4]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.User#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1], CollectionKey[ro.estore.model.entitiy.User.orders#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@1d408060] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@6dc9da2d] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [299e2ecc-cd68-4341-9157-6a363f1bee7b]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@73809e7]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4a901445, testMethod = findUserByUsernameTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@4a901445, testMethod = findUserByUsernameTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] TRACE context.TestContextManager - prepareTestInstance(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@5f96f6a2]
 [main] DEBUG support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@5f96f6a2, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 98, missCount = 1]
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private org.springframework.core.env.Environment ro.estore.model.repository.impl.UserRepositoryJpaImplTest.env
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'environment'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.UserRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.userRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'userRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.model.repository.ProductRepository ro.estore.model.repository.impl.UserRepositoryJpaImplTest.productRepository
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'productRepositoryJpaImpl'
 [main] DEBUG annotation.InjectionMetadata - Processing injected element of bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest': AutowiredFieldElement for private ro.estore.util.TestUtils ro.estore.model.repository.impl.UserRepositoryJpaImplTest.testUtils
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'testUtils'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
 [main] DEBUG autoproxy.AbstractAutoProxyCreator - Creating implicit proxy for bean 'ro.estore.model.repository.impl.UserRepositoryJpaImplTest' with 0 common interceptors and 4 specific interceptors
 [main] DEBUG framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@5f96f6a2]
 [main] TRACE context.TestContextManager - beforeTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@5f96f6a2], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.deleteUserTest()]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@5f96f6a2, testMethod = deleteUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] DEBUG interceptor.AbstractFallbackTransactionAttributeSource - Adding transactional method 'UserRepositoryJpaImplTest.deleteUserTest' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] DEBUG transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@5f96f6a2, testMethod = deleteUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
 [main] DEBUG cache.DefaultContextCache - Spring test ApplicationContext cache statistics: [DefaultContextCache@572e6fd9 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 99, missCount = 1]
 [main] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'transactionManager'
 [main] DEBUG transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@5f96f6a2, testMethod = deleteUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractPlatformTransactionManager - Creating new transaction with name [ro.estore.model.repository.impl.UserRepositoryJpaImplTest.deleteUserTest]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
 [main] TRACE internal.SessionFactoryImpl$SessionBuilderImpl - Opening Hibernate Session.  tenant=null, owner=null
 [main] TRACE internal.SessionImpl - Opened Session [c1f71988-9cbc-4835-866b-16b0faad19f7] at timestamp: 14689325657
 [main] DEBUG jpa.JpaTransactionManager - Opened new EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for JPA transaction
 [main] DEBUG internal.TransactionImpl - begin
 [main] DEBUG datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/estore_test]
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction begun via JDBC Connection.setAutoCommit(false)
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
 [main] DEBUG jpa.JpaTransactionManager - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@67507df]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.jdbc.datasource.ConnectionHolder@341b13a8] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Bound value [org.springframework.orm.jpa.EntityManagerHolder@692dba54] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Initializing transaction synchronization
 [main] INFO  transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@5f96f6a2, testMethod = deleteUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@10ef5fa0]; rollback [true]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.id' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.id' in [class path resource [test.properties]] with type [String] and value '1'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.username' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.username' in [class path resource [test.properties]] with type [String] and value 'user0'
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemProperties]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [systemEnvironment]
 [main] TRACE env.PropertySourcesPropertyResolver - Searching for key 'default.password' in [class path resource [test.properties]]
 [main] DEBUG env.PropertySourcesPropertyResolver - Found key 'default.password' in [class path resource [test.properties]] with type [String] and value 'pass0'
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@692dba54] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Object not resolved in any cache: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Fetching entity: [ro.estore.model.entitiy.User#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        user0_.user_id as user_id1_4_0_,
        user0_.password as password2_4_0_,
        user0_.user_profile_id as user_pro4_4_0_,
        user0_.username as username3_4_0_,
        userprofil1_.user_profile_id as user_pro1_5_1_,
        userprofil1_.email_address as email_ad2_5_1_,
        userprofil1_.name as name3_5_1_,
        userprofil1_.phone_number as phone_nu4_5_1_,
        userprofil1_.surname as surname5_5_1_ 
    from
        user user0_ 
    inner join
        user_profile userprofil1_ 
            on user0_.user_profile_id=userprofil1_.user_profile_id 
    where
        user0_.user_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@71f1cc02: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@71f1cc02: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@5f14761c]
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro1_5_1_] : [BIGINT]) - [1]
 [main] DEBUG internal.EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.User#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE sql.BasicExtractor - extracted value ([password2_4_0_] : [VARCHAR]) - [pass0]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro4_4_0_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([username3_4_0_] : [VARCHAR]) - [user0]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE sql.BasicExtractor - extracted value ([email_ad2_5_1_] : [VARCHAR]) - [email0@test.com]
 [main] TRACE sql.BasicExtractor - extracted value ([name3_5_1_] : [VARCHAR]) - [name0]
 [main] TRACE sql.BasicExtractor - extracted value ([phone_nu4_5_1_] : [VARCHAR]) - [000000000]
 [main] TRACE sql.BasicExtractor - extracted value ([surname5_5_1_] : [VARCHAR]) - [surname0]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.User#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.UserProfile#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.User#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@5f14761c]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@5f14761c]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@71f1cc02: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@71f1cc02: select user0_.user_id as user_id1_4_0_, user0_.password as password2_4_0_, user0_.user_profile_id as user_pro4_4_0_, user0_.username as username3_4_0_, userprofil1_.user_profile_id as user_pro1_5_1_, userprofil1_.email_address as email_ad2_5_1_, userprofil1_.name as name3_5_1_, userprofil1_.phone_number as phone_nu4_5_1_, userprofil1_.surname as surname5_5_1_ from user user0_ inner join user_profile userprofil1_ on user0_.user_profile_id=userprofil1_.user_profile_id where user0_.user_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedEntityLoader - Done entity load : ro.estore.model.entitiy.User#1
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 48ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@692dba54] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@692dba54] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.User
 [main] TRACE internal.Cascade - Cascade ACTION_DELETE for collection: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.User.orders#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        orders0_.user_id as user_id3_1_0_,
        orders0_.order_id as order_id1_1_0_,
        orders0_.order_id as order_id1_1_1_,
        orders0_.address_id as address_2_1_1_,
        address1_.address_id as address_1_0_2_,
        address1_.address_line_1 as address_2_0_2_,
        address1_.address_line_2 as address_3_0_2_,
        address1_.address_name as address_4_0_2_,
        address1_.city as city5_0_2_,
        address1_.postcode as postcode6_0_2_ 
    from
        `
    order` orders0_ inner join
        address address1_ 
            on orders0_.address_id=address1_.address_id 
    where
        orders0_.user_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@724b939e: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@724b939e: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@6f8aba08]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@6f8aba08]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.User.orders#1]]
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([order_id1_1_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Order#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_1_1_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Address#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE sql.BasicExtractor - extracted value ([address_2_0_2_] : [VARCHAR]) - [addr line 1_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_3_0_2_] : [VARCHAR]) - [addr line 2_0]
 [main] TRACE sql.BasicExtractor - extracted value ([address_4_0_2_] : [VARCHAR]) - [addr name 0]
 [main] TRACE sql.BasicExtractor - extracted value ([city5_0_2_] : [VARCHAR]) - [city0]
 [main] TRACE sql.BasicExtractor - extracted value ([postcode6_0_2_] : [VARCHAR]) - [00000]
 [main] TRACE sql.BasicExtractor - extracted value ([user_id3_1_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.User.orders#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.User.orders#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.User.orders#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.User.orders#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([order_id1_1_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] not located in load context
 [main] TRACE type.CollectionType - Created collection wrapper: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Order#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Address#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.User.orders#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.User.orders#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@6f8aba08, coll=[ro.estore.model.entitiy.User.orders#1]>@462abec3]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@6f8aba08, coll=[ro.estore.model.entitiy.User.orders#1]>@462abec3]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.User.orders#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@6f8aba08]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@6f8aba08]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@724b939e: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@724b939e: select orders0_.user_id as user_id3_1_0_, orders0_.order_id as order_id1_1_0_, orders0_.order_id as order_id1_1_1_, orders0_.address_id as address_2_1_1_, address1_.address_id as address_1_0_2_, address1_.address_line_1 as address_2_0_2_, address1_.address_line_2 as address_3_0_2_, address1_.address_name as address_4_0_2_, address1_.city as city5_0_2_, address1_.postcode as postcode6_0_2_ from `order` orders0_ inner join address address1_ on orders0_.address_id=address1_.address_id where orders0_.user_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] TRACE spi.CascadingActions$1 - Cascading to delete: ro.estore.model.entitiy.Order
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Order#1]
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Cascade ACTION_DELETE for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        purchases0_.order_id as order_id4_3_0_,
        purchases0_.purchase_id as purchase1_3_0_,
        purchases0_.purchase_id as purchase1_3_1_,
        purchases0_.product_id as product_3_3_1_,
        purchases0_.quantity as quantity2_3_1_,
        product1_.product_id as product_1_2_2_,
        product1_.brand as brand2_2_2_,
        product1_.description as descript3_2_2_,
        product1_.name as name4_2_2_,
        product1_.price as price5_2_2_,
        product1_.stock as stock6_2_2_ 
    from
        purchase purchases0_ 
    inner join
        product product1_ 
            on purchases0_.product_id=product1_.product_id 
    where
        purchases0_.order_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@35c9a231: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@35c9a231: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@7a4d582c]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@7a4d582c]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] not located in load context
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_1_2_2_] : [BIGINT]) - [1]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE sql.BasicExtractor - extracted value ([product_3_3_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([quantity2_3_1_] : [INTEGER]) - [4]
 [main] TRACE internal.EntityReferenceInitializerImpl - hydrating entity state
 [main] TRACE internal.EntityReferenceInitializerImpl - Initializing object from ResultSet: [ro.estore.model.entitiy.Product#1]
 [main] TRACE entity.AbstractEntityPersister - Hydrating entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE sql.BasicExtractor - extracted value ([brand2_2_2_] : [VARCHAR]) - [brand0]
 [main] TRACE sql.BasicExtractor - extracted value ([descript3_2_2_] : [VARCHAR]) - [prod0 desc]
 [main] TRACE sql.BasicExtractor - extracted value ([name4_2_2_] : [VARCHAR]) - [prod0]
 [main] TRACE sql.BasicExtractor - extracted value ([price5_2_2_] : [DOUBLE]) - [2.34]
 [main] TRACE sql.BasicExtractor - extracted value ([stock6_2_2_] : [INTEGER]) - [14]
 [main] TRACE sql.BasicExtractor - extracted value ([order_id4_3_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.Order.purchases#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.Order.purchases#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([purchase1_3_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 2
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Purchase#1]
 [main] DEBUG internal.TwoPhaseLoad - Resolving associations for [ro.estore.model.entitiy.Product#1]
 [main] DEBUG internal.TwoPhaseLoad - Done materializing entity [ro.estore.model.entitiy.Product#1]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.Order.purchases#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@7a4d582c, coll=[ro.estore.model.entitiy.Order.purchases#1]>@3dc95b8b]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@7a4d582c, coll=[ro.estore.model.entitiy.Order.purchases#1]>@3dc95b8b]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.Order.purchases#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@7a4d582c]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@7a4d582c]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@35c9a231: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@35c9a231: select purchases0_.order_id as order_id4_3_0_, purchases0_.purchase_id as purchase1_3_0_, purchases0_.purchase_id as purchase1_3_1_, purchases0_.product_id as product_3_3_1_, purchases0_.quantity as quantity2_3_1_, product1_.product_id as product_1_2_2_, product1_.brand as brand2_2_2_, product1_.description as descript3_2_2_, product1_.name as name4_2_2_, product1_.price as price5_2_2_, product1_.stock as stock6_2_2_ from purchase purchases0_ inner join product product1_ on purchases0_.product_id=product1_.product_id where purchases0_.order_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] TRACE spi.CascadingActions$1 - Cascading to delete: ro.estore.model.entitiy.Purchase
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Purchase#1]
 [main] TRACE internal.Cascade - Done cascade ACTION_DELETE for collection: ro.estore.model.entitiy.Order.purchases
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.Order
 [main] TRACE internal.Cascade - Done cascade ACTION_DELETE for collection: ro.estore.model.entitiy.User.orders
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.User
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.User
 [main] TRACE spi.CascadingActions$1 - Cascading to delete: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.UserProfile#1]
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Cascade ACTION_DELETE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Initializing collection [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Checking second-level cache
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection not cached
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG spi.SqlStatementLogger - 
    select
        addresses0_.user_profile_id as user_pro7_0_0_,
        addresses0_.address_id as address_1_0_0_,
        addresses0_.address_id as address_1_0_1_,
        addresses0_.address_line_1 as address_2_0_1_,
        addresses0_.address_line_2 as address_3_0_1_,
        addresses0_.address_name as address_4_0_1_,
        addresses0_.city as city5_0_1_,
        addresses0_.postcode as postcode6_0_1_ 
    from
        address addresses0_ 
    where
        addresses0_.user_profile_id=?
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering statement [com.mysql.jdbc.JDBC42PreparedStatement@2d55e826: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE internal.JdbcCoordinatorImpl - Registering last query statement [com.mysql.jdbc.JDBC42PreparedStatement@2d55e826: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=** NOT SPECIFIED **]
 [main] TRACE sql.BasicBinder - binding parameter [1] as [BIGINT] - [1]
 [main] TRACE internal.AbstractLoadPlanBasedLoader - Bound [2] parameters total
 [main] TRACE internal.ResourceRegistryStandardImpl - Registering result set [com.mysql.jdbc.JDBC42ResultSet@4d1ff6b1]
 [main] DEBUG internal.ResultSetProcessorImpl - Preparing collection intializer : [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.LoadContexts - Constructing collection load context for result set [com.mysql.jdbc.JDBC42ResultSet@4d1ff6b1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] not located in load context
 [main] TRACE internal.CollectionLoadContext - Collection not yet initialized; initializing
 [main] TRACE internal.ResultSetProcessorImpl - Processing result set
 [main] DEBUG internal.ResultSetProcessorImpl - Starting ResultSet row #0
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_1_] : [BIGINT]) - [1]
 [main] TRACE sql.BasicExtractor - extracted value ([user_pro7_0_0_] : [BIGINT]) - [1]
 [main] DEBUG internal.CollectionReferenceInitializerImpl - Found row of collection: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] TRACE internal.CollectionLoadContext - Starting attempt to find loading collection [[ro.estore.model.entitiy.UserProfile.addresses#1]]
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Found loading collection bound to current result set processing; reading row
 [main] TRACE sql.BasicExtractor - extracted value ([address_1_0_0_] : [BIGINT]) - [1]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.DefaultLoadEventListener - Resolved object in session cache: [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.ResultSetProcessorImpl - Done processing result set (1 rows)
 [main] TRACE internal.AbstractRowReader - Total objects hydrated: 0
 [main] TRACE internal.LoadContexts - Attempting to locate loading collection entry [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] in any result-set context
 [main] TRACE internal.LoadContexts - Collection [CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1]] located in load context
 [main] TRACE internal.CollectionLoadContext - Removing collection load entry [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@4d1ff6b1, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@45f756e6]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections were found in result set for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.CollectionLoadContext - Ending loading collection [org.hibernate.engine.loading.internal.LoadingCollectionEntry<rs=com.mysql.jdbc.JDBC42ResultSet@4d1ff6b1, coll=[ro.estore.model.entitiy.UserProfile.addresses#1]>@45f756e6]
 [main] DEBUG internal.CollectionLoadContext - Collection fully initialized: [ro.estore.model.entitiy.UserProfile.addresses#1]
 [main] DEBUG logging.DelegatingBasicLogger - 1 collections initialized for role: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.ResultSetProcessingContextImpl - Skipping create subselects because there are fewer than 2 results, so query by key is more efficient.
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing result set [com.mysql.jdbc.JDBC42ResultSet@4d1ff6b1]
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing result set [com.mysql.jdbc.JDBC42ResultSet@4d1ff6b1]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing statement [com.mysql.jdbc.JDBC42PreparedStatement@2d55e826: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] DEBUG internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
 [main] TRACE internal.ResourceRegistryStandardImpl - Closing prepared statement [com.mysql.jdbc.JDBC42PreparedStatement@2d55e826: select addresses0_.user_profile_id as user_pro7_0_0_, addresses0_.address_id as address_1_0_0_, addresses0_.address_id as address_1_0_1_, addresses0_.address_line_1 as address_2_0_1_, addresses0_.address_line_2 as address_3_0_1_, addresses0_.address_name as address_4_0_1_, addresses0_.city as city5_0_1_, addresses0_.postcode as postcode6_0_1_ from address addresses0_ where addresses0_.user_profile_id=1]
 [main] TRACE internal.JdbcCoordinatorImpl - Starting afterQuery statement execution processing [ON_CLOSE]
 [main] TRACE internal.StatefulPersistenceContext - Initializing non-lazy collections
 [main] DEBUG plan.AbstractLoadPlanBasedCollectionInitializer - Done loading collection
 [main] TRACE internal.DefaultInitializeCollectionEventListener - Collection initialized
 [main] TRACE spi.CascadingActions$1 - Cascading to delete: ro.estore.model.entitiy.Address
 [main] TRACE internal.DefaultDeleteEventListener - Deleting a persistent instance
 [main] TRACE internal.DefaultDeleteEventListener - Deleting [ro.estore.model.entitiy.Address#1]
 [main] TRACE internal.Cascade - Done cascade ACTION_DELETE for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Deleting orphans for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done deleting orphans for collection: ro.estore.model.entitiy.UserProfile.addresses
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.UserProfile
 [main] TRACE internal.Cascade - Done processing cascade ACTION_DELETE for: ro.estore.model.entitiy.User
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: void ro.estore.model.repository.impl.GenericRepositoryJpaImpl.remove(Object) took 155ms to execute.
	=====================================================================
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Calling method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable)
	=====================================================================
 [main] TRACE support.TransactionSynchronizationManager - Retrieved value [org.springframework.orm.jpa.EntityManagerHolder@692dba54] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] bound to thread [main]
 [main] TRACE internal.DefaultLoadEventListener - Loading entity: [ro.estore.model.entitiy.User#1]
 [main] TRACE internal.DefaultLoadEventListener - Attempting to resolve: [ro.estore.model.entitiy.User#1]
 [main] DEBUG internal.DefaultLoadEventListener - Load request found matching entity in context, but it is scheduled for removal; returning null
 [main] INFO  aspect.LoggingAspect - 
	=====================================================================
	Method: Object ro.estore.model.repository.impl.GenericRepositoryJpaImpl.findById(Serializable) took 2ms to execute.
	=====================================================================
 [main] TRACE context.TestContextManager - afterTestMethod(): instance [ro.estore.model.repository.impl.UserRepositoryJpaImplTest@5f96f6a2], method [public void ro.estore.model.repository.impl.UserRepositoryJpaImplTest.deleteUserTest()], exception [null]
 [main] TRACE transaction.TransactionContext - Ending transaction for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@5f96f6a2, testMethod = deleteUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]; transaction status [org.springframework.transaction.support.DefaultTransactionStatus@329548d0]; rollback [true]
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering beforeCompletion synchronization
 [main] DEBUG support.AbstractPlatformTransactionManager - Initiating transaction rollback
 [main] DEBUG jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [SessionImpl(PersistenceContext[entityKeys=[EntityKey[ro.estore.model.entitiy.UserProfile#1], EntityKey[ro.estore.model.entitiy.Order#1], EntityKey[ro.estore.model.entitiy.Product#1], EntityKey[ro.estore.model.entitiy.User#1], EntityKey[ro.estore.model.entitiy.Purchase#1], EntityKey[ro.estore.model.entitiy.Address#1]],collectionKeys=[CollectionKey[ro.estore.model.entitiy.UserProfile.addresses#1], CollectionKey[ro.estore.model.entitiy.User.orders#1], CollectionKey[ro.estore.model.entitiy.Order.purchases#1]]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=5} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
 [main] DEBUG internal.TransactionImpl - rolling back
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Preparing to rollback transaction via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - Transaction rolled-back via JDBC Connection.rollback()
 [main] TRACE internal.AbstractLogicalConnectionImplementor - LogicalConnection#afterTransaction
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.AbstractLogicalConnectionImplementor - re-enabling auto-commit on JDBC Connection afterQuery completion of JDBC-based transaction
 [main] TRACE internal.JdbcResourceLocalTransactionCoordinatorImpl - ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
 [main] TRACE logging.DelegatingBasicLogger - SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
 [main] TRACE internal.SessionImpl - SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
 [main] TRACE support.AbstractPlatformTransactionManager - Triggering afterCompletion synchronization
 [main] TRACE support.TransactionSynchronizationManager - Clearing transaction synchronization
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.orm.jpa.EntityManagerHolder@692dba54] for key [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean@25da615a] from thread [main]
 [main] TRACE support.TransactionSynchronizationManager - Removed value [org.springframework.jdbc.datasource.ConnectionHolder@341b13a8] for key [org.springframework.jdbc.datasource.DriverManagerDataSource@1b266842] from thread [main]
 [main] DEBUG jpa.JpaTransactionManager - Closing JPA EntityManager [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
 [main] DEBUG jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
 [main] TRACE internal.SessionImpl - Closing session [c1f71988-9cbc-4835-866b-16b0faad19f7]
 [main] TRACE internal.JdbcCoordinatorImpl - Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@3003827c]
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Closing logical connection
 [main] TRACE internal.ResourceRegistryStandardImpl - Releasing JDBC resources
 [main] TRACE internal.LogicalConnectionManagedImpl - Logical connection closed
 [main] INFO  transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@5f96f6a2, testMethod = deleteUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = ro.estore.model.repository.impl.UserRepositoryJpaImplTest@5f96f6a2, testMethod = deleteUserTest@UserRepositoryJpaImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
 [main] TRACE context.TestContextManager - afterTestClass(): class [ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [main] DEBUG support.AbstractDirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@43982337 testClass = UserRepositoryJpaImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5b275811 testClass = UserRepositoryJpaImplTest, locations = '{}', classes = '{class ro.estore.model.config.JpaHibernateTestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].
 [Thread-1] INFO  support.AbstractApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@6321e813: startup date [Tue Jul 19 15:49:08 EEST 2016]; root of context hierarchy
 [Thread-1] TRACE support.AbstractApplicationContext - Publishing event in org.springframework.context.support.GenericApplicationContext@6321e813: org.springframework.context.event.ContextClosedEvent[source=org.springframework.context.support.GenericApplicationContext@6321e813: startup date [Tue Jul 19 15:49:08 EEST 2016]; root of context hierarchy]
 [Thread-1] DEBUG support.AbstractBeanFactory - Returning cached instance of singleton bean 'lifecycleProcessor'
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@146044d7: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,jpaHibernateTestConfig,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor,addressConverter,orderConverter,productConverter,purchaseConverter,userConverter,userProfileConverter,addressRepositoryJpaImpl,orderRepositoryJpaImpl,productRepositoryJpaImpl,purchaseRepositoryJpaImpl,userProfileRepositoryJpaImpl,userRepositoryJpaImpl,addressServiceImpl,orderServiceImpl,productServiceImpl,purchaseServiceImpl,userProfileServiceImpl,userServiceImpl,loggingAspect,testUtils,org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration,org.springframework.transaction.config.internalTransactionAdvisor,transactionAttributeSource,transactionInterceptor,org.springframework.transaction.config.internalTransactionalEventListenerFactory,ro.estore.model.config.RootJpaHibernateConfig,transactionManager,entityManagerFactory,dataSource,org.springframework.aop.config.internalAutoProxyCreator]; root of factory hierarchy
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'entityManagerFactory': [addressRepositoryJpaImpl, orderRepositoryJpaImpl, productRepositoryJpaImpl, purchaseRepositoryJpaImpl, userProfileRepositoryJpaImpl, userRepositoryJpaImpl, transactionManager]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'addressRepositoryJpaImpl': [addressServiceImpl, ro.estore.model.repository.impl.AddressRepositoryJpaImplTest]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'addressServiceImpl': [userServiceImpl, ro.estore.domain.service.impl.AddressServiceImplTest]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'userServiceImpl': [ro.estore.domain.service.impl.UserServiceImplTest]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'orderRepositoryJpaImpl': [orderServiceImpl, ro.estore.model.repository.impl.OrderRepositoryJpaImplTest]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'orderServiceImpl': [ro.estore.domain.service.impl.OrderServiceImplTest]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'productRepositoryJpaImpl': [productServiceImpl, ro.estore.model.repository.impl.ProductRepositoryJpaImplTest, ro.estore.model.repository.impl.UserRepositoryJpaImplTest]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'productServiceImpl': [ro.estore.domain.service.impl.ProductServiceImplTest]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'purchaseRepositoryJpaImpl': [purchaseServiceImpl, ro.estore.model.repository.impl.PurchaseRepositoryJpaImplTest]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'purchaseServiceImpl': [ro.estore.domain.service.impl.PurchaseServiceImplTest]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'userProfileRepositoryJpaImpl': [userProfileServiceImpl, ro.estore.model.repository.impl.UserProfileRepositoryJpaImplTest]
 [Thread-1] DEBUG support.DefaultSingletonBeanRegistry - Retrieved dependent beans for bean 'userProfileServiceImpl': [ro.estore.domain.service.impl.UserProfileServiceImplTest]
 [Thread-1] DEBUG support.DisposableBeanAdapter - Invoking destroy() on bean with name 'entityManagerFactory'
 [Thread-1] INFO  jpa.AbstractEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
 [Thread-1] DEBUG internal.SessionFactoryImpl - HHH000031: Closing
 [Thread-1] TRACE spi.QueryPlanCache - Cleaning QueryPlan Cache
 [Thread-1] TRACE spi.CascadeStyles - Registering external cascade style [persist : STYLE_PERSIST]
 [Thread-1] DEBUG spi.CascadeStyles - External cascade style regsitration [persist : STYLE_PERSIST] overrode base registration [STYLE_PERSIST_SKIPLAZY]
 [Thread-1] DEBUG internal.AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
 [Thread-1] DEBUG internal.BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
